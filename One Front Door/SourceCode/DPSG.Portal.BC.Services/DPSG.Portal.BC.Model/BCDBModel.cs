#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the ContextGenerator.ttinclude code generation file.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Linq;
using System.Linq.Expressions;
using System.Data.Common;
using System.Collections.Generic;
using Telerik.OpenAccess;
using Telerik.OpenAccess.Metadata;
using Telerik.OpenAccess.Data.Common;
using Telerik.OpenAccess.Metadata.Fluent;
using Telerik.OpenAccess.Metadata.Fluent.Advanced;
using DPSG.Portal.BC.Model;

namespace DPSG.Portal.BC.Model	
{
	public partial class BCDBModel : OpenAccessContext, IBCDBModelUnitOfWork
	{
		private static string connectionStringName = @"Portal_DataConnection";
			
		private static BackendConfiguration backend = GetBackendConfiguration();
				
		private static MetadataSource metadataSource = XmlMetadataSource.FromAssemblyResource("BCDBModel.rlinq");
		
		public BCDBModel()
			:base(connectionStringName, backend, metadataSource)
		{ }
		
		public BCDBModel(string connection)
			:base(connection, backend, metadataSource)
		{ }
		
		public BCDBModel(BackendConfiguration backendConfiguration)
			:base(connectionStringName, backendConfiguration, metadataSource)
		{ }
			
		public BCDBModel(string connection, MetadataSource metadataSource)
			:base(connection, backend, metadataSource)
		{ }
		
		public BCDBModel(string connection, BackendConfiguration backendConfiguration, MetadataSource metadataSource)
			:base(connection, backendConfiguration, metadataSource)
		{ }
			
		public IQueryable<Bottler> Bottlers 
		{
			get
			{
				return this.GetAll<Bottler>();
			}
		}
		
		public IQueryable<RegionalChain> RegionalChains 
		{
			get
			{
				return this.GetAll<RegionalChain>();
			}
		}
		
		public IQueryable<NationalChain> NationalChains 
		{
			get
			{
				return this.GetAll<NationalChain>();
			}
		}
		
		public IQueryable<LocalChain> LocalChains 
		{
			get
			{
				return this.GetAll<LocalChain>();
			}
		}
		
		public IQueryable<TradeMark> TradeMarks 
		{
			get
			{
				return this.GetAll<TradeMark>();
			}
		}
		
		public IQueryable<Package> Packages 
		{
			get
			{
				return this.GetAll<Package>();
			}
		}
		
		public IQueryable<Brand> Brands 
		{
			get
			{
				return this.GetAll<Brand>();
			}
		}
		
		public IQueryable<TieInReasonMaster> TieInReasonMasters 
		{
			get
			{
				return this.GetAll<TieInReasonMaster>();
			}
		}
		
		public IQueryable<SystemPackage> SystemPackages 
		{
			get
			{
				return this.GetAll<SystemPackage>();
			}
		}
		
		public IQueryable<LOSDisplayLocation> LOSDisplayLocations 
		{
			get
			{
				return this.GetAll<LOSDisplayLocation>();
			}
		}
		
		public IQueryable<LO> LOs 
		{
			get
			{
				return this.GetAll<LO>();
			}
		}
		
		public IQueryable<BottlerAccountTradeMark> BottlerAccountTradeMarks 
		{
			get
			{
				return this.GetAll<BottlerAccountTradeMark>();
			}
		}
		
		public IQueryable<StoreCondition> StoreConditions 
		{
			get
			{
				return this.GetAll<StoreCondition>();
			}
		}
		
		public IQueryable<SystemPickList> SystemPickLists 
		{
			get
			{
				return this.GetAll<SystemPickList>();
			}
		}
		
		public IQueryable<PickList> PickLists 
		{
			get
			{
				return this.GetAll<PickList>();
			}
		}
		
		public IQueryable<Zone> Zones 
		{
			get
			{
				return this.GetAll<Zone>();
			}
		}
		
		public IQueryable<TotalCompany> TotalCompanies 
		{
			get
			{
				return this.GetAll<TotalCompany>();
			}
		}
		
		public IQueryable<System> Systems 
		{
			get
			{
				return this.GetAll<System>();
			}
		}
		
		public IQueryable<Region> Regions 
		{
			get
			{
				return this.GetAll<Region>();
			}
		}
		
		public IQueryable<Division> Divisions 
		{
			get
			{
				return this.GetAll<Division>();
			}
		}
		
		public IQueryable<Country> Countries 
		{
			get
			{
				return this.GetAll<Country>();
			}
		}
		
		public IQueryable<BCSalesAccountability> BCSalesAccountabilities 
		{
			get
			{
				return this.GetAll<BCSalesAccountability>();
			}
		}
		
		public IQueryable<SuperChannel> SuperChannels 
		{
			get
			{
				return this.GetAll<SuperChannel>();
			}
		}
		
		public IQueryable<Channel> Channels 
		{
			get
			{
				return this.GetAll<Channel>();
			}
		}
		
		public IQueryable<TieInReason> TieInReasons 
		{
			get
			{
				return this.GetAll<TieInReason>();
			}
		}
		
		public IQueryable<DisplayTypeMaster> DisplayTypeMasters 
		{
			get
			{
				return this.GetAll<DisplayTypeMaster>();
			}
		}
		
		public IQueryable<Config> Configs 
		{
			get
			{
				return this.GetAll<Config>();
			}
		}
		
		public IQueryable<TBottlerTrademark> TBottlerTrademarks 
		{
			get
			{
				return this.GetAll<TBottlerTrademark>();
			}
		}
		
		public IQueryable<DisplayLocation> DisplayLocations 
		{
			get
			{
				return this.GetAll<DisplayLocation>();
			}
		}
		
		public IQueryable<SystemTradeMark> SystemTradeMarks 
		{
			get
			{
				return this.GetAll<SystemTradeMark>();
			}
		}
		
		public IQueryable<StoreTieInRate> StoreTieInRates 
		{
			get
			{
				return this.GetAll<StoreTieInRate>();
			}
		}
		
		public IQueryable<StoreConditionDisplayDetail> StoreConditionDisplayDetails 
		{
			get
			{
				return this.GetAll<StoreConditionDisplayDetail>();
			}
		}
		
		public IQueryable<StoreConditionDisplay> StoreConditionDisplays 
		{
			get
			{
				return this.GetAll<StoreConditionDisplay>();
			}
		}
		
		public IQueryable<SystemBrand> SystemBrands 
		{
			get
			{
				return this.GetAll<SystemBrand>();
			}
		}
		
		public IQueryable<Milestone> Milestones 
		{
			get
			{
				return this.GetAll<Milestone>();
			}
		}
		
		public static BackendConfiguration GetBackendConfiguration()
		{
			BackendConfiguration backend = new BackendConfiguration();
			backend.Backend = "MsSql";
			backend.ProviderName = "System.Data.SqlClient";
			backend.Logging.MetricStoreSnapshotInterval = 0;
			backend.ConnectionPool.MaxActive = 50;
		
			CustomizeBackendConfiguration(ref backend);
		
			return backend;
		}
		
		/// <summary>
		/// Allows you to customize the BackendConfiguration of BCDBModel.
		/// </summary>
		/// <param name="config">The BackendConfiguration of BCDBModel.</param>
		static partial void CustomizeBackendConfiguration(ref BackendConfiguration config);
		
	}
	
	public interface IBCDBModelUnitOfWork : IUnitOfWork
	{
		IQueryable<Bottler> Bottlers
		{
			get;
		}
		IQueryable<RegionalChain> RegionalChains
		{
			get;
		}
		IQueryable<NationalChain> NationalChains
		{
			get;
		}
		IQueryable<LocalChain> LocalChains
		{
			get;
		}
		IQueryable<TradeMark> TradeMarks
		{
			get;
		}
		IQueryable<Package> Packages
		{
			get;
		}
		IQueryable<Brand> Brands
		{
			get;
		}
		IQueryable<TieInReasonMaster> TieInReasonMasters
		{
			get;
		}
		IQueryable<SystemPackage> SystemPackages
		{
			get;
		}
		IQueryable<LOSDisplayLocation> LOSDisplayLocations
		{
			get;
		}
		IQueryable<LO> LOs
		{
			get;
		}
		IQueryable<BottlerAccountTradeMark> BottlerAccountTradeMarks
		{
			get;
		}
		IQueryable<StoreCondition> StoreConditions
		{
			get;
		}
		IQueryable<SystemPickList> SystemPickLists
		{
			get;
		}
		IQueryable<PickList> PickLists
		{
			get;
		}
		IQueryable<Zone> Zones
		{
			get;
		}
		IQueryable<TotalCompany> TotalCompanies
		{
			get;
		}
		IQueryable<System> Systems
		{
			get;
		}
		IQueryable<Region> Regions
		{
			get;
		}
		IQueryable<Division> Divisions
		{
			get;
		}
		IQueryable<Country> Countries
		{
			get;
		}
		IQueryable<BCSalesAccountability> BCSalesAccountabilities
		{
			get;
		}
		IQueryable<SuperChannel> SuperChannels
		{
			get;
		}
		IQueryable<Channel> Channels
		{
			get;
		}
		IQueryable<TieInReason> TieInReasons
		{
			get;
		}
		IQueryable<DisplayTypeMaster> DisplayTypeMasters
		{
			get;
		}
		IQueryable<Config> Configs
		{
			get;
		}
		IQueryable<TBottlerTrademark> TBottlerTrademarks
		{
			get;
		}
		IQueryable<DisplayLocation> DisplayLocations
		{
			get;
		}
		IQueryable<SystemTradeMark> SystemTradeMarks
		{
			get;
		}
		IQueryable<StoreTieInRate> StoreTieInRates
		{
			get;
		}
		IQueryable<StoreConditionDisplayDetail> StoreConditionDisplayDetails
		{
			get;
		}
		IQueryable<StoreConditionDisplay> StoreConditionDisplays
		{
			get;
		}
		IQueryable<SystemBrand> SystemBrands
		{
			get;
		}
		IQueryable<Milestone> Milestones
		{
			get;
		}
	}
}
#pragma warning restore 1591
