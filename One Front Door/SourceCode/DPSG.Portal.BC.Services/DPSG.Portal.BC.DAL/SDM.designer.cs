#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18063
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DPSG.Portal.BC.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Portal_Data_INT")]
	public partial class SDMDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertStoreCondition(StoreCondition instance);
    partial void UpdateStoreCondition(StoreCondition instance);
    partial void DeleteStoreCondition(StoreCondition instance);
    partial void InsertStoreConditionDisplayDetail(StoreConditionDisplayDetail instance);
    partial void UpdateStoreConditionDisplayDetail(StoreConditionDisplayDetail instance);
    partial void DeleteStoreConditionDisplayDetail(StoreConditionDisplayDetail instance);
    partial void InsertStoreTieInRate(StoreTieInRate instance);
    partial void UpdateStoreTieInRate(StoreTieInRate instance);
    partial void DeleteStoreTieInRate(StoreTieInRate instance);
    partial void InsertStoreConditionNote(StoreConditionNote instance);
    partial void UpdateStoreConditionNote(StoreConditionNote instance);
    partial void DeleteStoreConditionNote(StoreConditionNote instance);
    partial void InsertPriorityStoreConditionExecution(PriorityStoreConditionExecution instance);
    partial void UpdatePriorityStoreConditionExecution(PriorityStoreConditionExecution instance);
    partial void DeletePriorityStoreConditionExecution(PriorityStoreConditionExecution instance);
    partial void InsertPromotionExecution(PromotionExecution instance);
    partial void UpdatePromotionExecution(PromotionExecution instance);
    partial void DeletePromotionExecution(PromotionExecution instance);
    partial void InsertStoreConditionDisplay(StoreConditionDisplay instance);
    partial void UpdateStoreConditionDisplay(StoreConditionDisplay instance);
    partial void DeleteStoreConditionDisplay(StoreConditionDisplay instance);
    #endregion
		
		public SDMDataContext() : 
				base(global::DPSG.Portal.BC.DAL.Properties.Settings.Default.Portal_Data_INTConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SDMDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SDMDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SDMDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SDMDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<StoreCondition> StoreConditions
		{
			get
			{
				return this.GetTable<StoreCondition>();
			}
		}
		
		public System.Data.Linq.Table<StoreConditionDisplayDetail> StoreConditionDisplayDetails
		{
			get
			{
				return this.GetTable<StoreConditionDisplayDetail>();
			}
		}
		
		public System.Data.Linq.Table<StoreTieInRate> StoreTieInRates
		{
			get
			{
				return this.GetTable<StoreTieInRate>();
			}
		}
		
		public System.Data.Linq.Table<StoreConditionNote> StoreConditionNotes
		{
			get
			{
				return this.GetTable<StoreConditionNote>();
			}
		}
		
		public System.Data.Linq.Table<PriorityStoreConditionExecution> PriorityStoreConditionExecutions
		{
			get
			{
				return this.GetTable<PriorityStoreConditionExecution>();
			}
		}
		
		public System.Data.Linq.Table<PromotionExecution> PromotionExecutions
		{
			get
			{
				return this.GetTable<PromotionExecution>();
			}
		}
		
		public System.Data.Linq.Table<StoreConditionDisplay> StoreConditionDisplays
		{
			get
			{
				return this.GetTable<StoreConditionDisplay>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="BCMyday.pGetManagementPriorityIDsForBottler")]
		public ISingleResult<pGetManagementPriorityIDsForBottlerResult> pGetManagementPriorityIDsForBottler([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BottlerID", DbType="Int")] System.Nullable<int> bottlerID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), bottlerID);
			return ((ISingleResult<pGetManagementPriorityIDsForBottlerResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="BCMyday.StoreCondition")]
	public partial class StoreCondition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StoreConditionID;
		
		private System.Nullable<int> _AccountId;
		
		private System.Nullable<System.DateTime> _ConditionDate;
		
		private string _GSN;
		
		private System.Nullable<int> _BCSystemID;
		
		private System.Nullable<double> _Longitude;
		
		private System.Nullable<double> _Latitude;
		
		private string _StoreNote;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _BottlerID;
		
		private System.Nullable<bool> _IsActive;
		
		private string _Name;
		
		private EntitySet<StoreTieInRate> _StoreTieInRates;
		
		private EntitySet<StoreConditionNote> _StoreConditionNotes;
		
		private EntitySet<PriorityStoreConditionExecution> _PriorityStoreConditionExecutions;
		
		private EntitySet<PromotionExecution> _PromotionExecutions;
		
		private EntitySet<StoreConditionDisplay> _StoreConditionDisplays;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStoreConditionIDChanging(int value);
    partial void OnStoreConditionIDChanged();
    partial void OnAccountIdChanging(System.Nullable<int> value);
    partial void OnAccountIdChanged();
    partial void OnConditionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnConditionDateChanged();
    partial void OnGSNChanging(string value);
    partial void OnGSNChanged();
    partial void OnBCSystemIDChanging(System.Nullable<int> value);
    partial void OnBCSystemIDChanged();
    partial void OnLongitudeChanging(System.Nullable<double> value);
    partial void OnLongitudeChanged();
    partial void OnLatitudeChanging(System.Nullable<double> value);
    partial void OnLatitudeChanged();
    partial void OnStoreNoteChanging(string value);
    partial void OnStoreNoteChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnBottlerIDChanging(System.Nullable<int> value);
    partial void OnBottlerIDChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public StoreCondition()
		{
			this._StoreTieInRates = new EntitySet<StoreTieInRate>(new Action<StoreTieInRate>(this.attach_StoreTieInRates), new Action<StoreTieInRate>(this.detach_StoreTieInRates));
			this._StoreConditionNotes = new EntitySet<StoreConditionNote>(new Action<StoreConditionNote>(this.attach_StoreConditionNotes), new Action<StoreConditionNote>(this.detach_StoreConditionNotes));
			this._PriorityStoreConditionExecutions = new EntitySet<PriorityStoreConditionExecution>(new Action<PriorityStoreConditionExecution>(this.attach_PriorityStoreConditionExecutions), new Action<PriorityStoreConditionExecution>(this.detach_PriorityStoreConditionExecutions));
			this._PromotionExecutions = new EntitySet<PromotionExecution>(new Action<PromotionExecution>(this.attach_PromotionExecutions), new Action<PromotionExecution>(this.detach_PromotionExecutions));
			this._StoreConditionDisplays = new EntitySet<StoreConditionDisplay>(new Action<StoreConditionDisplay>(this.attach_StoreConditionDisplays), new Action<StoreConditionDisplay>(this.detach_StoreConditionDisplays));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreConditionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StoreConditionID
		{
			get
			{
				return this._StoreConditionID;
			}
			set
			{
				if ((this._StoreConditionID != value))
				{
					this.OnStoreConditionIDChanging(value);
					this.SendPropertyChanging();
					this._StoreConditionID = value;
					this.SendPropertyChanged("StoreConditionID");
					this.OnStoreConditionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int")]
		public System.Nullable<int> AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ConditionDate
		{
			get
			{
				return this._ConditionDate;
			}
			set
			{
				if ((this._ConditionDate != value))
				{
					this.OnConditionDateChanging(value);
					this.SendPropertyChanging();
					this._ConditionDate = value;
					this.SendPropertyChanged("ConditionDate");
					this.OnConditionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GSN", DbType="VarChar(50)")]
		public string GSN
		{
			get
			{
				return this._GSN;
			}
			set
			{
				if ((this._GSN != value))
				{
					this.OnGSNChanging(value);
					this.SendPropertyChanging();
					this._GSN = value;
					this.SendPropertyChanged("GSN");
					this.OnGSNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BCSystemID", DbType="Int")]
		public System.Nullable<int> BCSystemID
		{
			get
			{
				return this._BCSystemID;
			}
			set
			{
				if ((this._BCSystemID != value))
				{
					this.OnBCSystemIDChanging(value);
					this.SendPropertyChanging();
					this._BCSystemID = value;
					this.SendPropertyChanged("BCSystemID");
					this.OnBCSystemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float")]
		public System.Nullable<double> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Float")]
		public System.Nullable<double> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreNote", DbType="VarChar(200)")]
		public string StoreNote
		{
			get
			{
				return this._StoreNote;
			}
			set
			{
				if ((this._StoreNote != value))
				{
					this.OnStoreNoteChanging(value);
					this.SendPropertyChanging();
					this._StoreNote = value;
					this.SendPropertyChanged("StoreNote");
					this.OnStoreNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="VarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="VarChar(50)")]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BottlerID", DbType="Int")]
		public System.Nullable<int> BottlerID
		{
			get
			{
				return this._BottlerID;
			}
			set
			{
				if ((this._BottlerID != value))
				{
					this.OnBottlerIDChanging(value);
					this.SendPropertyChanging();
					this._BottlerID = value;
					this.SendPropertyChanged("BottlerID");
					this.OnBottlerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreCondition_StoreTieInRate", Storage="_StoreTieInRates", ThisKey="StoreConditionID", OtherKey="StoreConditionID")]
		public EntitySet<StoreTieInRate> StoreTieInRates
		{
			get
			{
				return this._StoreTieInRates;
			}
			set
			{
				this._StoreTieInRates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreCondition_StoreConditionNote", Storage="_StoreConditionNotes", ThisKey="StoreConditionID", OtherKey="StoreConditionID")]
		public EntitySet<StoreConditionNote> StoreConditionNotes
		{
			get
			{
				return this._StoreConditionNotes;
			}
			set
			{
				this._StoreConditionNotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreCondition_PriorityStoreConditionExecution", Storage="_PriorityStoreConditionExecutions", ThisKey="StoreConditionID", OtherKey="StoreConditionID")]
		public EntitySet<PriorityStoreConditionExecution> PriorityStoreConditionExecutions
		{
			get
			{
				return this._PriorityStoreConditionExecutions;
			}
			set
			{
				this._PriorityStoreConditionExecutions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreCondition_PromotionExecution", Storage="_PromotionExecutions", ThisKey="StoreConditionID", OtherKey="StoreConditionID")]
		public EntitySet<PromotionExecution> PromotionExecutions
		{
			get
			{
				return this._PromotionExecutions;
			}
			set
			{
				this._PromotionExecutions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreCondition_StoreConditionDisplay", Storage="_StoreConditionDisplays", ThisKey="StoreConditionID", OtherKey="StoreConditionID")]
		public EntitySet<StoreConditionDisplay> StoreConditionDisplays
		{
			get
			{
				return this._StoreConditionDisplays;
			}
			set
			{
				this._StoreConditionDisplays.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StoreTieInRates(StoreTieInRate entity)
		{
			this.SendPropertyChanging();
			entity.StoreCondition = this;
		}
		
		private void detach_StoreTieInRates(StoreTieInRate entity)
		{
			this.SendPropertyChanging();
			entity.StoreCondition = null;
		}
		
		private void attach_StoreConditionNotes(StoreConditionNote entity)
		{
			this.SendPropertyChanging();
			entity.StoreCondition = this;
		}
		
		private void detach_StoreConditionNotes(StoreConditionNote entity)
		{
			this.SendPropertyChanging();
			entity.StoreCondition = null;
		}
		
		private void attach_PriorityStoreConditionExecutions(PriorityStoreConditionExecution entity)
		{
			this.SendPropertyChanging();
			entity.StoreCondition = this;
		}
		
		private void detach_PriorityStoreConditionExecutions(PriorityStoreConditionExecution entity)
		{
			this.SendPropertyChanging();
			entity.StoreCondition = null;
		}
		
		private void attach_PromotionExecutions(PromotionExecution entity)
		{
			this.SendPropertyChanging();
			entity.StoreCondition = this;
		}
		
		private void detach_PromotionExecutions(PromotionExecution entity)
		{
			this.SendPropertyChanging();
			entity.StoreCondition = null;
		}
		
		private void attach_StoreConditionDisplays(StoreConditionDisplay entity)
		{
			this.SendPropertyChanging();
			entity.StoreCondition = this;
		}
		
		private void detach_StoreConditionDisplays(StoreConditionDisplay entity)
		{
			this.SendPropertyChanging();
			entity.StoreCondition = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="BCMyday.StoreConditionDisplayDetail")]
	public partial class StoreConditionDisplayDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StoreConditionDisplayID;
		
		private System.Nullable<int> _SystemPackageID;
		
		private System.Nullable<int> _SystemBrandID;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<bool> _IsActive;
		
		private int _StoreConditionDisplayDetailID;
		
		private EntityRef<StoreConditionDisplay> _StoreConditionDisplay;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStoreConditionDisplayIDChanging(int value);
    partial void OnStoreConditionDisplayIDChanged();
    partial void OnSystemPackageIDChanging(System.Nullable<int> value);
    partial void OnSystemPackageIDChanged();
    partial void OnSystemBrandIDChanging(System.Nullable<int> value);
    partial void OnSystemBrandIDChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnStoreConditionDisplayDetailIDChanging(int value);
    partial void OnStoreConditionDisplayDetailIDChanged();
    #endregion
		
		public StoreConditionDisplayDetail()
		{
			this._StoreConditionDisplay = default(EntityRef<StoreConditionDisplay>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreConditionDisplayID", DbType="Int NOT NULL")]
		public int StoreConditionDisplayID
		{
			get
			{
				return this._StoreConditionDisplayID;
			}
			set
			{
				if ((this._StoreConditionDisplayID != value))
				{
					if (this._StoreConditionDisplay.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStoreConditionDisplayIDChanging(value);
					this.SendPropertyChanging();
					this._StoreConditionDisplayID = value;
					this.SendPropertyChanged("StoreConditionDisplayID");
					this.OnStoreConditionDisplayIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemPackageID", DbType="Int")]
		public System.Nullable<int> SystemPackageID
		{
			get
			{
				return this._SystemPackageID;
			}
			set
			{
				if ((this._SystemPackageID != value))
				{
					this.OnSystemPackageIDChanging(value);
					this.SendPropertyChanging();
					this._SystemPackageID = value;
					this.SendPropertyChanged("SystemPackageID");
					this.OnSystemPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemBrandID", DbType="Int")]
		public System.Nullable<int> SystemBrandID
		{
			get
			{
				return this._SystemBrandID;
			}
			set
			{
				if ((this._SystemBrandID != value))
				{
					this.OnSystemBrandIDChanging(value);
					this.SendPropertyChanging();
					this._SystemBrandID = value;
					this.SendPropertyChanged("SystemBrandID");
					this.OnSystemBrandIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="VarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="VarChar(50)")]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreConditionDisplayDetailID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StoreConditionDisplayDetailID
		{
			get
			{
				return this._StoreConditionDisplayDetailID;
			}
			set
			{
				if ((this._StoreConditionDisplayDetailID != value))
				{
					this.OnStoreConditionDisplayDetailIDChanging(value);
					this.SendPropertyChanging();
					this._StoreConditionDisplayDetailID = value;
					this.SendPropertyChanged("StoreConditionDisplayDetailID");
					this.OnStoreConditionDisplayDetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreConditionDisplay_StoreConditionDisplayDetail", Storage="_StoreConditionDisplay", ThisKey="StoreConditionDisplayID", OtherKey="StoreConditionDisplayID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public StoreConditionDisplay StoreConditionDisplay
		{
			get
			{
				return this._StoreConditionDisplay.Entity;
			}
			set
			{
				StoreConditionDisplay previousValue = this._StoreConditionDisplay.Entity;
				if (((previousValue != value) 
							|| (this._StoreConditionDisplay.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StoreConditionDisplay.Entity = null;
						previousValue.StoreConditionDisplayDetails.Remove(this);
					}
					this._StoreConditionDisplay.Entity = value;
					if ((value != null))
					{
						value.StoreConditionDisplayDetails.Add(this);
						this._StoreConditionDisplayID = value.StoreConditionDisplayID;
					}
					else
					{
						this._StoreConditionDisplayID = default(int);
					}
					this.SendPropertyChanged("StoreConditionDisplay");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="BCMyday.StoreTieInRate")]
	public partial class StoreTieInRate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StoreConditionID;
		
		private int _SystemBrandId;
		
		private int _TieInRate;
		
		private System.Nullable<bool> _IsActive;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _TotalDisplays;
		
		private EntityRef<StoreCondition> _StoreCondition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStoreConditionIDChanging(int value);
    partial void OnStoreConditionIDChanged();
    partial void OnSystemBrandIdChanging(int value);
    partial void OnSystemBrandIdChanged();
    partial void OnTieInRateChanging(int value);
    partial void OnTieInRateChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnTotalDisplaysChanging(System.Nullable<int> value);
    partial void OnTotalDisplaysChanged();
    #endregion
		
		public StoreTieInRate()
		{
			this._StoreCondition = default(EntityRef<StoreCondition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreConditionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int StoreConditionID
		{
			get
			{
				return this._StoreConditionID;
			}
			set
			{
				if ((this._StoreConditionID != value))
				{
					if (this._StoreCondition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStoreConditionIDChanging(value);
					this.SendPropertyChanging();
					this._StoreConditionID = value;
					this.SendPropertyChanged("StoreConditionID");
					this.OnStoreConditionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemBrandId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SystemBrandId
		{
			get
			{
				return this._SystemBrandId;
			}
			set
			{
				if ((this._SystemBrandId != value))
				{
					this.OnSystemBrandIdChanging(value);
					this.SendPropertyChanging();
					this._SystemBrandId = value;
					this.SendPropertyChanged("SystemBrandId");
					this.OnSystemBrandIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TieInRate", DbType="Int NOT NULL")]
		public int TieInRate
		{
			get
			{
				return this._TieInRate;
			}
			set
			{
				if ((this._TieInRate != value))
				{
					this.OnTieInRateChanging(value);
					this.SendPropertyChanging();
					this._TieInRate = value;
					this.SendPropertyChanged("TieInRate");
					this.OnTieInRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="VarChar(40)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="VarChar(50)")]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDisplays", DbType="Int")]
		public System.Nullable<int> TotalDisplays
		{
			get
			{
				return this._TotalDisplays;
			}
			set
			{
				if ((this._TotalDisplays != value))
				{
					this.OnTotalDisplaysChanging(value);
					this.SendPropertyChanging();
					this._TotalDisplays = value;
					this.SendPropertyChanged("TotalDisplays");
					this.OnTotalDisplaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreCondition_StoreTieInRate", Storage="_StoreCondition", ThisKey="StoreConditionID", OtherKey="StoreConditionID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public StoreCondition StoreCondition
		{
			get
			{
				return this._StoreCondition.Entity;
			}
			set
			{
				StoreCondition previousValue = this._StoreCondition.Entity;
				if (((previousValue != value) 
							|| (this._StoreCondition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StoreCondition.Entity = null;
						previousValue.StoreTieInRates.Remove(this);
					}
					this._StoreCondition.Entity = value;
					if ((value != null))
					{
						value.StoreTieInRates.Add(this);
						this._StoreConditionID = value.StoreConditionID;
					}
					else
					{
						this._StoreConditionID = default(int);
					}
					this.SendPropertyChanged("StoreCondition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="BCMyday.StoreConditionNote")]
	public partial class StoreConditionNote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NoteID;
		
		private int _StoreConditionID;
		
		private string _Note;
		
		private string _ImageSharePointID;
		
		private string _ImageURL;
		
		private string _ImageName;
		
		private string _CreatedBy;
		
		private System.DateTime _Created;
		
		private string _LastModifiedBy;
		
		private System.DateTime _LastModified;
		
		private EntityRef<StoreCondition> _StoreCondition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNoteIDChanging(int value);
    partial void OnNoteIDChanged();
    partial void OnStoreConditionIDChanging(int value);
    partial void OnStoreConditionIDChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnImageSharePointIDChanging(string value);
    partial void OnImageSharePointIDChanged();
    partial void OnImageURLChanging(string value);
    partial void OnImageURLChanged();
    partial void OnImageNameChanging(string value);
    partial void OnImageNameChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnLastModifiedByChanging(string value);
    partial void OnLastModifiedByChanged();
    partial void OnLastModifiedChanging(System.DateTime value);
    partial void OnLastModifiedChanged();
    #endregion
		
		public StoreConditionNote()
		{
			this._StoreCondition = default(EntityRef<StoreCondition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoteID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NoteID
		{
			get
			{
				return this._NoteID;
			}
			set
			{
				if ((this._NoteID != value))
				{
					this.OnNoteIDChanging(value);
					this.SendPropertyChanging();
					this._NoteID = value;
					this.SendPropertyChanged("NoteID");
					this.OnNoteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreConditionID", DbType="Int NOT NULL")]
		public int StoreConditionID
		{
			get
			{
				return this._StoreConditionID;
			}
			set
			{
				if ((this._StoreConditionID != value))
				{
					if (this._StoreCondition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStoreConditionIDChanging(value);
					this.SendPropertyChanging();
					this._StoreConditionID = value;
					this.SendPropertyChanged("StoreConditionID");
					this.OnStoreConditionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageSharePointID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ImageSharePointID
		{
			get
			{
				return this._ImageSharePointID;
			}
			set
			{
				if ((this._ImageSharePointID != value))
				{
					this.OnImageSharePointIDChanging(value);
					this.SendPropertyChanging();
					this._ImageSharePointID = value;
					this.SendPropertyChanged("ImageSharePointID");
					this.OnImageSharePointIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageURL", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string ImageURL
		{
			get
			{
				return this._ImageURL;
			}
			set
			{
				if ((this._ImageURL != value))
				{
					this.OnImageURLChanging(value);
					this.SendPropertyChanging();
					this._ImageURL = value;
					this.SendPropertyChanged("ImageURL");
					this.OnImageURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string ImageName
		{
			get
			{
				return this._ImageName;
			}
			set
			{
				if ((this._ImageName != value))
				{
					this.OnImageNameChanging(value);
					this.SendPropertyChanging();
					this._ImageName = value;
					this.SendPropertyChanged("ImageName");
					this.OnImageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime2 NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModified", DbType="DateTime2 NOT NULL")]
		public System.DateTime LastModified
		{
			get
			{
				return this._LastModified;
			}
			set
			{
				if ((this._LastModified != value))
				{
					this.OnLastModifiedChanging(value);
					this.SendPropertyChanging();
					this._LastModified = value;
					this.SendPropertyChanged("LastModified");
					this.OnLastModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreCondition_StoreConditionNote", Storage="_StoreCondition", ThisKey="StoreConditionID", OtherKey="StoreConditionID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public StoreCondition StoreCondition
		{
			get
			{
				return this._StoreCondition.Entity;
			}
			set
			{
				StoreCondition previousValue = this._StoreCondition.Entity;
				if (((previousValue != value) 
							|| (this._StoreCondition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StoreCondition.Entity = null;
						previousValue.StoreConditionNotes.Remove(this);
					}
					this._StoreCondition.Entity = value;
					if ((value != null))
					{
						value.StoreConditionNotes.Add(this);
						this._StoreConditionID = value.StoreConditionID;
					}
					else
					{
						this._StoreConditionID = default(int);
					}
					this.SendPropertyChanged("StoreCondition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="BCMyday.PriorityStoreConditionExecution")]
	public partial class PriorityStoreConditionExecution : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PriorityExecutionID;
		
		private int _StoreConditionID;
		
		private int _ManagementPriorityID;
		
		private int _PriorityExecutionStatusID;
		
		private string _CreatedBy;
		
		private System.DateTime _Created;
		
		private string _LastModifiedBy;
		
		private System.DateTime _LastModified;
		
		private EntityRef<StoreCondition> _StoreCondition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPriorityExecutionIDChanging(int value);
    partial void OnPriorityExecutionIDChanged();
    partial void OnStoreConditionIDChanging(int value);
    partial void OnStoreConditionIDChanged();
    partial void OnManagementPriorityIDChanging(int value);
    partial void OnManagementPriorityIDChanged();
    partial void OnPriorityExecutionStatusIDChanging(int value);
    partial void OnPriorityExecutionStatusIDChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnLastModifiedByChanging(string value);
    partial void OnLastModifiedByChanged();
    partial void OnLastModifiedChanging(System.DateTime value);
    partial void OnLastModifiedChanged();
    #endregion
		
		public PriorityStoreConditionExecution()
		{
			this._StoreCondition = default(EntityRef<StoreCondition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriorityExecutionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PriorityExecutionID
		{
			get
			{
				return this._PriorityExecutionID;
			}
			set
			{
				if ((this._PriorityExecutionID != value))
				{
					this.OnPriorityExecutionIDChanging(value);
					this.SendPropertyChanging();
					this._PriorityExecutionID = value;
					this.SendPropertyChanged("PriorityExecutionID");
					this.OnPriorityExecutionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreConditionID", DbType="Int NOT NULL")]
		public int StoreConditionID
		{
			get
			{
				return this._StoreConditionID;
			}
			set
			{
				if ((this._StoreConditionID != value))
				{
					if (this._StoreCondition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStoreConditionIDChanging(value);
					this.SendPropertyChanging();
					this._StoreConditionID = value;
					this.SendPropertyChanged("StoreConditionID");
					this.OnStoreConditionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagementPriorityID", DbType="Int NOT NULL")]
		public int ManagementPriorityID
		{
			get
			{
				return this._ManagementPriorityID;
			}
			set
			{
				if ((this._ManagementPriorityID != value))
				{
					this.OnManagementPriorityIDChanging(value);
					this.SendPropertyChanging();
					this._ManagementPriorityID = value;
					this.SendPropertyChanged("ManagementPriorityID");
					this.OnManagementPriorityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriorityExecutionStatusID", DbType="Int NOT NULL")]
		public int PriorityExecutionStatusID
		{
			get
			{
				return this._PriorityExecutionStatusID;
			}
			set
			{
				if ((this._PriorityExecutionStatusID != value))
				{
					this.OnPriorityExecutionStatusIDChanging(value);
					this.SendPropertyChanging();
					this._PriorityExecutionStatusID = value;
					this.SendPropertyChanged("PriorityExecutionStatusID");
					this.OnPriorityExecutionStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime2 NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModified", DbType="DateTime2 NOT NULL")]
		public System.DateTime LastModified
		{
			get
			{
				return this._LastModified;
			}
			set
			{
				if ((this._LastModified != value))
				{
					this.OnLastModifiedChanging(value);
					this.SendPropertyChanging();
					this._LastModified = value;
					this.SendPropertyChanged("LastModified");
					this.OnLastModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreCondition_PriorityStoreConditionExecution", Storage="_StoreCondition", ThisKey="StoreConditionID", OtherKey="StoreConditionID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public StoreCondition StoreCondition
		{
			get
			{
				return this._StoreCondition.Entity;
			}
			set
			{
				StoreCondition previousValue = this._StoreCondition.Entity;
				if (((previousValue != value) 
							|| (this._StoreCondition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StoreCondition.Entity = null;
						previousValue.PriorityStoreConditionExecutions.Remove(this);
					}
					this._StoreCondition.Entity = value;
					if ((value != null))
					{
						value.PriorityStoreConditionExecutions.Add(this);
						this._StoreConditionID = value.StoreConditionID;
					}
					else
					{
						this._StoreConditionID = default(int);
					}
					this.SendPropertyChanged("StoreCondition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="BCMyday.PromotionExecution")]
	public partial class PromotionExecution : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExecutionID;
		
		private int _PromotionID;
		
		private int _StoreConditionID;
		
		private int _PromotionExecutionStatusID;
		
		private string _CreatedBy;
		
		private System.DateTime _Created;
		
		private string _LastModifiedBy;
		
		private System.DateTime _LastModified;
		
		private System.Nullable<int> _StoreConditionDisplayID;
		
		private string _Comments;
		
		private EntityRef<StoreCondition> _StoreCondition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExecutionIDChanging(int value);
    partial void OnExecutionIDChanged();
    partial void OnPromotionIDChanging(int value);
    partial void OnPromotionIDChanged();
    partial void OnStoreConditionIDChanging(int value);
    partial void OnStoreConditionIDChanged();
    partial void OnPromotionExecutionStatusIDChanging(int value);
    partial void OnPromotionExecutionStatusIDChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnLastModifiedByChanging(string value);
    partial void OnLastModifiedByChanged();
    partial void OnLastModifiedChanging(System.DateTime value);
    partial void OnLastModifiedChanged();
    partial void OnStoreConditionDisplayIDChanging(System.Nullable<int> value);
    partial void OnStoreConditionDisplayIDChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    #endregion
		
		public PromotionExecution()
		{
			this._StoreCondition = default(EntityRef<StoreCondition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExecutionID
		{
			get
			{
				return this._ExecutionID;
			}
			set
			{
				if ((this._ExecutionID != value))
				{
					this.OnExecutionIDChanging(value);
					this.SendPropertyChanging();
					this._ExecutionID = value;
					this.SendPropertyChanged("ExecutionID");
					this.OnExecutionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionID", DbType="Int NOT NULL")]
		public int PromotionID
		{
			get
			{
				return this._PromotionID;
			}
			set
			{
				if ((this._PromotionID != value))
				{
					this.OnPromotionIDChanging(value);
					this.SendPropertyChanging();
					this._PromotionID = value;
					this.SendPropertyChanged("PromotionID");
					this.OnPromotionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreConditionID", DbType="Int NOT NULL")]
		public int StoreConditionID
		{
			get
			{
				return this._StoreConditionID;
			}
			set
			{
				if ((this._StoreConditionID != value))
				{
					if (this._StoreCondition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStoreConditionIDChanging(value);
					this.SendPropertyChanging();
					this._StoreConditionID = value;
					this.SendPropertyChanged("StoreConditionID");
					this.OnStoreConditionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionExecutionStatusID", DbType="Int NOT NULL")]
		public int PromotionExecutionStatusID
		{
			get
			{
				return this._PromotionExecutionStatusID;
			}
			set
			{
				if ((this._PromotionExecutionStatusID != value))
				{
					this.OnPromotionExecutionStatusIDChanging(value);
					this.SendPropertyChanging();
					this._PromotionExecutionStatusID = value;
					this.SendPropertyChanged("PromotionExecutionStatusID");
					this.OnPromotionExecutionStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime2 NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModified", DbType="DateTime2 NOT NULL")]
		public System.DateTime LastModified
		{
			get
			{
				return this._LastModified;
			}
			set
			{
				if ((this._LastModified != value))
				{
					this.OnLastModifiedChanging(value);
					this.SendPropertyChanging();
					this._LastModified = value;
					this.SendPropertyChanged("LastModified");
					this.OnLastModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreConditionDisplayID", DbType="Int")]
		public System.Nullable<int> StoreConditionDisplayID
		{
			get
			{
				return this._StoreConditionDisplayID;
			}
			set
			{
				if ((this._StoreConditionDisplayID != value))
				{
					this.OnStoreConditionDisplayIDChanging(value);
					this.SendPropertyChanging();
					this._StoreConditionDisplayID = value;
					this.SendPropertyChanged("StoreConditionDisplayID");
					this.OnStoreConditionDisplayIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="VarChar(200)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreCondition_PromotionExecution", Storage="_StoreCondition", ThisKey="StoreConditionID", OtherKey="StoreConditionID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public StoreCondition StoreCondition
		{
			get
			{
				return this._StoreCondition.Entity;
			}
			set
			{
				StoreCondition previousValue = this._StoreCondition.Entity;
				if (((previousValue != value) 
							|| (this._StoreCondition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StoreCondition.Entity = null;
						previousValue.PromotionExecutions.Remove(this);
					}
					this._StoreCondition.Entity = value;
					if ((value != null))
					{
						value.PromotionExecutions.Add(this);
						this._StoreConditionID = value.StoreConditionID;
					}
					else
					{
						this._StoreConditionID = default(int);
					}
					this.SendPropertyChanged("StoreCondition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="BCMyday.StoreConditionDisplay")]
	public partial class StoreConditionDisplay : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StoreConditionDisplayID;
		
		private int _StoreConditionID;
		
		private System.Nullable<int> _DisplayLocationID;
		
		private System.Nullable<int> _PromotionID;
		
		private string _DisplayLocationNote;
		
		private System.Nullable<int> _DisplayTypeID;
		
		private string _OtherNote;
		
		private string _DisplayImageURL;
		
		private System.Nullable<int> _GridX;
		
		private System.Nullable<int> _GridY;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<int> _ClientDisplayID;
		
		private System.Nullable<int> _ReasonID;
		
		private string _ImageSharePointID;
		
		private int _TieInFairShareStatusID;
		
		private System.Nullable<int> _DPTieInFlag;
		
		private EntitySet<StoreConditionDisplayDetail> _StoreConditionDisplayDetails;
		
		private EntityRef<StoreCondition> _StoreCondition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStoreConditionDisplayIDChanging(int value);
    partial void OnStoreConditionDisplayIDChanged();
    partial void OnStoreConditionIDChanging(int value);
    partial void OnStoreConditionIDChanged();
    partial void OnDisplayLocationIDChanging(System.Nullable<int> value);
    partial void OnDisplayLocationIDChanged();
    partial void OnPromotionIDChanging(System.Nullable<int> value);
    partial void OnPromotionIDChanged();
    partial void OnDisplayLocationNoteChanging(string value);
    partial void OnDisplayLocationNoteChanged();
    partial void OnDisplayTypeIDChanging(System.Nullable<int> value);
    partial void OnDisplayTypeIDChanged();
    partial void OnOtherNoteChanging(string value);
    partial void OnOtherNoteChanged();
    partial void OnDisplayImageURLChanging(string value);
    partial void OnDisplayImageURLChanged();
    partial void OnGridXChanging(System.Nullable<int> value);
    partial void OnGridXChanged();
    partial void OnGridYChanging(System.Nullable<int> value);
    partial void OnGridYChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnClientDisplayIDChanging(System.Nullable<int> value);
    partial void OnClientDisplayIDChanged();
    partial void OnReasonIDChanging(System.Nullable<int> value);
    partial void OnReasonIDChanged();
    partial void OnImageSharePointIDChanging(string value);
    partial void OnImageSharePointIDChanged();
    partial void OnTieInFairShareStatusIDChanging(int value);
    partial void OnTieInFairShareStatusIDChanged();
    partial void OnDPTieInFlagChanging(System.Nullable<int> value);
    partial void OnDPTieInFlagChanged();
    #endregion
		
		public StoreConditionDisplay()
		{
			this._StoreConditionDisplayDetails = new EntitySet<StoreConditionDisplayDetail>(new Action<StoreConditionDisplayDetail>(this.attach_StoreConditionDisplayDetails), new Action<StoreConditionDisplayDetail>(this.detach_StoreConditionDisplayDetails));
			this._StoreCondition = default(EntityRef<StoreCondition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreConditionDisplayID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StoreConditionDisplayID
		{
			get
			{
				return this._StoreConditionDisplayID;
			}
			set
			{
				if ((this._StoreConditionDisplayID != value))
				{
					this.OnStoreConditionDisplayIDChanging(value);
					this.SendPropertyChanging();
					this._StoreConditionDisplayID = value;
					this.SendPropertyChanged("StoreConditionDisplayID");
					this.OnStoreConditionDisplayIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreConditionID", DbType="Int NOT NULL")]
		public int StoreConditionID
		{
			get
			{
				return this._StoreConditionID;
			}
			set
			{
				if ((this._StoreConditionID != value))
				{
					if (this._StoreCondition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStoreConditionIDChanging(value);
					this.SendPropertyChanging();
					this._StoreConditionID = value;
					this.SendPropertyChanged("StoreConditionID");
					this.OnStoreConditionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayLocationID", DbType="Int")]
		public System.Nullable<int> DisplayLocationID
		{
			get
			{
				return this._DisplayLocationID;
			}
			set
			{
				if ((this._DisplayLocationID != value))
				{
					this.OnDisplayLocationIDChanging(value);
					this.SendPropertyChanging();
					this._DisplayLocationID = value;
					this.SendPropertyChanged("DisplayLocationID");
					this.OnDisplayLocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionID", DbType="Int")]
		public System.Nullable<int> PromotionID
		{
			get
			{
				return this._PromotionID;
			}
			set
			{
				if ((this._PromotionID != value))
				{
					this.OnPromotionIDChanging(value);
					this.SendPropertyChanging();
					this._PromotionID = value;
					this.SendPropertyChanged("PromotionID");
					this.OnPromotionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayLocationNote", DbType="VarChar(200)")]
		public string DisplayLocationNote
		{
			get
			{
				return this._DisplayLocationNote;
			}
			set
			{
				if ((this._DisplayLocationNote != value))
				{
					this.OnDisplayLocationNoteChanging(value);
					this.SendPropertyChanging();
					this._DisplayLocationNote = value;
					this.SendPropertyChanged("DisplayLocationNote");
					this.OnDisplayLocationNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayTypeID", DbType="Int")]
		public System.Nullable<int> DisplayTypeID
		{
			get
			{
				return this._DisplayTypeID;
			}
			set
			{
				if ((this._DisplayTypeID != value))
				{
					this.OnDisplayTypeIDChanging(value);
					this.SendPropertyChanging();
					this._DisplayTypeID = value;
					this.SendPropertyChanged("DisplayTypeID");
					this.OnDisplayTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherNote", DbType="VarChar(200)")]
		public string OtherNote
		{
			get
			{
				return this._OtherNote;
			}
			set
			{
				if ((this._OtherNote != value))
				{
					this.OnOtherNoteChanging(value);
					this.SendPropertyChanging();
					this._OtherNote = value;
					this.SendPropertyChanged("OtherNote");
					this.OnOtherNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayImageURL", DbType="VarChar(200)")]
		public string DisplayImageURL
		{
			get
			{
				return this._DisplayImageURL;
			}
			set
			{
				if ((this._DisplayImageURL != value))
				{
					this.OnDisplayImageURLChanging(value);
					this.SendPropertyChanging();
					this._DisplayImageURL = value;
					this.SendPropertyChanged("DisplayImageURL");
					this.OnDisplayImageURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GridX", DbType="Int")]
		public System.Nullable<int> GridX
		{
			get
			{
				return this._GridX;
			}
			set
			{
				if ((this._GridX != value))
				{
					this.OnGridXChanging(value);
					this.SendPropertyChanging();
					this._GridX = value;
					this.SendPropertyChanged("GridX");
					this.OnGridXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GridY", DbType="Int")]
		public System.Nullable<int> GridY
		{
			get
			{
				return this._GridY;
			}
			set
			{
				if ((this._GridY != value))
				{
					this.OnGridYChanging(value);
					this.SendPropertyChanging();
					this._GridY = value;
					this.SendPropertyChanged("GridY");
					this.OnGridYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="VarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="VarChar(50)")]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientDisplayID", DbType="Int")]
		public System.Nullable<int> ClientDisplayID
		{
			get
			{
				return this._ClientDisplayID;
			}
			set
			{
				if ((this._ClientDisplayID != value))
				{
					this.OnClientDisplayIDChanging(value);
					this.SendPropertyChanging();
					this._ClientDisplayID = value;
					this.SendPropertyChanged("ClientDisplayID");
					this.OnClientDisplayIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReasonID", DbType="Int")]
		public System.Nullable<int> ReasonID
		{
			get
			{
				return this._ReasonID;
			}
			set
			{
				if ((this._ReasonID != value))
				{
					this.OnReasonIDChanging(value);
					this.SendPropertyChanging();
					this._ReasonID = value;
					this.SendPropertyChanged("ReasonID");
					this.OnReasonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageSharePointID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ImageSharePointID
		{
			get
			{
				return this._ImageSharePointID;
			}
			set
			{
				if ((this._ImageSharePointID != value))
				{
					this.OnImageSharePointIDChanging(value);
					this.SendPropertyChanging();
					this._ImageSharePointID = value;
					this.SendPropertyChanged("ImageSharePointID");
					this.OnImageSharePointIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TieInFairShareStatusID", DbType="Int NOT NULL")]
		public int TieInFairShareStatusID
		{
			get
			{
				return this._TieInFairShareStatusID;
			}
			set
			{
				if ((this._TieInFairShareStatusID != value))
				{
					this.OnTieInFairShareStatusIDChanging(value);
					this.SendPropertyChanging();
					this._TieInFairShareStatusID = value;
					this.SendPropertyChanged("TieInFairShareStatusID");
					this.OnTieInFairShareStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DPTieInFlag", DbType="Int")]
		public System.Nullable<int> DPTieInFlag
		{
			get
			{
				return this._DPTieInFlag;
			}
			set
			{
				if ((this._DPTieInFlag != value))
				{
					this.OnDPTieInFlagChanging(value);
					this.SendPropertyChanging();
					this._DPTieInFlag = value;
					this.SendPropertyChanged("DPTieInFlag");
					this.OnDPTieInFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreConditionDisplay_StoreConditionDisplayDetail", Storage="_StoreConditionDisplayDetails", ThisKey="StoreConditionDisplayID", OtherKey="StoreConditionDisplayID")]
		public EntitySet<StoreConditionDisplayDetail> StoreConditionDisplayDetails
		{
			get
			{
				return this._StoreConditionDisplayDetails;
			}
			set
			{
				this._StoreConditionDisplayDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StoreCondition_StoreConditionDisplay", Storage="_StoreCondition", ThisKey="StoreConditionID", OtherKey="StoreConditionID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public StoreCondition StoreCondition
		{
			get
			{
				return this._StoreCondition.Entity;
			}
			set
			{
				StoreCondition previousValue = this._StoreCondition.Entity;
				if (((previousValue != value) 
							|| (this._StoreCondition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StoreCondition.Entity = null;
						previousValue.StoreConditionDisplays.Remove(this);
					}
					this._StoreCondition.Entity = value;
					if ((value != null))
					{
						value.StoreConditionDisplays.Add(this);
						this._StoreConditionID = value.StoreConditionID;
					}
					else
					{
						this._StoreConditionID = default(int);
					}
					this.SendPropertyChanged("StoreCondition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StoreConditionDisplayDetails(StoreConditionDisplayDetail entity)
		{
			this.SendPropertyChanging();
			entity.StoreConditionDisplay = this;
		}
		
		private void detach_StoreConditionDisplayDetails(StoreConditionDisplayDetail entity)
		{
			this.SendPropertyChanging();
			entity.StoreConditionDisplay = null;
		}
	}
	
	public partial class pGetManagementPriorityIDsForBottlerResult
	{
		
		private int _PriorityID;
		
		public pGetManagementPriorityIDsForBottlerResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriorityID", DbType="Int NOT NULL")]
		public int PriorityID
		{
			get
			{
				return this._PriorityID;
			}
			set
			{
				if ((this._PriorityID != value))
				{
					this._PriorityID = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
