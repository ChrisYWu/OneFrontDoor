//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DPSG.Portal.BC.BAL.ImageClientRef {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/", ConfigurationName="ImageClientRef.ImagingSoap")]
    public interface ImagingSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/ois/ListPictureLibrary", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode ListPictureLibrary();
        
        // CODEGEN: Parameter 'bytes' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/ois/Upload", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        DPSG.Portal.BC.BAL.ImageClientRef.UploadResponse Upload(DPSG.Portal.BC.BAL.ImageClientRef.UploadRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/ois/GetItemsXMLData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetItemsXMLData(string strListName, string strFolder, string[] itemFileNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/ois/GetItemsByIds", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetItemsByIds(string strListName, uint[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/ois/Delete", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode Delete(string strListName, string strFolder, string[] itemFileNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/ois/Download", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode Download(string strListName, string strFolder, string[] itemFileNames, uint type, bool fFetchOriginalIfNotAvailable);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/ois/Edit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode Edit(string strListName, string strFolder, string itemFileName, System.Xml.XmlElement recipe);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/ois/GetListItems", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetListItems(string strListName, string strFolder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/ois/CheckSubwebAndList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode CheckSubwebAndList(string strUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/ois/Rename", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode Rename(string strListName, string strFolder, System.Xml.XmlElement request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/ois/CreateNewFolder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode CreateNewFolder(string strListName, string strParentFolder);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Upload", WrapperNamespace="http://schemas.microsoft.com/sharepoint/soap/ois/", IsWrapped=true)]
    public partial class UploadRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/", Order=0)]
        public string strListName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/", Order=1)]
        public string strFolder;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] bytes;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/", Order=3)]
        public string fileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/", Order=4)]
        public bool fOverWriteIfExist;
        
        public UploadRequest() {
        }
        
        public UploadRequest(string strListName, string strFolder, byte[] bytes, string fileName, bool fOverWriteIfExist) {
            this.strListName = strListName;
            this.strFolder = strFolder;
            this.bytes = bytes;
            this.fileName = fileName;
            this.fOverWriteIfExist = fOverWriteIfExist;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadResponse", WrapperNamespace="http://schemas.microsoft.com/sharepoint/soap/ois/", IsWrapped=true)]
    public partial class UploadResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/ois/", Order=0)]
        public System.Xml.XmlNode UploadResult;
        
        public UploadResponse() {
        }
        
        public UploadResponse(System.Xml.XmlNode UploadResult) {
            this.UploadResult = UploadResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ImagingSoapChannel : DPSG.Portal.BC.BAL.ImageClientRef.ImagingSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ImagingSoapClient : System.ServiceModel.ClientBase<DPSG.Portal.BC.BAL.ImageClientRef.ImagingSoap>, DPSG.Portal.BC.BAL.ImageClientRef.ImagingSoap {
        
        public ImagingSoapClient() {
        }
        
        public ImagingSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ImagingSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImagingSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImagingSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Xml.XmlNode ListPictureLibrary() {
            return base.Channel.ListPictureLibrary();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DPSG.Portal.BC.BAL.ImageClientRef.UploadResponse DPSG.Portal.BC.BAL.ImageClientRef.ImagingSoap.Upload(DPSG.Portal.BC.BAL.ImageClientRef.UploadRequest request) {
            return base.Channel.Upload(request);
        }
        
        public System.Xml.XmlNode Upload(string strListName, string strFolder, byte[] bytes, string fileName, bool fOverWriteIfExist) {
            DPSG.Portal.BC.BAL.ImageClientRef.UploadRequest inValue = new DPSG.Portal.BC.BAL.ImageClientRef.UploadRequest();
            inValue.strListName = strListName;
            inValue.strFolder = strFolder;
            inValue.bytes = bytes;
            inValue.fileName = fileName;
            inValue.fOverWriteIfExist = fOverWriteIfExist;
            DPSG.Portal.BC.BAL.ImageClientRef.UploadResponse retVal = ((DPSG.Portal.BC.BAL.ImageClientRef.ImagingSoap)(this)).Upload(inValue);
            return retVal.UploadResult;
        }
        
        public System.Xml.XmlNode GetItemsXMLData(string strListName, string strFolder, string[] itemFileNames) {
            return base.Channel.GetItemsXMLData(strListName, strFolder, itemFileNames);
        }
        
        public System.Xml.XmlNode GetItemsByIds(string strListName, uint[] ids) {
            return base.Channel.GetItemsByIds(strListName, ids);
        }
        
        public System.Xml.XmlNode Delete(string strListName, string strFolder, string[] itemFileNames) {
            return base.Channel.Delete(strListName, strFolder, itemFileNames);
        }
        
        public System.Xml.XmlNode Download(string strListName, string strFolder, string[] itemFileNames, uint type, bool fFetchOriginalIfNotAvailable) {
            return base.Channel.Download(strListName, strFolder, itemFileNames, type, fFetchOriginalIfNotAvailable);
        }
        
        public System.Xml.XmlNode Edit(string strListName, string strFolder, string itemFileName, System.Xml.XmlElement recipe) {
            return base.Channel.Edit(strListName, strFolder, itemFileName, recipe);
        }
        
        public System.Xml.XmlNode GetListItems(string strListName, string strFolder) {
            return base.Channel.GetListItems(strListName, strFolder);
        }
        
        public System.Xml.XmlNode CheckSubwebAndList(string strUrl) {
            return base.Channel.CheckSubwebAndList(strUrl);
        }
        
        public System.Xml.XmlNode Rename(string strListName, string strFolder, System.Xml.XmlElement request) {
            return base.Channel.Rename(strListName, strFolder, request);
        }
        
        public System.Xml.XmlNode CreateNewFolder(string strListName, string strParentFolder) {
            return base.Channel.CreateNewFolder(strListName, strParentFolder);
        }
    }
}
