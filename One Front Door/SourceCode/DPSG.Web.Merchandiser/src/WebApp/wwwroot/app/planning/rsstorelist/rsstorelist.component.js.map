{"version":3,"file":"rsstorelist.component.js","sourceRoot":"","sources":["rsstorelist.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport {CORE_DIRECTIVES} from '@angular/common';\nimport {FilterPipe} from '../../pipes/filter.pipe';\nimport {StoreWeekDayInput, StoreWeekDayOutput, Account, Dispatches, DispatchOutput, Store} from '../RouteStoreAssignment';\nimport {DispserviceService } from '../../services/dispservice.service';\nimport {MerchConstant} from '../../../app/MerchAppConstant';\n\n@Component({\n    moduleId: module.id,\n    selector: 'app-rsstorelist',\n    templateUrl: 'rsstorelist.component.html',\n    styleUrls: ['rsstorelist.component.css'],\n    pipes: [FilterPipe],\n    directives: [CORE_DIRECTIVES]\n})\nexport class RsstorelistComponent implements OnInit {\n\n    private _webapi: string = MerchConstant.WebAPI_ENDPOINT;\n    public localTabAccts: Array<Account> = [];\n    @Input() currentTabAccts: Array<Account>;\n    @Input() routeDataInput: Dispatches;\n    @Input() lastModifiedByInput: string;\n    @Input() selectedWeekDayInput: number;\n    @Output() accountSelected = new EventEmitter();\n\n    public constructor(public dispService: DispserviceService) { }\n\n    pullInfoUpdate() {\n        let tempStores: Array<Store> = this.routeDataInput.Stores.slice();\n        for (var j = 0; j < tempStores.length; j++) {\n            let pullcount = 0;\n            for (var k = 0; k < this.routeDataInput.Stores.length; k++) {\n                if (tempStores[j].AccountID == this.routeDataInput.Stores[k].AccountID) {\n                    pullcount++;\n                    if (pullcount == 1) {\n                        this.routeDataInput.Stores[k].PullNumber = \"\";\n                    }\n                    else if (pullcount == 2) {\n                        this.routeDataInput.Stores[k].PullNumber = pullcount + \"nd Pull\";\n                    }\n                    else if (pullcount == 3) {\n                        this.routeDataInput.Stores[k].PullNumber = pullcount + \"rd Pull\";\n                    }\n                    else {\n                        this.routeDataInput.Stores[k].PullNumber = pullcount + \"th Pull\";\n                    }\n\n                }\n            }\n        }\n\n    }\n    addStore(accountID: number, accountName: string, address: string) {\n        this.dispService.set(this._webapi + 'api/Merc/InsertStoreWeekday/');\n\n        let storeWeekDayInput: StoreWeekDayInput = new StoreWeekDayInput(this.routeDataInput.MerchGroupID,\n            this.selectedWeekDayInput,\n            this.routeDataInput.RouteID,\n            accountID,\n            this.lastModifiedByInput);\n        this.dispService.post(JSON.stringify(storeWeekDayInput))\n            .subscribe(res => {\n                var data: any = res;\n                let resultInsert: StoreWeekDayOutput;\n                resultInsert = data;\n                if (resultInsert.ReturnStatus == 1) {\n                    this.routeDataInput.Stores.push(new Store(accountID, accountName, this.routeDataInput.Stores.length + 1, null));\n                    this.pullInfoUpdate();\n                    this.accountSelected.emit(\n                        { close: 'true' }\n                    )\n                }\n            },\n            error => {\n\n                if (error.status == 401 || error.status == 404) {\n                    //this.notificationService.printErrorMessage('Authentication required');\n                    //this.utilityService.navigateToSignIn();\n                }\n            });\n    }\n\n    ngOnInit() {\n\n        //   this.localTabAccts.push(new Account(0, '', ''));\n        //     if (this.currentTabAccts && this.currentTabAccts.length > 0) {\n        //         this.localTabAccts = this.currentTabAccts;\n        //     }\n    }\n\n}\n"]}