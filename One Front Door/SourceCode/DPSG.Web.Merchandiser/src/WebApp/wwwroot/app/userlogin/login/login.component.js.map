{"version":3,"file":"login.component.js","sourceRoot":"","sources":["login.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Http, Headers, Response, RequestOptions } from '@angular/http';\nimport {MerchConstant} from '../../../app/MerchAppConstant';\nimport { Observable }     from 'rxjs/Observable';\nimport {LocalStorageService} from 'ng2-webstorage';\nimport {Idle, DEFAULT_INTERRUPTSOURCES} from 'ng2-idle/core';\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-login',\n  templateUrl: 'login.component.html',\n  styleUrls: ['login.component.css'] //,\n // providers: ['LocalStorageService', NG2_WEBSTORAGE]\n\n})\nexport class LoginComponent implements OnInit {\n\n  private _webapi: string = MerchConstant.WebAPI_ENDPOINT;\n // @SessionStorage() public UserName: string = \"\";\n   \n\nconstructor(public http: Http, public localSt: LocalStorageService, public idle: Idle) {\n    // let _build = (<any> http)._backend._browserXHR.build;\n    // (<any> http)._backend._browserXHR.build = () => {\n    //     let _xhr =  _build();\n    //     _xhr.withCredentials = true;\n    //     return _xhr;\n    // };\n\n    this.localSt.store('UserGSN', 'TIWNX001');  \n    console.log(this.localSt.retrieve('UserGSN'));\n\n    idle.setIdle(50000);\n    idle.setTimeout(50000);\n    idle.setInterrupts(DEFAULT_INTERRUPTSOURCES);\n\n    idle.onIdleStart.subscribe(() => {\n      console.log('IdleStart');\n    });\n\n    idle.onIdleEnd.subscribe(() => {\n      console.log('IdleEnd');\n    });\n\n    idle.onTimeoutWarning.subscribe((countdown:number) => {\n      console.log('TimeoutWarning: ' + countdown);\n    });\n\n    idle.onTimeout.subscribe(() => {\n      console.log('Timeout');\n    });\n\n   idle.watch();\n    \n  }\n\n  ngOnInit() {\n\n    this.checkUserAuth();\n    //this.sendRequest();\n  // this.localSt.observe('key')\n  //           .subscribe((value) => console.log('new value', value));\n\n  }\n\n  checkUserAuth(): void {\n        this.WebAPIPostCall().subscribe(res => {\n                var d: any = res;\n                if (d.UserInfo.IsValid == 1)\n                {\n                  this.localSt.store('UserGSN', d.UserInfo.GSN);\n                  this.localSt.store('UserName', d.UserInfo.Name);\n                  this.localSt.store('UserEmail', d.UserInfo.Email);  \n\n                    console.log(this.localSt.retrieve('UserGSN'));\n                    console.log(this.localSt.retrieve('UserName'));\n                    console.log(this.localSt.retrieve('UserEmail'));\n                }\n                else{\n                    console.log(\"User is not valid\");\n                }                 \n               \n            },\n            error => {\n                if (error.status == 401 || error.status == 404) {\n                }\n            });  \n       }\n\n  WebAPIPostCall()\n      {\n      // let headers = new Headers({ 'Content-Type': 'application/json' });\n      //   let options = new RequestOptions({\n      //   headers: headers\n      //  // , withCredentials: true\n      //   });\n      //   let body :string = '';\n      //   return this.http.post(this._webapi + 'api/Merc/CheckAuthentication/', body, options)\n      //   .map((res: Response) => res.json());\n      //   //.subscribe(res => {this.result = res;});\n\n      //   // headers.append('Content-Type', 'application/json');\n        return this.http.get(this._webapi + 'api/Merc/CheckAuthentication/', {withCredentials:true})\n                      .map(response => <any>(<Response>response).json());\n      }\n\n  // sendRequest() {\n  //   return this.http.get('http://bplnshp02:2000/MerchPortalWebAPI/api/Merc/CheckAuthentication/', { withCredentials:true})\n  //         .map((res: Response) => res.json());\n  //        // .subscribe(res => {this.result = res;});\n  //       // .toPromise()\n  //       // .then(response => response.json().data);\n  // }\n\n\n}\n\n"]}