{"version":3,"file":"dispatch.component.js","sourceRoot":"","sources":["dispatch.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAGO,eAAe,CAAC,CAAA;AACvB,6BAEO,gBAAgB,CAAC,CAAA;AACxB,4BAEO,sBAAsB,CAAC,CAAA;AAC9B,IAAY,MAAM,WAAM,QAAQ,CAAC,CAAA;AACjC,gCAEO,6BAEP,CAAC,CAFmC;AAGpC,yBAAyB,sBAAsB,CAAC,CAAA;AAChD,kCAAiC,+BAA+B,CAAC,CAAA;AACjE,wBAAiC,mBAAmB,CAAC,CAAA;AAYrD;IA8DI,6DAA6D;IAC7D,0DAA0D;IAC1D,OAAO;IAEP,2BAAoB,cAA8B,EAAS,UAA4B;QAAnE,mBAAc,GAAd,cAAc,CAAgB;QAAS,eAAU,GAAV,UAAU,CAAkB;QA7DhF,mBAAc,GAAY,KAAK,CAAC;QAChC,YAAO,GAAU,EAAE,CAAC;QACpB,iBAAY,GAAW,MAAM,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QACtD,kBAAa,GAAW,CAAC,CAAC;QAC1B,gBAAW,GAAW,EAAE,CAAC;QACzB,YAAO,GAAG,EAAE,CAAC;QACb,YAAO,GAAG,EAAE,CAAC;QACpB,SAAI,GAAe,IAAI,qBAAU,EAAE,CAAC;QAuDhC,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,8FAA8F;QAC9F,8BAA8B;IAClC,CAAC;IAtDD,sCAAU,GAAV;QACI,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;YAC1B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;QAC1E,CAAC;QAAA,CAAC;IAEN,CAAC;IAED,oCAAQ,GAAR;QACI,IAAI,CAAC,cAAc,GAAG,KAAK,CAAA;QAE3B,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,IAAI,CAAC,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QAC3B,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QAChD,CAAC;QAED,IAAI,CAAC,eAAe,EAAE,CAAA;QACtB,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IAED,qCAAS,GAAT;QACI,IAAI,CAAC,cAAc,GAAG,KAAK,CAAA;QAE3B,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,IAAI,CAAC,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QAC3B,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QAChD,CAAC;QAED,IAAI,CAAC,eAAe,EAAE,CAAA;QACtB,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IAED,2CAAe,GAAf;QACI,2FAA2F;QAC3F,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;IACnE,CAAC;IAED,0CAAc,GAAd,UAAe,CAAS;QACpB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAA;QAC3B,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QAEvB,IAAI,CAAC,eAAe,EAAE,CAAA;QACtB,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IAYO,0CAAc,GAAtB;QACI,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC9B,CAAC;IAED,oCAAQ,GAAR;QAAA,iBAIC;QAHG,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAA,IAAI,IAAM,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,KAAI,CAAC,eAAe,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3H,CAAC;IAED,2CAAe,GAAf,UAAgB,IAAgB;QAC5B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,SAAS,CAAC,CAAC,CAAC;YAC9C,cAAc;YACd,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YACtB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;YAClB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;YAElB,gEAAgE;YAChE,IAAI,CAAC,cAAc,EAAE,CAAC;QAE1B,CAAC;IAEL,CAAC;IACD,uCAAW,GAAX;QACI,kDAAkD;QAClD,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IACpC,CAAC;IAED,0CAAc,GAAd;QAAA,iBA2BC;QAzBG,WAAW;QACX,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,aAAa,GAAW,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QAC3E,aAAa;QACb,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,SAAS,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;YAE3H,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;iBACvE,SAAS,CAAC,UAAA,GAAG;gBACV,IAAI,IAAI,GAAU,GAAG,CAAC,IAAI,EAAE,CAAC;gBAC7B,KAAI,CAAC,OAAO,GAAG,EAAE,CAAC;gBAClB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;oBACnB,KAAI,CAAC,OAAO,GAAG,oBAAoB,GAAG,KAAI,CAAC,YAAY,CAAC;gBAC5D,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,KAAI,CAAC,OAAO,GAAG,EAAE,CAAC;oBAClB,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;oBACxB,KAAI,CAAC,WAAW,GAAG,MAAM,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;gBACjD,CAAC;YACL,CAAC,EACD,cAAM,OAAA,KAAI,CAAC,cAAc,EAAE,EAArB,CAAqB,EAC3B,cAAM,OAAA,KAAI,CAAC,cAAc,EAAE,EAArB,CAAqB,CAC1B,CAAC;QACV,CAAC;IAEL,CAAC;IA5IL;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,UAAU;YACpB,WAAW,EAAE,yBAAyB;YACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;YACrC,UAAU,EAAE,CAAC,mCAAoB,EAAE,0BAAgB,CAAC;YACpD,KAAK,EAAE,CAAC,wBAAU,CAAC;YACnB,SAAS,EAAE,CAAC,gCAAc,EAAE,oCAAgB,CAAC;SAChD,CAAC;;yBAAA;IAqIF,wBAAC;AAAD,CAAC,AAnID,IAmIC;AAnIY,yBAAiB,oBAmI7B,CAAA","sourcesContent":["import {\n    Component,\n    OnInit\n} from '@angular/core';\nimport {\n    DispatchRowComponent\n} from './dispatch-row';\nimport {\n    FilterPipe\n} from '../pipes/filter.pipe';\nimport * as moment from 'moment';\nimport {\n    MonitorService\n} from '../services/monitor.service'\n\nimport {Subscription} from 'rxjs/Subscription';\nimport {MerchGroup} from '../services/planning';\nimport { HeadernavService } from '../services/headernav.service';\nimport { SpinnerComponent } from '../common/spinner';\n\n@Component({\n    moduleId: module.id,\n    selector: 'dispatch',\n    templateUrl: 'dispatch.component.html',\n    styleUrls: ['dispatch.component.css'],\n    directives: [DispatchRowComponent, SpinnerComponent],\n    pipes: [FilterPipe],\n    providers: [MonitorService, HeadernavService]\n})\n\nexport class DispatchComponent implements OnInit {\n\n    //debugger;\n    public isRequesting: boolean;\n    public monitorData: any[];\n    public isShowDropDown: boolean = false;\n    public ddDates: any[] = [];\n    public selectedDate: string = moment().format('MMM D, YYYY');\n    public selectedIndex: number = 0;\n    public refreshTime: string = '';\n    public msgText = \"\";\n    public errText = \"\";\n    item: MerchGroup = new MerchGroup();\n    subscription: Subscription;\n\n\n    getDdDates() {\n        for (let i = 0; i <= 7; i++) {\n            this.ddDates.push(moment().subtract(i, 'days').format(\"MMM D, YYYY\"));\n        };\n\n    }\n\n    nextDate() {\n        this.isShowDropDown = false\n\n        if (this.selectedIndex == 7) {\n            this.selectedIndex = 0;\n        } else {\n            this.selectedIndex = this.selectedIndex + 1;\n        }\n\n        this.setSelectedDate()\n        this.getMonitorData();\n    }\n\n    priorDate() {\n        this.isShowDropDown = false\n\n        if (this.selectedIndex == 0) {\n            this.selectedIndex = 7;\n        } else {\n            this.selectedIndex = this.selectedIndex - 1;\n        }\n\n        this.setSelectedDate()\n        this.getMonitorData();\n    }\n\n    setSelectedDate() {\n        // this.selectedDate = moment().subtract(this.selectedIndex, 'days').format(\"MMM D, YYYY\");\n        this.selectedDate = moment('2016-09-19').format(\"MMM D, YYYY\");\n    }\n\n    ddDateSelected(i: number) {\n        this.isShowDropDown = false\n        this.selectedIndex = i;\n\n        this.setSelectedDate()\n        this.getMonitorData();\n    }\n\n    //  to remove -   refreshData() { //to move at getMonitorData\n    //        this.refreshTime = moment().format(\"h:mm:ss A\");\n    //    }\n\n    constructor(private monitorService: MonitorService, public navService: HeadernavService) {\n        this.getDdDates();\n        //Note - belw will relpaced with getMonitorData and getMonitorDataStatic() function to remove \n        //this.getMonitorDataStatic();\n    }\n\n    private stopRefreshing() {\n        this.isRequesting = false;\n    }\n\n    ngOnInit() {\n        this.msgText = \"\";\n        this.errText = \"\";\n        this.subscription = this.navService.navItem$.subscribe(item => { this.item = item; this.loadMonitorData(this.item); });\n    }\n\n    loadMonitorData(item: MerchGroup) {\n        this.item = item;\n        if (this.item != null || this.item != undefined) {\n            // debugger;  \n            this.monitorData = [];\n            this.msgText = \"\";\n            this.errText = \"\";\n\n            // to remove static data, it is for test to get all combination \n            this.getMonitorData();\n            //this.getMonitorDataStatic();\n        }\n\n    }\n    ngOnDestroy() {\n        // prevent memory leak when component is destroyed\n        this.msgText = \"\";\n        this.errText = \"\";\n        this.subscription.unsubscribe();\n    }\n\n    getMonitorData() {\n\n        // debugger\n        this.msgText = \"\";\n        this.errText = \"\";\n        let _selectedDate: string = moment(this.selectedDate).format('YYYY-MM-DD');\n        //bug: 69 fix\n        if ((this.item != null || this.item != undefined) && (this.item.MerchGroupID != undefined || this.item.MerchGroupID != null)) {\n\n            this.isRequesting = true;\n            this.monitorService.getMonitoringData(_selectedDate, this.item.MerchGroupID)\n                .subscribe(res => {\n                    var data: any[] = res.json();\n                    this.errText = \"\";\n                    if (data.length <= 0) {\n                        this.msgText = \"No data found for \" + this.selectedDate;\n                    } else {\n                        this.msgText = \"\";\n                        this.monitorData = data;\n                        this.refreshTime = moment().format(\"h:mm A\");\n                    }\n                },\n                () => this.stopRefreshing(),\n                () => this.stopRefreshing()\n                );\n        }\n\n    }\n}"]}