{"version":3,"file":"merc-main.component.js","sourceRoot":"","sources":["merc-main.component.ts"],"names":[],"mappings":"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","sourcesContent":["\r\nimport { Component, OnInit,  Input, Output, EventEmitter,ViewChild } from '@angular/core';\r\nimport { CORE_DIRECTIVES, FORM_DIRECTIVES } from '@angular/common';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {MODAL_DIRECTIVES, BS_VIEW_PROVIDERS,ModalDirective} from 'ng2-bootstrap/ng2-bootstrap';\r\nimport {DatePicker} from 'ng2-datepicker/ng2-datepicker';\r\n\r\nimport { DispserviceService } from '../services/dispservice.service';\r\nimport { RouteComponent} from '../common/route/'\r\nimport {} from '../services/dispatch';\r\nimport {Dispatches, DispatchInput, AccountInput, Account, Accounts,RouteListInput, Route, \r\n    Store,Merchandiser,DispatchReady, DispatchFinalResult, DispatchFinalInput, DispatchHistory} from '../services/dispatch';\r\nimport {MerchConstant} from '../../app/MerchAppConstant';\r\n\r\nimport { HeadernavService } from '../services/headernav.service';\r\nimport { SpinnerComponent } from '../common/spinner';\r\n\r\n\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'app-merc-main',\r\n  templateUrl: 'merc-main.component.html',\r\n  styleUrls: ['merc-main.component.css'],\r\n\r\n  directives: [MODAL_DIRECTIVES,CORE_DIRECTIVES, FORM_DIRECTIVES, RouteComponent,DatePicker,SpinnerComponent],\r\n  providers: [DispserviceService, HeadernavService], \r\n  viewProviders: [BS_VIEW_PROVIDERS]\r\n  \r\n          \r\n})\r\n\r\nexport class MercMainComponent implements OnInit {\r\n    private _webapi: string = MerchConstant.WebAPI_ENDPOINT;\r\n    public isRequesting: boolean ;\r\n\r\n    @ViewChild('lgDispatchHistoryModal') lgDispatchHistoryModal: ModalDirective;\r\n\r\n    public dispHistory:Array<DispatchHistory>;\r\n    public dispHistoryLength:number = 0;\r\n\r\n    public dispatch: Array<Dispatches>;\r\n    public dispatchLength:number=0;\r\n    public dispInput: DispatchInput;\r\n    public dispathchDate: string; \r\n    public DispathchDate: string = new Date().toISOString().split('T')[0];\r\n    public lastModifiedBy: string;\r\n    \r\n    public merchGroupId: number;\r\n\r\n    public accts: Accounts;\r\n    public acctInput: AccountInput;\r\n    public allAccts: Array<Account>;\r\n    public unassignedAccts: Array<Account>;\r\n    public unassignedAcctsLength:number = 0;\r\n    public otherAccts: Array<Account>;\r\n    public selectedacct: string;\r\n    public routesInput: Array<Route>;\r\n    public unassignedMerch: Array<Merchandiser> = [];\r\n    public unassignedOtherMerch: Array<Merchandiser> = [];\r\n    public dispatchReadyInfo:Array<DispatchReady>;\r\n    public dispatchFinalResult:Array<DispatchFinalResult>;\r\n    public dispatchReadyInfoLength:number = 0;\r\n    public dispatchNotes:string='';\r\n    public unassignedToggle:boolean = false;\r\n     public changeeventtimeout :boolean=true ;// this is a global variable.\r\n   \r\n     private subscription:Subscription;\r\n\r\n    \r\n    @Input() itemsObservables;\r\n\r\n    constructor(public dispService: DispserviceService, public navService: HeadernavService) {\r\n     \r\n    }\r\n\r\n\r\n      private stopRefreshing() {\r\n        this.isRequesting = false;\r\n    }\r\n    setDispatchDate(){\r\n        this.dispathchDate = this.DispathchDate.toString();\r\n    }\r\n\r\n    ngOnInit() {\r\n        //this.DispathchDate = new Date().toISOString().split('T')[0];\r\n       // this.setDispatchDate();\r\n       // this.loadData();\r\n        this.setDispatchDate();\r\n    \r\n        this.subscription = this.navService.navItem$.subscribe(item =>{this.merchGroupId = item.MerchGroupID;this.lastModifiedBy = item.LoggedInUser ;this.loadData()} );\r\n         \r\n    }\r\n\r\n    ngOnDestroy() {\r\n    // prevent memory leak when component is destroyed\r\n        this.subscription.unsubscribe();\r\n    }\r\n    \r\n    onChange($event)\r\n    {\r\n        if(this.dispathchDate != this.DispathchDate)\r\n        {\r\n            this.loadData();\r\n            this.setDispatchDate();\r\n        }\r\n    }\r\n\r\n      setselectedAcct($event) {\r\n         this.dispService.set(this._webapi + 'api/Merc/GetStores/');\r\n         this.acctInput = new AccountInput(this.merchGroupId, new Date(this.DispathchDate.toString()));\r\n         this.getUnassignedAccounts(this.acctInput);\r\n     }\r\n\r\n    dispatchHistory()\r\n    {\r\n         this.dispService.set(this._webapi + 'api/Merc/GetDispatchHistory/');\r\n         let routelistinput: RouteListInput;\r\n         routelistinput = new RouteListInput(new Date(this.DispathchDate.toString()), this.merchGroupId);\r\n         this.getRoutes(routelistinput);\r\n\r\n          this.dispService.post(JSON.stringify(routelistinput), true)\r\n            .subscribe(res => {\r\n                var data: any = res;\r\n                this.dispHistory = data.DispatchHistory;\r\n                this.dispHistoryLength = this.dispHistory.length;\r\n                this.lgDispatchHistoryModal.show();\r\n            },\r\n            error => {\r\n\r\n                if (error.status == 401 || error.status == 404) {\r\n                    //this.notificationService.printErrorMessage('Authentication required');\r\n                    //this.utilityService.navigateToSignIn();\r\n                }\r\n            });\r\n    }\r\n\r\n    loadData():void {\r\n\r\n         this.dispService.set(this._webapi + 'api/Merc/GetAllDispatch/');\r\n        this.dispInput = new DispatchInput(this.lastModifiedBy, this.merchGroupId, new Date(this.DispathchDate.toString()));\r\n        this.getAllDipatchInfo(this.dispInput);\r\n\r\n        // this.dispService.set(this._webapi + 'api/Merc/GetDispatches/');\r\n        // this.dispInput = new DispatchInput('System', 102, this.dispathchDate);\r\n        // this.getDipatchInfoPost(this.dispInput);\r\n        // //this.getDipatchInfo();\r\n        // this.dispService.set(this._webapi + 'api/Merc/GetStores/');\r\n        // this.acctInput = new AccountInput(102, this.dispathchDate);\r\n        // this.getAccounts(this.acctInput);\r\n\r\n        // this.dispService.set(this._webapi + 'api/Merc/GetRouteList/');\r\n        // let routelistinput: RouteListInput;\r\n        // routelistinput = new RouteListInput(this.dispathchDate, this.merchGroupId);\r\n        // this.getRoutes(routelistinput);\r\n\r\n        \r\n        // this.dispService.set(this._webapi + 'api/Merc/GetMerchList/');\r\n        // this.getMerchs(routelistinput);\r\n\r\n    }\r\n    \r\n    toggleUnassigned(){\r\n        if(this.unassignedAcctsLength > 0)\r\n        {\r\n            if(this.unassignedToggle)\r\n                this.unassignedToggle = false;\r\n            else \r\n                this.unassignedToggle = true;\r\n        }\r\n    }\r\n\r\n    setupdatedroute($event) {\r\n        let targetRouteId = $event.value.routeid;\r\n        let reassignStore: Store = $event.value.store;\r\n\r\n        for (var i = 0; i < this.dispatch.length; i++) {\r\n\r\n            if (targetRouteId == this.dispatch[i].RouteID) {\r\n                this.dispatch[i].Stores.push(reassignStore);\r\n            }\r\n\r\n        }\r\n        this.pullInfoUpdate();\r\n\r\n    }\r\n\r\n    pullInfoUpdate() {\r\n         for (var i = 0; i < this.dispatch.length; i++) {\r\n            \r\n             let tempStores:Array<Store> = this.dispatch[i].Stores.slice();\r\n\r\n             for (var j = 0; j < tempStores.length; j++) {\r\n                 let pullcount = 0;\r\n                 for (var k = 0; k < this.dispatch[i].Stores.length; k++) {\r\n                     if (tempStores[j].AccountID == this.dispatch[i].Stores[k].AccountID) {\r\n                         pullcount++;\r\n                         if (pullcount == 1) {\r\n                             this.dispatch[i].Stores[k].PullNumber = \"\";\r\n                         }\r\n                         else if (pullcount == 2) {\r\n                             this.dispatch[i].Stores[k].PullNumber = pullcount + \"nd Pull\";\r\n                         }\r\n                         else if (pullcount == 3) {\r\n                             this.dispatch[i].Stores[k].PullNumber = pullcount + \"rd Pull\";\r\n                         }\r\n                         else {\r\n                             this.dispatch[i].Stores[k].PullNumber = pullcount + \"th Pull\";\r\n                         }\r\n                        \r\n                     }\r\n                 }\r\n             }\r\n            \r\n\r\n         }\r\n    }\r\n   \r\n\r\n    getAllDipatchInfo(data: DispatchInput) {\r\n        this.isRequesting = true;\r\n      this.dispService.post(JSON.stringify(data))\r\n            .subscribe(res => {\r\n                var data: any = res;\r\n                //dispatch\r\n                this.dispatch = data.Dispatches.Routes;\r\n                this.dispatchLength = this.dispatch.length;\r\n                this.pullInfoUpdate();\r\n\r\n                //Stores\r\n                 this.allAccts = data.Stores.AllStores;\r\n                this.unassignedAccts = data.Stores.UnassignedStores;\r\n                this.unassignedAcctsLength = this.unassignedAccts.length;\r\n                this.otherAccts = data.Stores.OtherStores;\r\n\r\n                //Routes\r\n                this.routesInput = data.Routes.Routes;\r\n\r\n                //Merchandiser\r\n                this.unassignedMerch = data.Merchandisers.UnassignedMerchandiser;\r\n                this.unassignedOtherMerch = data.Merchandisers.OtherUnassignedMerchandiser;\r\n\r\n                this.pullInfoUpdate();\r\n\r\n            },\r\n            () => this.stopRefreshing(),\r\n            () => this.stopRefreshing()\r\n            // error => {\r\n\r\n            //     if (error.status == 401 || error.status == 404) {\r\n            //         //this.notificationService.printErrorMessage('Authentication required');\r\n            //         //this.utilityService.navigateToSignIn();\r\n            //     }\r\n            // }\r\n            );\r\n        \r\n    }\r\n\r\n\r\n    getDipatchInfo(): void {\r\n        this.isRequesting = true;\r\n        this.dispService.get()\r\n            .subscribe(res => {\r\n                var data: any = res.json();\r\n                this.dispatch = data.Routes;\r\n              \r\n            },\r\n            () => this.stopRefreshing(),\r\n            () => this.stopRefreshing()\r\n            // error => {\r\n\r\n            //     if (error.status == 401 || error.status == 404) {\r\n            //         //this.notificationService.printErrorMessage('Authentication required');\r\n            //         //this.utilityService.navigateToSignIn();\r\n            //     }\r\n            // }\r\n            );\r\n        \r\n    }\r\n\r\n\r\n    getDipatchInfoPost(data: DispatchInput) {\r\n           this.isRequesting = true;\r\n        this.dispService.post(JSON.stringify(data))\r\n            .subscribe(res => {\r\n                var data: any = res;\r\n                this.dispatch = data.Routes;\r\n                this.pullInfoUpdate();\r\n            },\r\n              () => this.stopRefreshing(),\r\n            () => this.stopRefreshing()\r\n            // error => {\r\n\r\n            //     if (error.status == 401 || error.status == 404) {\r\n            //         //this.notificationService.printErrorMessage('Authentication required');\r\n            //         //this.utilityService.navigateToSignIn();\r\n            //     }\r\n            // }\r\n            );\r\n    }\r\n\r\n\r\n    getAccounts(data: AccountInput) {\r\n           this.isRequesting = true;\r\n        this.dispService.post(JSON.stringify(data), true)\r\n            .subscribe(res => {\r\n                var data: any = res;\r\n                this.allAccts = data.AllStores;\r\n                this.unassignedAccts = data.UnassignedStores;\r\n                this.unassignedAcctsLength = this.unassignedAccts.length;\r\n                this.otherAccts = data.OtherStores;\r\n             \r\n            },\r\n             () => this.stopRefreshing(),\r\n            () => this.stopRefreshing()\r\n            // error => {\r\n\r\n            //     if (error.status == 401 || error.status == 404) {\r\n            //         //this.notificationService.printErrorMessage('Authentication required');\r\n            //         //this.utilityService.navigateToSignIn();\r\n            //     }\r\n            // }\r\n            );\r\n    }\r\n\r\n\r\n   getUnassignedAccounts(data: AccountInput) {\r\n        this.isRequesting = true;\r\n        this.dispService.post(JSON.stringify(data), true)\r\n            .subscribe(res => {\r\n                var data: any = res;\r\n                this.unassignedAccts = data.UnassignedStores;\r\n                this.unassignedAcctsLength = this.unassignedAccts.length;\r\n            },\r\n             \r\n            () => this.stopRefreshing(),\r\n            () => this.stopRefreshing()\r\n            // error => {\r\n\r\n            //     if (error.status == 401 || error.status == 404) {\r\n            //         //this.notificationService.printErrorMessage('Authentication required');\r\n            //         //this.utilityService.navigateToSignIn();\r\n            //     }\r\n            // }\r\n            );\r\n    }\r\n    getRoutes(data: RouteListInput) {\r\n       \r\n        this.isRequesting = true;\r\n        this.dispService.post(JSON.stringify(data))\r\n            .subscribe(res => {\r\n                var data: any = res;\r\n                this.routesInput = data.Routes;\r\n\r\n            },\r\n\r\n            () => this.stopRefreshing(),\r\n            () => this.stopRefreshing()\r\n            // error => {\r\n\r\n            //     if (error.status == 401 || error.status == 404) {\r\n            //         //this.notificationService.printErrorMessage('Authentication required');\r\n            //         //this.utilityService.navigateToSignIn();\r\n            //     }\r\n            // }\r\n            \r\n            );\r\n    }\r\n\r\n     getMerchs(data: RouteListInput) {\r\n       \r\n        this.isRequesting = true; \r\n        this.dispService.post(JSON.stringify(data))\r\n            .subscribe(res => {\r\n                var data: any = res;\r\n                this.unassignedMerch = data.UnassignedMerchandiser;\r\n                this.unassignedOtherMerch = data.OtherUnassignedMerchandiser;\r\n\r\n            },\r\n            \r\n            () => this.stopRefreshing(),\r\n            () => this.stopRefreshing()\r\n            // error => {\r\n\r\n            //     if (error.status == 401 || error.status == 404) {\r\n            //         //this.notificationService.printErrorMessage('Authentication required');\r\n            //         //this.utilityService.navigateToSignIn();\r\n            //     }\r\n            // }\r\n            );\r\n    }\r\n    onKey(event:any) {\r\n     \r\n         this.dispatchNotes = event.target.value ;\r\n    }\r\n\r\n    previewDispatch(){\r\n        let dispatchReady:AccountInput = new AccountInput(this.merchGroupId, new Date(this.DispathchDate.toString()));\r\n        \r\n        this.dispService.set(this._webapi + 'api/Merc/DispatchReady/');\r\n         this.isRequesting = true;\r\n        this.dispService.post(JSON.stringify(dispatchReady))\r\n        .subscribe(res => {\r\n            var data: any = res;\r\n            this.dispatchReadyInfo = data.DispatchReadyListItems;\r\n            this.dispatchReadyInfoLength = this.dispatchReadyInfo.length;\r\n        },\r\n           () => this.stopRefreshing(),\r\n            () => this.stopRefreshing()\r\n        // error => {\r\n\r\n        //     if (error.status == 401 || error.status == 404) {\r\n        //         //this.notificationService.printErrorMessage('Authentication required');\r\n        //         //this.utilityService.navigateToSignIn();\r\n        //     }\r\n        // }\r\n        );\r\n    }\r\n    finalDispatch(){\r\n         let dispatchFinal:DispatchFinalInput = new DispatchFinalInput(new Date(this.DispathchDate.toString()),this.lastModifiedBy,this.merchGroupId, this.dispatchNotes);\r\n        \r\n         this.dispService.set(this._webapi + 'api/Merc/DispatchFinal/');\r\n         this.isRequesting = true;\r\n         this.dispService.post(JSON.stringify(dispatchFinal))\r\n         .subscribe(res => {\r\n             var data: any = res;\r\n             this.dispatchFinalResult = data.DispatchFinalResult;\r\n             if(this.dispatchFinalResult[0].DispatchInfo != 'OK')\r\n             {\r\n                 alert('Dispatch was not successfull!');\r\n             }\r\n             else\r\n             {\r\n                alert('Dispatch successfull!');\r\n             }\r\n         },\r\n            () => this.stopRefreshing(),\r\n            () => this.stopRefreshing()\r\n        //  error => {\r\n\r\n        // //     if (error.status == 401 || error.status == 404) {\r\n        // //         //this.notificationService.printErrorMessage('Authentication required');\r\n        // //         //this.utilityService.navigateToSignIn();\r\n        // //     }\r\n        // }\r\n        );\r\n    }\r\n}"]}