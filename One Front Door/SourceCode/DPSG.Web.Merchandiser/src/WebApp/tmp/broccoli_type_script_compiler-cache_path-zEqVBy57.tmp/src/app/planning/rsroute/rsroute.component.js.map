{"version":3,"file":"rsroute.component.js","sourceRoot":"","sources":["rsroute.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA+D,eAAe,CAAC,CAAA;AAC/E,uBAA8B,iBAAiB,CAAC,CAAA;AAChD,wBAA6C,iBAAiB,CAAC,CAAA;AAC/D,oCAAmC,oCAAoC,CAAC,CAAA;AACxE,qCAAmG,yBAAyB,CAAC,CAAA;AAC7H,iBAAkC,gBAAgB,CAAC,CAAA;AACnD,iBAAuC,qBAAqB,CAAC,CAAA;AAC7D,iCAA4B,+BAA+B,CAAC,CAAA;AAU5D;IAoBI,0BAAmB,WAA+B;QAA/B,gBAAW,GAAX,WAAW,CAAoB;QAlB1C,YAAO,GAAW,gCAAa,CAAC,eAAe,CAAC;QAe9C,oBAAe,GAAG,IAAI,mBAAY,EAAE,CAAC;QACrC,oBAAe,GAAG,IAAI,mBAAY,EAAE,CAAC;IAEO,CAAC;IAEvD,0CAAe,GAAf,UAAgB,MAAM;QAElB,IAAI,CAAC,eAAe,CAAC,IAAI,CACrB,EAAE,QAAA,MAAM,EAAE,CACb,CAAA;IACL,CAAC;IAED,yCAAc,GAAd,UAAe,GAAW;IAC1B,CAAC;IACD,0CAAe,GAAf,UAAgB,MAAM;QAClB,IAAI,CAAC,eAAe,CAAC,IAAI,CACrB,EAAE,KAAK,EAAE,MAAM,EAAE,CACpB,CAAA;IACL,CAAC;IAED,oCAAS,GAAT,UAAU,QAAQ;QACd,IAAI,MAAc,CAAC;QAEnB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACpD,EAAE,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAChD,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC;QACL,CAAC;QAED,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACpD,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC7C,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;YAC9C,CAAC;QACL,CAAC;QAED,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,+BAA+B,CAAC,CAAC;QACrE,IAAI,eAAgC,CAAC;QACrC,eAAe,GAAG,IAAI,sCAAe,CAAC,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;QACrI,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;IAEzC,CAAC;IAED,yCAAc,GAAd;QAEI,IAAI,UAAU,GAAiB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;QAE7D,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACzC,IAAI,SAAS,GAAG,CAAC,CAAC;YAClB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACpD,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;oBAChE,SAAS,EAAE,CAAC;oBACZ,EAAE,CAAC,CAAC,SAAS,IAAI,CAAC,CAAC,CAAC,CAAC;wBACjB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,EAAE,CAAC;oBAC7C,CAAC;oBACD,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,IAAI,CAAC,CAAC,CAAC,CAAC;wBACtB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,SAAS,GAAG,SAAS,CAAC;oBAChE,CAAC;oBACD,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,IAAI,CAAC,CAAC,CAAC,CAAC;wBACtB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,SAAS,GAAG,SAAS,CAAC;oBAChE,CAAC;oBACD,IAAI,CAAC,CAAC;wBACF,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,SAAS,GAAG,SAAS,CAAC;oBAChE,CAAC;gBAEL,CAAC;YACL,CAAC;QACL,CAAC;IAEL,CAAC;IAED,sCAAW,GAAX,UAAY,QAAQ;QAApB,iBAuBC;QAtBG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,gCAAgC,CAAC,CAAC;QACtE,IAAI,gBAAkC,CAAC;QACvC,gBAAgB,GAAG,IAAI,uCAAgB,CAAC,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,QAAQ,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAC/H,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;aAClD,SAAS,CAAC,UAAA,GAAG;YACV,IAAI,IAAI,GAAQ,GAAG,CAAC;YACpB,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;YAC9C,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,QAAQ,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC/D,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC;YAC9E,CAAC;YACD,KAAI,CAAC,cAAc,EAAE,CAAC;YACtB,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAElC,CAAC,EACD,UAAA,KAAK;YAED,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,IAAI,GAAG,IAAI,KAAK,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC;YAGjD,CAAC;QACL,CAAC,CAAC,CAAC;IACX,CAAC;IAED,yCAAc,GAAd,UAAe,eAAgC;QAA/C,iBAiBC;QAhBG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;aACjD,SAAS,CAAC,UAAA,GAAG;YACV,IAAI,IAAI,GAAQ,GAAG,CAAC;YACpB,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YAEzB,EAAE,CAAC,CAAC,KAAI,CAAC,YAAY,CAAC,YAAY,IAAI,CAAC,CAAC,CAAC,CAAC;gBACtC,KAAI,CAAC,cAAc,EAAE,CAAC;YAC1B,CAAC;QACL,CAAC,EACD,UAAA,KAAK;YAED,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,IAAI,GAAG,IAAI,KAAK,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC;YAGjD,CAAC;QACL,CAAC,CAAC,CAAC;IACX,CAAC;IAED,mCAAQ,GAAR;IACA,CAAC;IAhID;QAAC,YAAK,EAAE;;0DAAA;IACR;QAAC,YAAK,EAAE;;uDAAA;IAER;QAAC,YAAK,EAAE;;kEAAA;IACR;QAAC,YAAK,EAAE;;2DAAA;IACR;QAAC,YAAK,EAAE;;6DAAA;IACR;QAAC,YAAK,EAAE;;+DAAA;IACR;QAAC,YAAK,EAAE;;iEAAA;IACR;QAAC,YAAK,EAAE;;uDAAA;IACR;QAAC,YAAK,EAAE;;0DAAA;IACR;QAAC,YAAK,EAAE;;yDAAA;IACR;QAAC,YAAK,EAAE;;kEAAA;IAER;QAAC,aAAM,EAAE;;6DAAA;IACT;QAAC,aAAM,EAAE;;6DAAA;IA1Bb;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,aAAa;YACvB,WAAW,EAAE,wBAAwB;YACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;YACpC,UAAU,EAAE,CAAC,wBAAe,EAAE,sBAAmB,EAAE,wBAAc,EAAE,2BAAwB,CAAC;YAC5F,SAAS,EAAE,CAAC,wCAAkB,EAAE,uBAAa,CAAC;SACjD,CAAC;;wBAAA;IAuIF,uBAAC;AAAD,CAAC,AAtID,IAsIC;AAtIY,wBAAgB,mBAsI5B,CAAA","sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport {CORE_DIRECTIVES} from '@angular/common';\nimport {DND_PROVIDERS, DND_DIRECTIVES } from 'ng2-dnd/ng2-dnd';\nimport { DispserviceService } from '../../services/dispservice.service';\nimport {Account, DispatchOutput, Store, Dispatches, ResequenceInput, RemoveStoreinput, Route} from '../RouteStoreAssignment';\nimport {RsaddstoreComponent} from '../rsaddstore/';\nimport {RsstorereassignComponent} from '../rsstorereassign/';\nimport {MerchConstant} from '../../../app/MerchAppConstant';\n\n@Component({\n    moduleId: module.id,\n    selector: 'app-rsroute',\n    templateUrl: 'rsroute.component.html',\n    styleUrls: ['rsroute.component.css'],\n    directives: [CORE_DIRECTIVES, RsaddstoreComponent, DND_DIRECTIVES, RsstorereassignComponent],\n    providers: [DispserviceService, DND_PROVIDERS]\n})\nexport class RsrouteComponent implements OnInit {\n\n    private _webapi: string = MerchConstant.WebAPI_ENDPOINT;\n\n    @Input() selectedacct: Store;\n    @Input() routeName: String;\n    public resultInsert: DispatchOutput;\n    @Input() unassignedInputAccts: Array<Account>;\n    @Input() allInputAccts: Array<Account>;\n    @Input() otherInputAccts: Array<Account>;\n    @Input() dispatchDateInput: Date;\n    @Input() lastModifiedByInput: string;\n    @Input() routeData: Dispatches;\n    @Input() routeIdInput: number;\n    @Input() routesInput: Array<Route>;\n    @Input() selectedWeekDayInput: number;\n\n    @Output() routeReassigned = new EventEmitter();\n    @Output() accountSelected = new EventEmitter();\n\n    constructor(public dispService: DispserviceService) { }\n\n    setselectedAcct($event) {\n\n        this.accountSelected.emit(\n            { $event }\n        )\n    }\n\n    draggedSuccess(seq: number) {\n    }\n    setupdatedroute($event) {\n        this.routeReassigned.emit(\n            { value: $event }\n        )\r\n    }\n\n    dropStore(moveFrom) {\n        let moveTo: number;\n\n        for (var i = 0; i < this.routeData.Stores.length; i++) {\n            if (moveFrom == this.routeData.Stores[i].Sequence) {\n                moveTo = i + 1;\n            }\n        }\n\n        for (var i = 0; i < this.routeData.Stores.length; i++) {\n            if (i + 1 != this.routeData.Stores[i].Sequence) {\n                this.routeData.Stores[i].Sequence = i + 1;\n            }\n        }\n\n        this.dispService.set(this._webapi + 'api/Merc/UpdateStoreSequence/');\n        let resequenceInput: ResequenceInput;\n        resequenceInput = new ResequenceInput(this.selectedWeekDayInput, this.routeData.RouteID, moveFrom, moveTo, this.lastModifiedByInput);\n        this.updateSequence(resequenceInput);\n\n    }\n\n    pullInfoUpdate() {\n\n        let tempStores: Array<Store> = this.routeData.Stores.slice();\n\n        for (var j = 0; j < tempStores.length; j++) {\n            let pullcount = 0;\n            for (var k = 0; k < this.routeData.Stores.length; k++) {\n                if (tempStores[j].AccountID == this.routeData.Stores[k].AccountID) {\n                    pullcount++;\n                    if (pullcount == 1) {\n                        this.routeData.Stores[k].PullNumber = \"\";\n                    }\n                    else if (pullcount == 2) {\n                        this.routeData.Stores[k].PullNumber = pullcount + \"nd Pull\";\n                    }\n                    else if (pullcount == 3) {\n                        this.routeData.Stores[k].PullNumber = pullcount + \"rd Pull\";\n                    }\n                    else {\n                        this.routeData.Stores[k].PullNumber = pullcount + \"th Pull\";\n                    }\n\n                }\n            }\n        }\n\n    }\n\n    removeStore(sequence) {\n        this.dispService.set(this._webapi + 'api/Merc/RemoveStoreByWeekDay/');\n        let removeStoreInput: RemoveStoreinput;\n        removeStoreInput = new RemoveStoreinput(this.selectedWeekDayInput, this.routeData.RouteID, sequence, this.lastModifiedByInput);\n        this.dispService.post(JSON.stringify(removeStoreInput))\n            .subscribe(res => {\n                var data: any = res;\n                this.resultInsert = data;\n                this.routeData.Stores.splice(sequence - 1, 1);\n                for (var i = sequence - 1; i < this.routeData.Stores.length; i++) {\n                    this.routeData.Stores[i].Sequence = this.routeData.Stores[i].Sequence - 1;\n                }\n                this.pullInfoUpdate();\n                this.accountSelected.emit({});\n\n            },\n            error => {\n\n                if (error.status == 401 || error.status == 404) {\n                    //this.notificationService.printErrorMessage('Authentication required');\n                    //this.utilityService.navigateToSignIn();\n                }\n            });\n    }\n\n    updateSequence(resequenceInput: ResequenceInput) {\n        this.dispService.post(JSON.stringify(resequenceInput))\n            .subscribe(res => {\n                var data: any = res;\n                this.resultInsert = data;\n\n                if (this.resultInsert.ReturnStatus == 1) {\n                    this.pullInfoUpdate();\n                }\n            },\n            error => {\n\n                if (error.status == 401 || error.status == 404) {\n                    //this.notificationService.printErrorMessage('Authentication required');\n                    //this.utilityService.navigateToSignIn();\n                }\n            });\n    }\n\n    ngOnInit() {\n    }\n\n}\n"]}