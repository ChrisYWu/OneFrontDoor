{"version":3,"file":"create-merch-group.component.js","sourceRoot":"","sources":["create-merch-group.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, Input, ViewEncapsulation, ElementRef} from '@angular/core';\nimport { DispserviceService } from '../../services/dispservice.service';\nimport {AutoCompleteComponent, AutoCompleteDirective} from 'ng2-auto-complete';\nimport {FilterPipe} from '../../pipes/filter.pipe';\nimport {MaskDirective} from '../../directives/mask.directive';\nimport {MerchGroup, MerchGroupInput, MerchGroupDetail,\n    MerchGroupRoute, MerchGroupDetailInput, MerchGroupsInput, MerchGroupCheckInput,\n    MerchGroupCheckOutput, User} from '../../services/planning';\n\nimport {CORE_DIRECTIVES, Control, ControlGroup, FormBuilder, Validators} from '@angular/common';\nimport {FORM_DIRECTIVES, REACTIVE_FORM_DIRECTIVES, FormGroup, FormControl} from '@angular/forms';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/Rx';\nimport {MerchConstant} from '../../../app/MerchAppConstant';\nimport {Subscription} from 'rxjs/Subscription';\nimport { HeadernavService } from '../../services/headernav.service';\nimport { AsyncValidatorService } from '../../services/async-validator.service';\nimport { SpinnerComponent } from '../../common/spinner';\n\n\n\n@Component({\n    moduleId: module.id,\n    selector: 'app-create-merch-group',\n    templateUrl: 'create-merch-group.component.html',\n    styleUrls: ['create-merch-group.component.css'],\n    directives: [MaskDirective, CORE_DIRECTIVES, FORM_DIRECTIVES,\n        REACTIVE_FORM_DIRECTIVES, AutoCompleteComponent, AutoCompleteDirective, SpinnerComponent],\n    providers: [DispserviceService, HeadernavService, AsyncValidatorService],\n    pipes: [FilterPipe],\n\n\n})\n\n\n\n\n\n\n\nexport class CreateMerchGroupComponent implements OnInit {\n\n    //Initalize \n    private _webapi: string = MerchConstant.WebAPI_ENDPOINT;//'http://localhost:8888/';\n\n    public merchGroupData: MerchGroup[];\n    public merchGroupInput: MerchGroupInput;\n    public merchGroupDetail: MerchGroupDetail;\n    public dbGroupDetail: any;\n    private dbGroupDetailRoutes: Array<any>;\n    private dbtempRoutes: Array<any> = [];\n    public selectedIdx: number = 0;\n    public isRequesting: boolean;\n\n\n\n\n    private groupAreaDisplay: boolean = false;\n    private routeAreaDisplay: boolean = false;\n    public disabled: boolean = false;\n\n    private routeName: any;\n    private IsEditRoute: boolean = false;\n    private active: boolean = true;\n    private submitted: boolean = false;\n    form: ControlGroup;\n\n\n    private modifiedRoutes: MerchGroupRoute[];\n    private IsGroupNameExists: boolean = false;\n    private IsRouteNameExists: boolean = false;\n    public model4;\n    private spanGroupName: boolean = true;\n    private IsOwnerValid: boolean = true;\n    private ShowSaveMsg: boolean = false;\n    item: MerchGroup = new MerchGroup();\n    subscription: Subscription;\n\n    public el: HTMLElement;\n    public inputGrpEl: HTMLInputElement;\n    public inputRouteEl: HTMLInputElement;\n    private inputURL: string;\n    public isLoading: boolean = false;\n\n\n\n    public GetADUsers: string = this._webapi + 'api/Merc/GetUserDetails/:keyword';\n\n\n\n    onspanEditGroupName() {\n        if (this.spanGroupName)\n            this.spanGroupName = false;\n        else\n            this.spanGroupName = true;\n    }\n\n\n    public onAddGroupSelect() {\n        this.initalize();\n        this.groupAreaDisplay = true;\n        this.spanGroupName = false;\n        this.routeAreaDisplay = false;\n        if (this.merchGroupData != null) {\n            var count = this.merchGroupData.length;\n            this.selectedIdx = count;\n        }\n\n\n\n    }\n    public onAddRouteSelect() {\n        if (this.routeAreaDisplay)\n            this.routeAreaDisplay = false;\n        else\n            this.routeAreaDisplay = true;\n    }\n    public onGroupSelect(groupID: number, idx: number) {\n        this.selectedIdx = idx;\n        this.initalize();\n        var detailInput = new MerchGroupDetailInput(this.item.SAPBranchID, groupID);\n        this.getMerchGroupDetail(detailInput);\n        this.groupAreaDisplay = true;\n        this.routeAreaDisplay = false;\n    }\n\n    public onAddRouteSave() {\n        var route = new MerchGroupRoute();\n        route.RouteName = this.routeName;\n        route.CanUserDelete = true;\n        this.merchGroupDetail.Routes.push(route);\n        //this.route_data.push(route);  \n        this.routeAreaDisplay = false;\n        this.routeName = '';\n    }\n    public onEditRoute(route: MerchGroupRoute, index: Number) {\n        for (var n = 0; n < this.merchGroupDetail.Routes.length; n++) {\n\n            if (index == n) {\n                this.merchGroupDetail.Routes[n].IsEditRoute = true;\n            }\n            else\n                this.merchGroupDetail.Routes[n].IsEditRoute = false;\n\n        }\n\n\n    }\n\n\n\n\n\n    onRouteDelete(route: MerchGroupRoute, index: Number) {\n        for (var n = 0; n < this.merchGroupDetail.Routes.length; n++) {\n\n            if (n == index) {\n\n                if (this.merchGroupDetail.Routes[n].RouteID == route.RouteID && route.RouteID != null && route.CanUserDelete) {\n                    this.merchGroupDetail.Routes[n].IsRouteDeleted = true;\n                    break;\n                }\n\n                else if (this.merchGroupDetail.Routes[n].RouteName == route.RouteName && route.RouteID == null) {\n\n                    this.merchGroupDetail.Routes[n].IsRouteDeleted = true;\n                    break;\n                }\n                else {\n                    alert('The route cannot be deleted ');\n                    break;\n\n                }\n            }\n\n        }\n\n        this.merchGroupDetail.Routes = this.merchGroupDetail.Routes.filter((route: any) => {\n            if (route.IsRouteDeleted != true)\n            { return route; }\n        });\n\n    }\n\n    onMerchGroupDelete(group: MerchGroup) {\n        if (group.CanUserDelete) {\n            var input = new MerchGroupInput(this.item.SAPBranchID, group.MerchGroupID, '', '', '', '', []);\n            this.deleteMerchGroupByID(input);\n        }\n        else {\n            alert('The group cannot be deleted ');\n        }\n    }\n\n    public onMerchGroupSave() {\n\n        this.submitted = true;\n        this.ShowSaveMsg = false;\n        if (this.ValidationsCheck()) {\n            var userdetail = this.model4;\n\n            if (this.model4.sAMAccountName != undefined && this.model4.DisplayName != undefined) {\n                this.merchGroupDetail.DefaultOwnerGSN = this.model4.sAMAccountName;\n                this.merchGroupDetail.DefaultOwnerName = this.model4.DisplayName;\n            }\n\n\n\n            this.merchGroupInput = new MerchGroupInput(this.item.SAPBranchID,\n                this.merchGroupDetail.MerchGroupID,\n                this.merchGroupDetail.GroupName,\n                this.merchGroupDetail.DefaultOwnerGSN,\n                this.merchGroupDetail.DefaultOwnerName,\n                this.item.LoggedInUser, this.merchGroupDetail.Routes\n            );\n            this.insertMerchGroupData(this.merchGroupInput);\n        }\n    }\n\n\n\n\n\n\n    validateAsyncGroupName(): void {\n        if (this.merchGroupDetail.GroupName != this.dbGroupDetail.GroupName) {\n            this.inputGrpEl.focus();\n            this.validateAsyncExistingGroupName();\n        }\n        else\n            this.IsGroupNameExists = false;\n\n    }\n\n    validateAsyncGroupInDelay(): void {\n        let delayMs = 500;\n        //executing after user stopped typing\n        this.delay(() => this.validateAsyncExistingGroupName(), delayMs);\n    }\n\n    validateAsyncExistingGroupName(): void {\n\n\n        var URL = this._webapi + 'api/Merc/ValidateExistingMerchGroupDetails/' + this.item.SAPBranchID + '/Group/' + this.merchGroupDetail.GroupName;\n\n        if (this.merchGroupDetail.GroupName.length != 0 && this.merchGroupDetail.GroupName != this.dbGroupDetail.GroupName) {\n            this.isLoading = true;\n            this.lookupService.sourceUrl = URL;\n            this.lookupService.getRemoteData()\n                .subscribe(\n                resp => {\n\n                    this.IsGroupNameExists = (<any>resp).IsGroupNameExists;\n                },\n                error => null,\n                () => this.isLoading = false //complete\n                );\n        }\n        else {\n            this.IsGroupNameExists = false;\n        }\n    }\n\n\n    checkExistingRouteList(): boolean {\n        var result: boolean = false;\n        if (this.routeName.length != 0) {\n            this.merchGroupDetail.Routes.find((route: any) => {\n                if (route.RouteName == this.routeName)\n                { return result = true; }\n            });\n        }\n\n        return result;\n    }\n\n\n    validateAsyncRouteName(): void {\n        if (this.routeName.length != 0 && this.checkExistingRouteList()) {\n\n            this.IsRouteNameExists = true;\n\n        }\n        else if (this.routeName.length == 0) {\n            this.IsRouteNameExists = false;\n        }\n        else {\n            // this.inputRouteEl.focus();\n            this.validateAsyncExistingRouteName();\n        }\n\n\n    }\n\n    validateAsyncRouteInDelay(): void {\n        let delayMs = 500;\n        //executing after user stopped typing\n        this.delay(() => this.validateAsyncRouteName(), delayMs);\n    }\n\n    validateAsyncExistingRouteName(): void {\n\n        var URL = this._webapi + 'api/Merc/ValidateExistingMerchGroupDetails/' + this.item.SAPBranchID + '/Route/' + this.routeName;\n\n        if (this.routeName.length != 0) {\n            this.isLoading = true;\n            this.lookupService.sourceUrl = URL;\n            this.lookupService.getRemoteData()\n                .subscribe(\n                resp => {\n\n                    this.IsRouteNameExists = (<any>resp).IsRouteNameExists;\n                },\n                error => null,\n                () => this.isLoading = false //complete\n                );\n        }\n\n    }\n\n    addRouteToList(): void {\n        if (!this.IsRouteNameExists && this.routeName.length != 0)\n            this.onAddRouteSave();\n    }\n\n\n    //  Edit RouteName from the route List\n\n\n    validateAsyncEditRouteName(route: MerchGroupRoute, i: Number): void {\n        var result: boolean = false;\n\n\n        if (route.RouteName.length != 0) {\n            route.IsRequired = false;\n\n            for (var n = 0; n < this.merchGroupDetail.Routes.length; n++) {\n                if (n != i) {\n                    if (this.merchGroupDetail.Routes[n].RouteName == route.RouteName) {\n                        route.IsRouteNameExists = true;\n                        break;\n                    }\n                }\n                else {\n                    route.IsRouteNameExists = false;\n\n                }\n            }\n\n            var flag: MerchGroupRoute[];\n            var rName = '';\n            flag = this.merchGroupDetail.Routes.filter((r: any) => {\n                if (r.IsRouteNameExists)\n                { return r; }\n            });\n\n            var rList = this.dbGroupDetailRoutes.filter((d: any) => {\n                if (route.RouteID == d.RouteID)\n                    return d;\n            });\n\n            if (route.RouteID != null) {\n                if (rList.length > 0)\n                    rName = rList[0].RouteName;\n            }\n\n\n            if (flag.length == 0 && rName != route.RouteName && route.RouteID != null) {\n\n                this.validateAsyncExistingEditRouteName(route);\n            }\n\n            else if (flag.length == 0 && route.RouteID == null) {\n\n                this.validateAsyncExistingEditRouteName(route);\n            }\n\n        }\n        else {\n            route.IsRouteNameExists = false;\n            route.IsRequired = true;\n        }\n\n\n\n\n    }\n\n    validateAsyncEditRouteInDelay(route: MerchGroupRoute, i: number): void {\n        let delayMs = 500;\n        //executing after user stopped typing\n        this.delay(() => this.validateAsyncEditRouteName(route, i), delayMs);\n    }\n\n    validateAsyncExistingEditRouteName(route: MerchGroupRoute): void {\n\n        var URL = this._webapi + 'api/Merc/ValidateExistingMerchGroupDetails/' + this.item.SAPBranchID + '/Route/' + route.RouteName;\n\n        if (route.RouteName.length != 0) {\n            this.isLoading = true;\n            this.lookupService.sourceUrl = URL;\n            this.lookupService.getRemoteData()\n                .subscribe(\n                resp => {\n\n                    var d = (<any>resp);\n\n                    if (d.IsRouteNameExists) {\n                        route.IsRouteNameExists = true;\n                    }\n                    else {\n                        route.IsRouteNameExists = false;\n                    }\n                },\n                error => null,\n                () => this.isLoading = false //complete\n                );\n        }\n        else {\n            route.IsRouteNameExists = false;\n        }\n    }\n\n    private delay = (function () {\n        var timer = 0;\n        return function (callback: any, ms: number) {\n            clearTimeout(timer);\n            timer = setTimeout(callback, ms);\n        };\n    })();\n\n\n\n    onMerchGroupCancel() {\n\n        if (this.merchGroupData.length > 0) {\n            var detailInput = new MerchGroupDetailInput(this.item.SAPBranchID, this.merchGroupData[0].MerchGroupID);\n            this.getMerchGroupDetail(detailInput);\n            this.ShowSaveMsg = false;\n            if (this.merchGroupData != null) {\n                this.selectedIdx = 0;\n                this.spanGroupName = true;\n            }\n        }\n        else {\n            this.groupAreaDisplay = false;\n        }\n\n\n\n    }\n\n    ValidationsCheck(): Boolean {\n        var flag: MerchGroupRoute[];\n        var reqList: MerchGroupRoute[];\n        flag = this.merchGroupDetail.Routes.filter((r: any) => {\n            if (r.IsRouteNameExists)\n            { return r; }\n        });\n\n        reqList = this.merchGroupDetail.Routes.filter((r: any) => {\n            if (r.IsRequired)\n            { return r; }\n        });\n\n\n\n        if (this.IsGroupNameExists || this.IsRouteNameExists || flag.length > 0 || reqList.length > 0 || !this.form.valid) {\n            return false;\n        }\n        else\n            return true;\n    }\n\n\n    constructor(private dispService: DispserviceService, formbuilder: FormBuilder, public navService: HeadernavService,\n        elementRef: ElementRef, private lookupService: AsyncValidatorService) {\n\n\n\n        this.form = formbuilder.group({\n            groupName: ['', Validators.compose([Validators.required, Validators.maxLength(50)])],\n            route_name: [],\n            owner: ['', Validators.required]\n\n        });\n        this.el = elementRef.nativeElement;\n        this.initalize();\n\n    }\n\n    private stopRefreshing() {\n        this.isRequesting = false;\n    }\n\n    initalize() {\n        this.dbGroupDetail = new MerchGroupDetail();\n        this.merchGroupDetail = new MerchGroupDetail();\n        this.merchGroupDetail.MerchGroupID = 0;\n        this.dbGroupDetail.Routes = [];\n        this.merchGroupDetail.Routes = [];\n        //this.route_data = [];\n        this.routeName = '';\n        this.active = false;\n        setTimeout(() => this.active = true, 0);\n        this.IsGroupNameExists = false;\n        this.IsRouteNameExists = false;\n        this.model4 = '';\n        this.submitted = false;\n        this.IsOwnerValid = true;\n        this.spanGroupName = true;\n        this.dbtempRoutes = [];\n        this.ShowSaveMsg = false;\n        this.routeAreaDisplay = false;\n\n\n    }\n\n    setAddedGroupIndexInList(merchGroupID) {\n        for (var i = 0; i < this.merchGroupData.length; i++) {\n            if (this.merchGroupData[i][\"MerchGroupID\"] == merchGroupID) {\n                this.selectedIdx = i;\n                break;\n            }\n        }\n    }\n\n\n\n    insertMerchGroupData(input: MerchGroupInput) {\n        this.isRequesting = true;\n        this.dispService.set(this._webapi + 'api/Merc/InsertUpdateMerchGroupDetails/');\n        this.dispService.post(JSON.stringify(input))\n            .subscribe(res => {\n                var data: any = res;\n                //   this.groupAreaDisplay = false;\n                if (data.ReturnStatus == 1) {\n                    this.ShowSaveMsg = true;\n                    this.getMerchGroups();\n                    if (this.merchGroupDetail.MerchGroupID == 0) {\n                        this.merchGroupDetail.MerchGroupID = data.NewGroupID;\n                        var merchItem = new MerchGroup();\n                        merchItem.MerchGroupID = data.NewGroupID;\n                        merchItem.GroupName = input.GroupName;\n                        merchItem.SAPBranchID = input.SAPBranchID;\n                        if (this.item.LoggedInUser == this.merchGroupDetail.DefaultOwnerGSN)\n                            merchItem.IsDefault = true;\n                        else\n                            merchItem.IsDefault = false;\n                        this.navService.changeToaddMerchGroup(merchItem);\n                    }\n                    // Refresh inserted data\n                    var detailInput = new MerchGroupDetailInput(this.item.SAPBranchID, this.merchGroupDetail.MerchGroupID);\n                    this.getMerchGroupDetail(detailInput);\n                }\n                else\n                    this.ShowSaveMsg = false;\n            },\n            () => this.stopRefreshing(),\n            () => this.stopRefreshing()\n            );\n    }\n\n    getmerchgroupContainer() {\n        var merchgroupsInput: MerchGroupsInput = new MerchGroupsInput(this.item.SAPBranchID);\n        this.isRequesting = true;\n        this.dispService.set(this._webapi + 'api/Merc/GetMerchGroupDetailsByBranchID/');\n\n        this.dispService.post(JSON.stringify(merchgroupsInput), true)\n            .subscribe(res => {\n                var d: any = res;\n                this.merchGroupData = d.MerchGroupList;\n                this.groupAreaDisplay = true;\n                if (this.merchGroupData.length > 0) {\n                    var detailInput = new MerchGroupDetailInput(this.item.SAPBranchID, this.merchGroupData[0].MerchGroupID);\n                    this.getMerchGroupDetail(detailInput);\n                    this.selectedIdx = 0;\n                }\n                else {\n                    this.groupAreaDisplay = false;\n                }\n            },\n            () => this.stopRefreshing(),\n            () => this.stopRefreshing()\n            );\n    }\n\n    getMerchGroups() {\n        var merchgroupsInput: MerchGroupsInput = new MerchGroupsInput(this.item.SAPBranchID);\n        this.isRequesting = true;\n        this.dispService.set(this._webapi + 'api/Merc/GetMerchGroupDetailsByBranchID/');\n\n        this.dispService.post(JSON.stringify(merchgroupsInput), true)\n            .subscribe(res => {\n                var d: any = res;\n                this.merchGroupData = d.MerchGroupList;\n                this.setAddedGroupIndexInList(this.merchGroupDetail.MerchGroupID);\n            },\n            () => this.stopRefreshing(),\n            () => this.stopRefreshing()\n            );\n    }\n\n\n    getMerchGroupDetail(detailInput: MerchGroupDetailInput) {\n        this.dispService.set(this._webapi + 'api/Merc/GetMerchGroupDetailsByGroupID/');\n        this.isRequesting = true;\n        this.dispService.post(JSON.stringify(detailInput), true)\n            .subscribe(res => {\n                var d: any = res;\n                this.dbGroupDetail = Object.assign({}, d);\n                this.merchGroupDetail = d;\n                this.dbGroupDetailRoutes = [];\n\n                for (var i = 0; i < d.Routes.length; i++) {\n                    var item: any = {};\n                    item.RouteID = this.merchGroupDetail.Routes[i].RouteID;\n                    item.RouteName = this.merchGroupDetail.Routes[i].RouteName;\n\n                    this.dbGroupDetailRoutes.push(item);\n                }\n                var userdetail: User;\n                userdetail = new User();\n                userdetail.DisplayName = this.merchGroupDetail.DefaultOwnerName;\n                userdetail.sAMAccountName = this.merchGroupDetail.DefaultOwnerGSN;\n                this.model4 = this.merchGroupDetail.DefaultOwnerName;\n            },\n            () => this.stopRefreshing(),\n            () => this.stopRefreshing()\n            );\n    }\n\n    deleteMerchGroupByID(input: MerchGroupInput) {\n        this.dispService.set(this._webapi + 'api/Merc/DeleteMerchGroup/');\n        this.isRequesting = true;\n        this.dispService.post(JSON.stringify(input), true)\n            .subscribe(res => {\n                var d: any = res;\n                this.getMerchGroups();\n                var detailInput = new MerchGroupDetailInput(this.item.SAPBranchID, this.merchGroupData[0].MerchGroupID);\n                this.getMerchGroupDetail(detailInput);\n                this.ShowSaveMsg = false;\n                this.selectedIdx = 1;\n            },\n            () => this.stopRefreshing(),\n            () => this.stopRefreshing()\n            );\n    }\n\n    ngOnInit() {\n        //Subscribe\n        this.subscription = this.navService.navItem$.subscribe(item => { this.item = item; this.loadmerchGroupData(item); });\n\n    }\n    ngOnDestroy() {\n        // prevent memory leak when component is destroyed\n        this.subscription.unsubscribe();\n    }\n\n    loadmerchGroupData(item) {\n        this.item = item;\n        this.initalize();\n        if (this.item != null || this.item != undefined)\n            this.getmerchgroupContainer();\n\n    }\n\n}\n"]}