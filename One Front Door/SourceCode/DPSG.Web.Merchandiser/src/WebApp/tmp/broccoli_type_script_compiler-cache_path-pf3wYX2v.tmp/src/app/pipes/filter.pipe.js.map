{"version":3,"file":"filter.pipe.js","sourceRoot":"","sources":["filter.pipe.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAoC,eAAe,CAAC,CAAA;AAKpD;IAAA;IAyBA,CAAC;IAvBD,0BAA0B;IAC1B,WAAW;IAET,8BAAS,GAAT,UAAU,KAAoB,EAAG,UAEhC;QACC,EAAE,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,CAAA,CAAC;YACjB,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QACD,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,UAAA,IAAI;YAEtB,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,UAAU,CAAC,CAAC,CAAC;gBAC7B,mBAAmB;gBACnB,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC5E,MAAM,CAAC,IAAI,CAAC;gBACd,CAAC;YACH,CAAC;YAED,MAAM,CAAC,KAAK,CAAC;QAEf,CAAC,CAAC,CAAC;IACL,CAAC;IA1BH;QAAC,WAAI,CAAC;YACJ,IAAI,EAAE,QAAQ;SACf,CAAC;;kBAAA;IA0BF,iBAAC;AAAD,CAAC,AAzBD,IAyBC;AAzBY,kBAAU,aAyBtB,CAAA","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filter'\n})\nexport class FilterPipe implements PipeTransform {\n\n// manage to handle error \n//debugger;\n\n  transform(items: Array < any > , conditions: {\n    [field: string]: any\n  }): Array < any > {\n    if (items == null){\n      return items;\n    }\n    return items.filter(item => {\n \n      for (let field in conditions) {\n        //no case sensitive\n        if (item[field].toLowerCase().indexOf(conditions[field].toLowerCase()) >= 0) {\n          return true;\n        } \n      }\n      \n      return false;\n\n    });\n  }\n\n}\n\n\n"]}