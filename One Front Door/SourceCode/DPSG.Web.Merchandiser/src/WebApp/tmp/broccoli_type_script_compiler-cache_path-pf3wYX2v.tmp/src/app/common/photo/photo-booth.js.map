{"version":3,"file":"photo-booth.js","sourceRoot":"","sources":["photo-booth.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA8F,eAAe,CAAC,CAAA;AAE9G,WAAY,KAAK;IACf,2CAAS,CAAA;IACT,6CAAU,CAAA;AACZ,CAAC,EAHW,aAAK,KAAL,aAAK,QAGhB;AAHD,IAAY,KAAK,GAAL,aAGX,CAAA;AAED;IAEE,0BAAmB,IAAU,EAAS,OAAe;QAAlC,SAAI,GAAJ,IAAI,CAAM;QAAS,YAAO,GAAP,OAAO,CAAQ;IAErD,CAAC;IACH,uBAAC;AAAD,CAAC,AALD,IAKC;AALY,wBAAgB,mBAK5B,CAAA;AA6BD;IAcE,oBAAmB,OAAmB,EAAU,IAAW;QAAxC,YAAO,GAAP,OAAO,CAAY;QAAU,SAAI,GAAJ,IAAI,CAAO;QAXjD,gBAAW,GAAG,IAAI,mBAAY,EAAE,CAAC;QAEpC,UAAK,GAAG,KAAK,CAAC;QACrB,UAAK,GAAU,KAAK,CAAC,SAAS,CAAC;IAU/B,CAAC;IAED,oCAAe,GAAf;QAAA,iBAwCC;QAtCC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAClC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAC1F,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,IAAI,IAAI,CAAC,SAAS,CAAC,kBAAkB,IAAI,IAAI,CAAC,SAAS,CAAC,eAAe,IAAI,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC;QAElK,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;YAEvB,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC;QAED,IAAI,WAAW,GAAG;YAChB,KAAK,EAAE,KAAK;YACZ,KAAK,EAAE,IAAI;SACZ,CAAC;QAEF,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,WAAW,EAAE,UAAC,MAAM;YAE9C,KAAI,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,mCAAmC;YAEhE,SAAS;YACT,EAAE,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC;gBACnC,KAAI,CAAC,KAAK,CAAC,YAAY,GAAG,MAAM,CAAC;YACnC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,SAAS,GAAG,MAAM,CAAC,GAAG,IAAI,KAAI,CAAC,MAAM,CAAC,SAAS,CAAC;gBACpD,KAAI,CAAC,KAAK,CAAC,GAAG,GAAG,SAAS,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;YACrD,CAAC;YAED,KAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QAEpB,CAAC,EAAE,UAAC,KAAK;YAEP,OAAO;YACP,OAAO,CAAC,GAAG,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAC;QAEvD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAEM,0BAAK,GAAZ;QAEE,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC;IAC/B,CAAC;IAEM,6BAAQ,GAAf;QAAA,iBAwBC;QAtBC,EAAE,CAAA,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;YAEtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YAC5F,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;YAC1C,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;YAE5C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAC5C,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAEzC,8DAA8D;YAC9D,yEAAyE;YACzE,8IAA8I;YAC9I,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;YAElD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;YAEnC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,UAAC,IAAI;gBACtB,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC;oBACZ,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,gBAAgB,CAAC,IAAI,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBACjE,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAGO,kCAAa,GAArB;QAEE,EAAE,CAAA,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;YAEtB,sEAAsE;YACtE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;gBAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;YAAC,CAAC;YAG3D,IAAI,CAAC,CAAC;gBAEJ,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC,OAAO,CAAC,UAAS,KAAK;oBACxD,KAAK,CAAC,IAAI,EAAE,CAAC;gBACf,CAAC,CAAC,CAAC;gBAEH,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC,OAAO,CAAC,UAAS,KAAK;oBACxD,KAAK,CAAC,IAAI,EAAE,CAAC;gBACf,CAAC,CAAC,CAAC;YACL,CAAC;YAED,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;QAC5B,CAAC;IACH,CAAC;IAEO,iCAAY,GAApB;QAEE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QACnB,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC;QACtB,EAAE,CAAA,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;YAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC;IAClF,CAAC;IAED,gCAAW,GAAX;QAEE,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IA3HD;QAAC,aAAM,EAAE;;mDAAA;IA9BX;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,MAAM,EAAE,CAAC,+NAcV,CAAC;YACA,QAAQ,EAAE,+TAQX;SACA,CAAC;;kBAAA;IAgIF,iBAAC;AAAD,CAAC,AA/HD,IA+HC;AA/HY,kBAAU,aA+HtB,CAAA","sourcesContent":["import {  Component, ElementRef, AfterViewInit, OnDestroy, Output, EventEmitter, NgZone} from '@angular/core';\r\n\r\nexport enum State {\r\n  Recording,\r\n  Confirming\r\n}\r\n\r\nexport class GotSnapshotEvent {\r\n\r\n  constructor(public blob: Blob, public dataUrl: string) {\r\n\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'photo-booth',\r\n  styles: [`\r\n    video {\r\n      width: 200px;\r\n      height: 200px;\r\n      object-fit: cover;\r\n    }\r\n    canvas {\r\n      display: none;\r\n    }\r\n    img {\r\n      width: 200px;\r\n      height: 200px;\r\n      object-fit: cover;\r\n    }\r\n`],\r\n  template: `\r\n<div id=\"recorder\" [ngStyle]=\"{'display': state == State.Recording ? 'inherit' : 'none'}\">\r\n  <video muted autoplay (click)=\"snapshot()\"></video>\r\n  <canvas></canvas>\r\n</div>\r\n<div id=\"confirmer\" [ngStyle]=\"{'display': state == State.Confirming ? 'inherit' : 'none'}\">\r\n  <img [src]=\"imgSrc\"/>\r\n</div>\r\n`\r\n})\r\nexport class PhotoBooth  implements AfterViewInit, OnDestroy {\r\n\r\n\r\n  @Output() gotSnapshot = new EventEmitter();\r\n\r\n  public State = State;\r\n  state: State = State.Recording;\r\n  video: any;\r\n  canvas: any;\r\n  navigator: any;\r\n  window: any;\r\n  imgSrc: string;\r\n  private context: CanvasRenderingContext2D;\r\n\r\n  constructor(public element: ElementRef, private zone:NgZone) {\r\n\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n\r\n    this.window = window;\r\n    this.navigator = window.navigator;\r\n    this.video = this.element.nativeElement.querySelector('#recorder').querySelector('video');\r\n    this.navigator.getUserMedia = this.navigator.getUserMedia || this.navigator.webkitGetUserMedia || this.navigator.mozGetUserMedia || this.navigator.msGetUserMedia;\r\n\r\n    if (this.window.stream) {\r\n\r\n      this.releaseVideo();\r\n      this.releaseStream();\r\n    }\r\n\r\n    var constraints = {\r\n      audio: false,\r\n      video: true\r\n    };\r\n\r\n    this.navigator.getUserMedia(constraints, (stream) => {\r\n\r\n      this.window.stream = stream; // make stream available to console\r\n\r\n      //Success\r\n      if (this.navigator.mozGetUserMedia) {\r\n        this.video.mozSrcObject = stream;\r\n      } else {\r\n        var vendorURL = window.URL || this.window.webkitURL;\r\n        this.video.src = vendorURL.createObjectURL(stream);\r\n      }\r\n\r\n      this.video.play();\r\n\r\n    }, (error) => {\r\n\r\n      //Error\r\n      console.log('navigator.getUserMedia error: ', error);\r\n\r\n    });\r\n\r\n    this.start();\r\n  }\r\n\r\n  public start() {\r\n\r\n    this.state = State.Recording;\r\n  }\r\n\r\n  public snapshot() {\r\n\r\n    if(this.window.stream) {\r\n\r\n      this.canvas = this.element.nativeElement.querySelector('#recorder').querySelector('canvas');\r\n      this.canvas.width = this.video.videoWidth;\r\n      this.canvas.height = this.video.videoHeight;\r\n\r\n      this.context = this.canvas.getContext('2d');\r\n      this.context.drawImage(this.video, 0, 0);\r\n\r\n      //For some reason, image/jpeg is much more efficient than png.\r\n      //Theory 1 : It could be that toDataURL is encoding a jpeg & compressing.\r\n      //Theory 2 : It could have been that prevously when saving as png, when we upload a jpeg it gets decompressed and saved as a png and got huge.\r\n      this.imgSrc = this.canvas.toDataURL('image/jpeg');\r\n\r\n      this.state = this.State.Confirming;\r\n\r\n      this.canvas.toBlob((blob) => {\r\n        this.zone.run(() => {\r\n          this.gotSnapshot.emit(new GotSnapshotEvent(blob, this.imgSrc));\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  private releaseStream() {\r\n\r\n    if(this.window.stream) {\r\n\r\n      //Old, deprecated way of stopping the stream using MediaStream object.\r\n      if (this.window.stream.stop) { this.window.stream.stop(); }\r\n\r\n      //New track-based approach to managing audio & video streams.\r\n      else {\r\n\r\n        this.window.stream.getAudioTracks().forEach(function(track) {\r\n          track.stop();\r\n        });\r\n\r\n        this.window.stream.getVideoTracks().forEach(function(track) {\r\n          track.stop();\r\n        });\r\n      }\r\n\r\n      this.window.stream = null;\r\n    }\r\n  }\r\n\r\n  private releaseVideo() {\r\n\r\n    this.video.pause();\r\n    this.video.src = null;\r\n    if(this.video.hasOwnProperty(\"mozSrcObject\")) this.video[\"mozSrcObject\"] = null;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\r\n    this.releaseVideo();\r\n    this.releaseStream();\r\n  }\r\n}"]}