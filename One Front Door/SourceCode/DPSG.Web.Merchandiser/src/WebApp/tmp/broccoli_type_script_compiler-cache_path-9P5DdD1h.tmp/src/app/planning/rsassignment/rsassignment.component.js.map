{"version":3,"file":"rsassignment.component.js","sourceRoot":"","sources":["rsassignment.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { CORE_DIRECTIVES, FORM_DIRECTIVES } from '@angular/common';\nimport {MODAL_DIRECTIVES, BS_VIEW_PROVIDERS} from 'ng2-bootstrap/ng2-bootstrap';\nimport { DispserviceService } from '../../services/dispservice.service';\nimport { RsrouteComponent} from '../rsroute/';\nimport {} from '../services/dispatch';\nimport {RSInput, Dispatches, AccountInput, Account, Accounts, RouteListInput, Route, Store} from '../RouteStoreAssignment';\nimport {MerchConstant} from '../../../app/MerchAppConstant';\nimport {Subscription} from 'rxjs/Subscription';\nimport { HeadernavService } from '../../services/headernav.service';\nimport {MerchGroup} from '../../services/planning';\n\n@Component({\n    moduleId: module.id,\n    selector: 'app-rsassignment',\n    templateUrl: 'rsassignment.component.html',\n    styleUrls: ['rsassignment.component.css'],\n    directives: [MODAL_DIRECTIVES, CORE_DIRECTIVES, FORM_DIRECTIVES, RsrouteComponent],\n    providers: [DispserviceService, HeadernavService],\n    viewProviders: [BS_VIEW_PROVIDERS]\n})\nexport class RsassignmentComponent implements OnInit {\n    private _webapi: string = MerchConstant.WebAPI_ENDPOINT;\n    item: MerchGroup = new MerchGroup();\n    subscription: Subscription;\n\n    public dispatch: Array<Dispatches>;\n    public rsInput: RSInput;\n    public lastModifiedBy: string = 'satrk001';\n    public merchGroupId: number = 102;\n    public selectedWeekDay: number = 2;\n    public accts: Accounts;\n    public acctInput: AccountInput;\n    public allAccts: Array<Account>;\n    public unassignedAccts: Array<Account>;\n    public unassignedAcctsLength: number = 0;\n    public otherAccts: Array<Account>;\n    public selectedacct: string;\n    public routesInput: Array<Route>;\n    public unassignedToggle: boolean = false;\n\n\n    @Input() itemsObservables;\n\n\n    constructor(public dispService: DispserviceService, public navService: HeadernavService) { }\n\n    ngOnInit() {\n        this.subscription = this.navService.navItem$\n            .subscribe(item => {\n                this.item = item;\n                if (this.item.MerchGroupID) {\n                    this.merchGroupId = this.item.MerchGroupID;\n                    this.lastModifiedBy = this.item.LoggedInUser;\n                    this.loadData();\n                }\n            }\n            );\n    }\n\n    setselectedAcct($event) {\n        this.dispService.set(this._webapi + 'api/Merc/GetStoreList/');\n        this.acctInput = new AccountInput(this.merchGroupId, this.selectedWeekDay);\n        this.getUnassignedAccounts(this.acctInput);\n    }\n\n    setSelectedWeekDay(tabIndex) {\n        this.selectedWeekDay = tabIndex;\n        this.loadData();\n    }\n\n    loadData(): void {\n        this.dispService.set(this._webapi + 'api/Merc/GetRSDetailByWeekDay/');\n        this.rsInput = new RSInput(this.merchGroupId, this.selectedWeekDay);\n        this.getDipatchInfoPost(this.rsInput);\n    }\n\n    toggleUnassigned() {\n        if (this.unassignedAcctsLength > 0) {\n            if (this.unassignedToggle)\n                this.unassignedToggle = false;\n            else\n                this.unassignedToggle = true;\n        }\n    }\n\n    setupdatedroute($event) {\n        let targetRouteId = $event.value.routeid;\n        let reassignStore: Store = $event.value.store;\n\n        for (var i = 0; i < this.dispatch.length; i++) {\n\n            if (targetRouteId == this.dispatch[i].RouteID) {\n                this.dispatch[i].Stores.push(reassignStore);\n            }\n\n        }\n        this.pullInfoUpdate();\n\n    }\n\n    pullInfoUpdate() {\n        for (var i = 0; i < this.dispatch.length; i++) {\n\n            let tempStores: Array<Store> = this.dispatch[i].Stores.slice();\n\n            for (var j = 0; j < tempStores.length; j++) {\n                let pullcount = 0;\n                for (var k = 0; k < this.dispatch[i].Stores.length; k++) {\n                    if (tempStores[j].AccountID == this.dispatch[i].Stores[k].AccountID) {\n                        pullcount++;\n                        if (pullcount == 1) {\n                            this.dispatch[i].Stores[k].PullNumber = \"\";\n                        }\n                        else if (pullcount == 2) {\n                            this.dispatch[i].Stores[k].PullNumber = pullcount + \"nd Pull\";\n                        }\n                        else if (pullcount == 3) {\n                            this.dispatch[i].Stores[k].PullNumber = pullcount + \"rd Pull\";\n                        }\n                        else {\n                            this.dispatch[i].Stores[k].PullNumber = pullcount + \"th Pull\";\n                        }\n\n                    }\n                }\n            }\n        }\n    }\n\n\n    getDipatchInfo(): void {\n        this.dispService.get()\n            .subscribe(res => {\n                var data: any = res.json();\n                this.dispatch = data.Routes;\n            },\n            error => {\n\n                if (error.status == 401 || error.status == 404) {\n                    //this.notificationService.printErrorMessage('Authentication required');\n                    //this.utilityService.navigateToSignIn();\n                }\n            });\n\n    }\n\n    removeNullAccount() {\n        for (var i = 0; i < this.dispatch.length; i++) {\n            for (var j = 0; j < this.dispatch[i].Stores.length; j++) {\n                if (this.dispatch[i].Stores[j].AccountID == null) {\n                    this.dispatch[i].Stores.pop();\n                }\n            }\n        }\n    }\n\n    getDipatchInfoPost(data: RSInput) {\n        this.dispService.post(JSON.stringify(data))\n            .subscribe(res => {\n                var data: any = res;\n                this.dispatch = data.RoutesTile;\n                this.routesInput = data.Routes;\n                this.allAccts = data.AllStores;\n                this.unassignedAccts = data.UnassignedStores;\n                this.unassignedAcctsLength = this.unassignedAccts.length;\n\n                this.removeNullAccount();\n                this.pullInfoUpdate();\n            },\n            error => {\n\n                if (error.status == 401 || error.status == 404) {\n                    //this.notificationService.printErrorMessage('Authentication required');\n                    //this.utilityService.navigateToSignIn();\n                }\n            });\n    }\n\n    getUnassignedAccounts(data: AccountInput) {\n        this.dispService.post(JSON.stringify(data), true)\n            .subscribe(res => {\n                var data: any = res;\n                this.unassignedAccts = data.UnassignedStores;\n                this.unassignedAcctsLength = this.unassignedAccts.length;\n            },\n            error => {\n\n                if (error.status == 401 || error.status == 404) {\n                    //this.notificationService.printErrorMessage('Authentication required');\n                    //this.utilityService.navigateToSignIn();\n                }\n            });\n    }\n}\n"]}