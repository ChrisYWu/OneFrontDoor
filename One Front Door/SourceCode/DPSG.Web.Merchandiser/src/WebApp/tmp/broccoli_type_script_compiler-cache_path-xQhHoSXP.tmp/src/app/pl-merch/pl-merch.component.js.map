{"version":3,"file":"pl-merch.component.js","sourceRoot":"","sources":["pl-merch.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  OnInit\n} from '@angular/core';\nimport {\n  PlMerchRowComponent\n} from './pl-merch-row';\nimport {\n  PlRouteRowComponent\n} from './pl-route-row';\nimport {\n  MonitorService\n} from '../services/monitor.service'\nimport {Subscription} from 'rxjs/Subscription';\nimport {MerchGroup} from '../services/planning';\nimport { HeadernavService } from '../services/headernav.service';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'pl-merch',\n  templateUrl: 'pl-merch.component.html',\n  styleUrls: ['pl-merch.component.css'],\n  directives: [PlMerchRowComponent, PlRouteRowComponent],\n  providers: [MonitorService, HeadernavService]\n})\nexport class PlMerchComponent implements OnInit {\n\n  public msgText_MerchToDayRouteList = \"\";\n  public msgText_RouteToDayMerchList= \"\";\n  public errText = \"\";\n\n  public isMerchTab: boolean = true;\n  public RouteMercData: any\n  = {\n        ReturnStatus: 1,\n        Message: null,\n        CorrelationID: \"\",\n        StackTrace: null,\n        AssignedDays: {},\n        RouteToAssigne: {},\n        MerchToAssigne: {},\n        MerchToDayRouteList: [],\n        RouteList: [],\n        RouteToDayMerchList: [],\n        MerchandiserList: [],\n        RouteMerchandiserList: []\n   };\n \n      item: MerchGroup = new MerchGroup();\n      subscription:Subscription;\n\n  //----------------------------------------------Route Methods\n\n  onDeleteRoute(val: any) {\n\n   // debugger;\n\n    let dayMerch = {\n      GSN: \"\",\n      MerchGroupID: -1,\n      LastName: \"\",\n      FirstName: \"\",\n      Email: \"\",\n      Phone: \"\",\n      DayOfWeek: val.dayOfWeek,\n      isOffDay: null,\n      isMerchAssigned: false\n    }\n\n    let merchTA = {};\n\n    for (let a = 0; a < this.RouteMercData.MerchandiserList.length; a++) {\n      if (this.RouteMercData.MerchandiserList[a].GSN == val.GSN) {\n        merchTA = this.RouteMercData.MerchandiserList[a];\n        break;\n      }\n    }\n\n    for (let i = 0; i < this.RouteMercData.RouteToDayMerchList.length; i++) {\n      if (this.RouteMercData.RouteToDayMerchList[i].RouteID == val.route.RouteID) {\n\n\n        switch (val.dayOfWeek) {\n          case 1:\n            this.RouteMercData.RouteToDayMerchList[i].Sunday = dayMerch;\n            this.RouteMercData.MerchToAssigne.Sunday.splice(0, 0, merchTA);\n            break;\n          case 2:\n            this.RouteMercData.RouteToDayMerchList[i].Monday = dayMerch;\n            this.RouteMercData.MerchToAssigne.Monday.splice(0, 0, merchTA);\n            break;\n          case 3:\n            this.RouteMercData.RouteToDayMerchList[i].Tuesday = dayMerch;\n            this.RouteMercData.MerchToAssigne.Tuesday.splice(0, 0, merchTA);\n            break;\n          case 4:\n            this.RouteMercData.RouteToDayMerchList[i].Wednesday = dayMerch;\n            this.RouteMercData.MerchToAssigne.Wednesday.splice(0, 0, merchTA);\n            break;\n          case 5:\n            this.RouteMercData.RouteToDayMerchList[i].Thursday = dayMerch;\n            this.RouteMercData.MerchToAssigne.Thursday.splice(0, 0, merchTA);\n            break;\n          case 6:\n            this.RouteMercData.RouteToDayMerchList[i].Friday = dayMerch;\n            this.RouteMercData.MerchToAssigne.Friday.splice(0, 0, merchTA);\n            break;\n          case 7:\n            this.RouteMercData.RouteToDayMerchList[i].Saturday = dayMerch;\n            this.RouteMercData.MerchToAssigne.Saturday.splice(0, 0, merchTA);\n            break;\n\n        }\n        break;\n      }\n    }\n\n//this is database delete call - maybe goiing to drop \nthis.deleteRouteMerchandiser(val.route.RouteID,val.dayOfWeek, val.GSN)\n\n  }\n\n  updateMerchToAssigne(merchToAssigne, merchToDayRoute) {\n\n    let _updateMerchToAssigne = [];\n\n    for (let i = 0; i < merchToAssigne.length; i++) {\n\n      if (merchToAssigne[i].GSN != merchToDayRoute.GSN) {\n        _updateMerchToAssigne.push(merchToAssigne[i]);\n      }\n\n    }\n    return _updateMerchToAssigne;\n  }\n\n  updateRouteToDayMerchList(routeToDayMerch, merchToDayRoute) {\n    let updateRouteToDayMerch: any = routeToDayMerch;\n\n    updateRouteToDayMerch.LastName = merchToDayRoute.LastName;\n    updateRouteToDayMerch.FirstName = merchToDayRoute.FirstName;\n    updateRouteToDayMerch.Email = merchToDayRoute.Email;\n    updateRouteToDayMerch.Phone = merchToDayRoute.Phone;\n    updateRouteToDayMerch.isOffDay = merchToDayRoute.isOffDay;\n    updateRouteToDayMerch.isMerchAssigned = true;\n\n    return updateRouteToDayMerch\n\n  }\n\n  onAddRoute(val: any) {\n    //{'route': val.route, 'dayOfWeek': val.DayOfWeek, 'merchToDayRoute': this.MerchToDayRoute}\n    // remove from availbeRoute\n    // remove from availble available Merchaniser \n   // debugger;\n    let _dayOfWeek = val.dayOfWeek;\n    let _route = val.route;\n    let _merchToDayRoute = val.merchToDayRoute;\n    let availableMerch: any;\n\ndebugger\n\n    switch (val.dayOfWeek) {\n     case 1:\n        availableMerch = this.RouteMercData.MerchToAssigne.Sunday;\n        this.RouteMercData.MerchToAssigne.Sunday = this.updateMerchToAssigne(availableMerch, _merchToDayRoute)\n        break;\n      case 2:\n        availableMerch = this.RouteMercData.MerchToAssigne.Monday;\n        this.RouteMercData.MerchToAssigne.Monday = this.updateMerchToAssigne(availableMerch, _merchToDayRoute)\n        break;\n      case 3:\n        availableMerch = this.RouteMercData.MerchToAssigne.Tuesday;\n        this.RouteMercData.MerchToAssigne.Tuesday = this.updateMerchToAssigne(availableMerch, _merchToDayRoute)\n        break;\n      case 4:\n        availableMerch = this.RouteMercData.MerchToAssigne.Wednesday;\n        this.RouteMercData.MerchToAssigne.Wednesday = this.updateMerchToAssigne(availableMerch, _merchToDayRoute)\n        break;\n      case 5:\n        availableMerch = this.RouteMercData.MerchToAssigne.Thursday;\n        this.RouteMercData.MerchToAssigne.Thursday = this.updateMerchToAssigne(availableMerch, _merchToDayRoute)\n        break;\n      case 6:\n        availableMerch = this.RouteMercData.MerchToAssigne.Friday;\n        this.RouteMercData.MerchToAssigne.Friday = this.updateMerchToAssigne(availableMerch, _merchToDayRoute)\n        break;\n      case 7:\n        availableMerch = this.RouteMercData.MerchToAssigne.Saturday;\n        this.RouteMercData.MerchToAssigne.Saturday = this.updateMerchToAssigne(availableMerch, _merchToDayRoute)\n        break;\n\n    }\n\n    //----------------------------------------------RouteToDayMerchList update  ----\n    // do do debug here - getting error here \n    for (let i = 0; i < this.RouteMercData.RouteToDayMerchList.length; i++) {\n      if (this.RouteMercData.RouteToDayMerchList[i].RouteID == _route.RouteID) {\n        let routeToDayMerch: any;\n\n        switch (val.dayOfWeek) {\n          case 1:\n            routeToDayMerch = this.RouteMercData.RouteToDayMerchList[i].Sunday;\n            this.RouteMercData.RouteToDayMerchList[i].Sunday = this.updateRouteToDayMerchList(routeToDayMerch, _merchToDayRoute);\n            break;\n          case 2:\n            routeToDayMerch = this.RouteMercData.RouteToDayMerchList[i].Monday;\n            this.RouteMercData.RouteToDayMerchList[i].Monday = this.updateRouteToDayMerchList(routeToDayMerch, _merchToDayRoute);\n            break;\n          case 3:\n            routeToDayMerch = this.RouteMercData.RouteToDayMerchList[i].Tuesday;\n            this.RouteMercData.RouteToDayMerchList[i].Tuesday = this.updateRouteToDayMerchList(routeToDayMerch, _merchToDayRoute);\n            break;\n          case 4:\n            routeToDayMerch = this.RouteMercData.RouteToDayMerchList[i].Wednesday;\n            this.RouteMercData.RouteToDayMerchList[i].Wednesday = this.updateRouteToDayMerchList(routeToDayMerch, _merchToDayRoute);\n            break;\n          case 5:\n            routeToDayMerch = this.RouteMercData.RouteToDayMerchList[i].Thursday;\n            this.RouteMercData.RouteToDayMerchList[i].Thursday = this.updateRouteToDayMerchList(routeToDayMerch, _merchToDayRoute);\n            break;\n          case 6:\n            routeToDayMerch = this.RouteMercData.RouteToDayMerchList[i].Friday;\n            this.RouteMercData.RouteToDayMerchList[i].Friday = this.updateRouteToDayMerchList(routeToDayMerch, _merchToDayRoute);\n            break;\n          case 7:\n            routeToDayMerch = this.RouteMercData.RouteToDayMerchList[i].Saturday;\n            this.RouteMercData.RouteToDayMerchList[i].Saturday = this.updateRouteToDayMerchList(routeToDayMerch, _merchToDayRoute);\n            break;\n\n        }\n\n\n        break;\n      }\n\n    }\n\n\n    this.addRouteMerchandiser(_route.RouteID,_dayOfWeek,_merchToDayRoute.GSN)\n\n  }\n\n\n  //---------------------------------------------Merch methods\n\n  onDeleteMerch(val: any) {\n\n    let dayRoute = {\n      RouteID: -1,\n      RouteName: \"\",\n      DayOfWeek: val.dayOfWeek,\n      isOffDay: null,\n      isRouteAssigned: false\n    }\n\n\n    let routeTA = {};\n\n    for (let a = 0; a < this.RouteMercData.RouteList.length; a++) {\n      if (this.RouteMercData.RouteList[a].RouteID == val.routeID) {\n        routeTA = this.RouteMercData.RouteList[a];\n        break;\n      }\n    }\n\n\n    for (let i = 0; i < this.RouteMercData.MerchToDayRouteList.length; i++) {\n      if (this.RouteMercData.MerchToDayRouteList[i].GSN == val.merch.GSN) {\n        switch (val.dayOfWeek) {\n          case 1:\n            this.RouteMercData.MerchToDayRouteList[i].Sunday = dayRoute;\n            this.RouteMercData.RouteToAssigne.Sunday.splice(0, 0, routeTA);\n            break;\n          case 2:\n            this.RouteMercData.MerchToDayRouteList[i].Monday = dayRoute;\n            this.RouteMercData.RouteToAssigne.Monday.splice(0, 0, routeTA);\n            break;\n          case 3:\n            this.RouteMercData.MerchToDayRouteList[i].Tuesday = dayRoute;\n            this.RouteMercData.RouteToAssigne.Tuesday.splice(0, 0, routeTA);\n            break;\n          case 4:\n            this.RouteMercData.MerchToDayRouteList[i].Wednesday = dayRoute;\n            this.RouteMercData.RouteToAssigne.Wednesday.splice(0, 0, routeTA);\n            break;\n          case 5:\n            this.RouteMercData.MerchToDayRouteList[i].Thursday = dayRoute;\n            this.RouteMercData.RouteToAssigne.Thursday.splice(0, 0, routeTA);\n            break;\n          case 6:\n            this.RouteMercData.MerchToDayRouteList[i].Friday = dayRoute;\n            this.RouteMercData.RouteToAssigne.Friday.splice(0, 0, routeTA);\n            break;\n          case 7:\n            this.RouteMercData.MerchToDayRouteList[i].Saturday = dayRoute;\n            this.RouteMercData.RouteToAssigne.Saturday.splice(0, 0, routeTA);\n            break;\n\n        }\n        break;\n      }\n    }\n\n\n//this is database delete call - maybe goiing to drop \nthis.deleteRouteMerchandiser( val.routeID, val.dayOfWeek, val.merch.GSN)\n\n  }\n\n\n  updateRouteToAssigne(routeToAssigne, routeToDayMerch) {\n   \n    let _updateRouteToAssigne = [];\n\n    for (let i = 0; i < routeToAssigne.length; i++) {\n\n      if (routeToAssigne[i].RouteID != routeToDayMerch.RouteID) {\n        _updateRouteToAssigne.push(routeToAssigne[i]);\n      }\n\n    }\n    return _updateRouteToAssigne;\n  }\n\n\n  updateMerchToDayRouteList(merchToDayRoute, routeToDayMerch) {\n    //debugger;\n\n    let updateMerchToDayRoute: any = merchToDayRoute;\n\n    updateMerchToDayRoute.RouteID = routeToDayMerch.RouteID;\n    updateMerchToDayRoute.RouteName = routeToDayMerch.RouteName;\n    updateMerchToDayRoute.DayOfWeek = routeToDayMerch.DayOfWeek;\n    updateMerchToDayRoute.isRouteAssigned = true;\n\n    return updateMerchToDayRoute\n\n  }\n\n  onAddMerchandiser(val: any) {\n\n    //debugger;\n    let _dayOfWeek = val.dayOfWeek;\n    let _merchandiser = val.merchandiser;\n    let _routeToDayMerch = val.routeToDayMerch;\n    let availableRoute: any;\n\n\n    switch (val.dayOfWeek) {\n            case 1:\n        availableRoute = this.RouteMercData.RouteToAssigne.Sunday;\n        this.RouteMercData.RouteToAssigne.Sunday = this.updateRouteToAssigne(availableRoute, _routeToDayMerch)\n        break;\n      case 2:\n        availableRoute = this.RouteMercData.RouteToAssigne.Monday;\n        this.RouteMercData.RouteToAssigne.Monday = this.updateRouteToAssigne(availableRoute, _routeToDayMerch)\n        break;\n      case 3:\n        availableRoute = this.RouteMercData.RouteToAssigne.Tuesday;\n        this.RouteMercData.RouteToAssigne.Tuesday = this.updateRouteToAssigne(availableRoute, _routeToDayMerch)\n        break;\n      case 4:\n        availableRoute = this.RouteMercData.RouteToAssigne.Wednesday;\n        this.RouteMercData.RouteToAssigne.Wednesday = this.updateRouteToAssigne(availableRoute, _routeToDayMerch)\n        break;\n      case 5:\n        availableRoute = this.RouteMercData.RouteToAssigne.Thursday;\n        this.RouteMercData.RouteToAssigne.Thursday = this.updateRouteToAssigne(availableRoute, _routeToDayMerch)\n        break;\n      case 6:\n        availableRoute = this.RouteMercData.RouteToAssigne.Friday;\n        this.RouteMercData.RouteToAssigne.Friday = this.updateRouteToAssigne(availableRoute, _routeToDayMerch)\n        break;\n      case 7:\n        availableRoute = this.RouteMercData.RouteToAssigne.Saturday;\n        this.RouteMercData.RouteToAssigne.Saturday = this.updateRouteToAssigne(availableRoute, _routeToDayMerch)\n        break;\n\n    }\n\n\n    for (let i = 0; i < this.RouteMercData.MerchToDayRouteList.length; i++) {\n      if (this.RouteMercData.MerchToDayRouteList[i].GSN == _merchandiser.GSN) {\n\n        let merchToDayRoute: any;\n\n        switch (val.dayOfWeek) {\n          case 1:\n            merchToDayRoute = this.RouteMercData.MerchToDayRouteList[i].Sunday;\n            this.RouteMercData.MerchToDayRouteList[i].Sunday = this.updateMerchToDayRouteList(merchToDayRoute, _routeToDayMerch);\n            break;\n          case 2:\n            merchToDayRoute = this.RouteMercData.MerchToDayRouteList[i].Monday;\n            this.RouteMercData.MerchToDayRouteList[i].Monday = this.updateMerchToDayRouteList(merchToDayRoute, _routeToDayMerch);\n            break;\n          case 3:\n            merchToDayRoute = this.RouteMercData.MerchToDayRouteList[i].Tuesday;\n            this.RouteMercData.MerchToDayRouteList[i].Tuesday = this.updateMerchToDayRouteList(merchToDayRoute, _routeToDayMerch);\n            break;\n          case 4:\n            merchToDayRoute = this.RouteMercData.MerchToDayRouteList[i].Wednesday;\n            this.RouteMercData.MerchToDayRouteList[i].Wednesday = this.updateMerchToDayRouteList(merchToDayRoute, _routeToDayMerch);\n            break;\n          case 5:\n            merchToDayRoute = this.RouteMercData.MerchToDayRouteList[i].Thursday;\n            this.RouteMercData.MerchToDayRouteList[i].Thursday = this.updateMerchToDayRouteList(merchToDayRoute, _routeToDayMerch);\n            break;\n          case 6:\n            merchToDayRoute = this.RouteMercData.MerchToDayRouteList[i].Friday;\n            this.RouteMercData.MerchToDayRouteList[i].Friday = this.updateMerchToDayRouteList(merchToDayRoute, _routeToDayMerch);\n            break;\n          case 7:\n            merchToDayRoute = this.RouteMercData.MerchToDayRouteList[i].Saturday;\n            this.RouteMercData.MerchToDayRouteList[i].Saturday = this.updateMerchToDayRouteList(merchToDayRoute, _routeToDayMerch);\n            break;\n\n        }\n\n\n        break;\n      }\n\n    }\n \n    \n  this.addRouteMerchandiser(_routeToDayMerch.RouteID,_dayOfWeek,_merchandiser.GSN)\n \n}\n\n\n\n  constructor(private monitorService: MonitorService, public navService: HeadernavService) {\n    // this.getRouteMercDataStatic();\n    // this.getRouteMercData(101);\n  }\n\n  ngOnInit() {\n           this.subscription =  this.navService.navItem$.subscribe(item => {this.item = item;    this.loadRouteMercData(this.item); });\n  }\n\n\n ngOnDestroy() {\n    // prevent memory leak when component is destroyed\n    this.subscription.unsubscribe();\n  }\n\n    loadRouteMercData(item:MerchGroup)\n    {\n      this.item = item;\n      if(this.item!=null || this.item!=undefined)\n      {       \n         this.getRouteMercData();\n      }\n     \n    }\n\n\n\n  //------------------------------------database/service \n\ndeleteRouteMerchandiser(routeID: number, dayOfWeek: number, GSN:string)\n{    // debugger\n      this.editRouteMerchandiser(routeID,dayOfWeek,GSN, true);\n}\n\naddRouteMerchandiser(routeID: number, dayOfWeek: number, GSN:string)\n{    //  debugger\n      this.editRouteMerchandiser(routeID,dayOfWeek,GSN, false);\n}\n\n\n  editRouteMerchandiser(routeID: number, dayOfWeek: number, GSN:string, isForDelete: Boolean) {\n    // isForDelete - if only to delete record than set as true, other wise it add a record, before add it delete exit record, record is as below  \n    //  RouteID\tDayOfWeek\tGSN\tLastModified\tLastModifiedBy\n    // 10120\t1\tARMDZ001\t2016-06-09 16:00:56.0083365\tSystem\n   // debugger\n    let result = {};\n\n    this.monitorService.editRouteMerchandiser(routeID, dayOfWeek, GSN, isForDelete)\n      .subscribe(res => {\n          var data: any[] = res.json();\n          result = data;\n\n        },\n        error => {\n          if (error.status == 401 || error.status == 404) {\n            //not manageing this time \n          }\n        });\n\n\n  }\n\n\n\n  getRouteMercData() {\n\n\n  this.msgText_MerchToDayRouteList = \"\";\n  this.msgText_RouteToDayMerchList= \"\";\n  this.errText = \"\";\n\n  //  debugger\nif (this.item.MerchGroupID != undefined || this.item.MerchGroupID != null)\n    this.monitorService.getRouteMerchandiserByMerchGroupID(this.item.MerchGroupID)\n      .subscribe(res => {\n          var data: any[] = res.json();\n          this.RouteMercData = data;\n           this.errText = \"\";\n          if (this.RouteMercData.MerchToDayRouteList.length <=0)\n          {\n                  this.msgText_MerchToDayRouteList = \"No data found\";\n          }\n\n          if (this.RouteMercData.RouteToDayMerchList.length <=0)\n          {\n                  this.msgText_RouteToDayMerchList = \"No data found\";\n          }\n\n        },\n        error => {\n          if (error.status == 401 || error.status == 404) {\n            //not manageing this time \n\n              this.msgText_MerchToDayRouteList = \"\";\n             this.msgText_RouteToDayMerchList= \"\";\n            this.errText = \"Error occur when getting data \";\n\n          }\n        });\n\n\n  }\n\n\n  //below to remove latter on  \n  getRouteMercDataStatic() {\n\n      //  debugger\n\n      this.RouteMercData ={};\n\n\n\n    }\n    //end of get method\n\n}"]}