{"version":3,"file":"storeservice.component.spec.js","sourceRoot":"","sources":["storeservice.component.spec.ts"],"names":[],"mappings":"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","sourcesContent":["\r\nimport {Component, OnInit, Input, ViewEncapsulation} from '@angular/core';\r\nimport {FORM_DIRECTIVES} from '@angular/common';\r\nimport {bootstrap}     from '@angular/platform-browser-dynamic';\r\n\r\nimport { DispserviceService } from '../../services/dispservice.service';\r\nimport {StoreServiceInput, StoreService, UserMerchGroupInput, UserMerchGroup} from './MerchReport';\r\n\r\nimport {SearchPipe} from \"ng2-easy-table/app/pipes/header-pipe\";\r\nimport {PaginationPipe} from \"ng2-easy-table/app/pipes/pagination-pipe\";\r\nimport {GlobalSearchPipe} from \"ng2-easy-table/app/pipes/global-search-pipe\";\r\nimport {FiltersService} from \"ng2-easy-table/app/services/filters-service\";\r\nimport {ConfigService} from \"ng2-easy-table/app/services/config-service\";\r\nimport {ResourceService} from \"ng2-easy-table/app/services/resource-service\";\r\nimport {GlobalSearch} from \"ng2-easy-table/app/components/global-search/global-search.component\";\r\nimport {CsvExport} from \"ng2-easy-table/app/components/dropdown/csv-export.component\";\r\nimport {Header} from \"ng2-easy-table/app/components/header/header.component\";\r\nimport {Pagination} from \"ng2-easy-table/app/components/pagination/pagination.component\";\r\n\r\nimport {DatePicker} from 'ng2-datepicker/ng2-datepicker';\r\nimport {ChangeNamePipe} from './NamePipe';\r\nimport {MultiselectDropdown, IMultiSelectOption, IMultiSelectSettings, IMultiSelectTexts} from './multiselect-dropdown';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'app-storeservice',\r\n    templateUrl: 'storeservice.component.html',\r\n    styleUrls: ['storeservice.component.css'],\r\n    directives: [Header, Pagination, GlobalSearch, CsvExport, DatePicker, FORM_DIRECTIVES, MultiselectDropdown],\r\n    providers: [FiltersService, ResourceService, ConfigService, DispserviceService],\r\n    pipes: [SearchPipe, PaginationPipe, GlobalSearchPipe, ChangeNamePipe]\r\n\r\n})\r\n\r\n\r\nexport class StoreserviceComponent implements OnInit {\r\n\r\n    private _webapi: string = 'http://merchandiser/';\r\n    public storeInput: StoreServiceInput;\r\n    public usrGeo: UserMerchGroupInput;\r\n    public usrAllGeo: UserMerchGroup;\r\n    public reportdata: Array<StoreService>;\r\n    public keys: Array<any>;\r\n    public numberOfItems: number;\r\n    public FromDate: string;\r\n    public ToDate: string;\r\n    public selectedGeo: Array<any> = [];\r\n    public showNoDataMessage: Boolean = false;\r\n\r\n\r\n    private mySettings: IMultiSelectSettings = {\r\n        pullRight: false,\r\n        enableSearch: false,\r\n        checkedStyle: 'checkboxes',\r\n        buttonClasses: 'btn btn-default',\r\n        selectionLimit: 5,\r\n        closeOnSelect: false,\r\n        showCheckAll: false,\r\n        showUncheckAll: false,\r\n        dynamicTitleMaxItems: 0,\r\n        maxHeight: '300px',\r\n    };\r\n\r\n    private myTexts: IMultiSelectTexts = {\r\n        checkAll: 'Check all',\r\n        uncheckAll: 'Uncheck all',\r\n        checked: 'checked',\r\n        checkedPlural: 'checked',\r\n        searchPlaceholder: 'Search...',\r\n        defaultTitle: 'Select Groups',\r\n    };\r\n\r\n\r\n    constructor(public filtersService: FiltersService,\r\n        public config: ConfigService,\r\n        public resource: ResourceService,\r\n        public dispService: DispserviceService) {\r\n        this.numberOfItems = 1;\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        // Set previous week from and to date\r\n        var curr = new Date; // get current date\r\n        var first = curr.getDate() - curr.getDay(); // First day is the day of the month - the day of the week\r\n        var last = first + 6; // last day is the first day + 6\r\n\r\n        this.FromDate = new Date(curr.setDate(first - 7)).toISOString().split('T')[0];\r\n        this.ToDate = new Date(curr.setDate(last - 7)).toISOString().split('T')[0];\r\n\r\n        // Assign default user merch Group\r\n        this.selectedGeo[0] = 101;\r\n\r\n        this.getMerchGroups();\r\n        this.loadData();\r\n    }\r\n\r\n    optionsUpdated($event) {\r\n        this.selectedGeo = $event;\r\n    }\r\n\r\n    getMerchGroups(): void {\r\n        this.dispService.set(this._webapi + 'api/Merc/GetUserMerchGroups/');\r\n        this.usrGeo = new UserMerchGroupInput('AGYAX003');\r\n        this.getUserMerchGroups(this.usrGeo);\r\n    }\r\n\r\n    getUserMerchGroups(inputdata: UserMerchGroupInput) {\r\n        this.dispService.post(JSON.stringify(inputdata), true)\r\n            .subscribe(res => {\r\n                var d: any = res;\r\n                this.usrAllGeo = d.UserMerchGroups;\r\n            },\r\n            error => {\r\n                if (error.status == 401 || error.status == 404) {\r\n                }\r\n            });\r\n    }\r\n\r\n    loadData(): void {\r\n\r\n        this.dispService.set(this._webapi + 'api/Merc/GetStoreServicedReport/');\r\n        this.storeInput = new StoreServiceInput(this.selectedGeo.join(','), new Date(this.FromDate), new Date(this.ToDate));\r\n        this.getAllStoreReport(this.storeInput);\r\n    }\r\n\r\n    getAllStoreReport(inputdata: StoreServiceInput) {\r\n        this.dispService.post(JSON.stringify(inputdata), true)\r\n            .subscribe(res => {\r\n                var d: any = res;\r\n                this.reportdata = d.StoreServices;\r\n                this.numberOfItems = d.StoreServices.length;\r\n                if (d.StoreServices.length > 0) {\r\n                    this.showNoDataMessage = false;\r\n                    this.keys = Object.keys(d.StoreServices[0]);\r\n                    this.resource.keys = this.keys;\r\n                }\r\n                else {\r\n                    this.showNoDataMessage = true;\r\n                }\r\n\r\n            },\r\n            error => {\r\n                if (error.status == 401 || error.status == 404) {\r\n                }\r\n            });\r\n    }\r\n\r\n    FilterReportData() {\r\n\r\n        if (this.ToDate < this.FromDate) {\r\n            alert(\"To Date cannot be less than From Date.\");\r\n            return;\r\n        }\r\n        else if (this.selectedGeo.length <= 0) {\r\n            alert(\"Please select Geo.\");\r\n            return;\r\n        }\r\n        else if (this.days_between(this.ToDate, this.FromDate) > 31) {\r\n            alert(\"Date range cannot exceed 31 days.\")\r\n            return;\r\n        }\r\n\r\n        this.storeInput = new StoreServiceInput(this.selectedGeo.join(','), new Date(this.FromDate), new Date(this.ToDate));\r\n        this.getAllStoreReport(this.storeInput);\r\n    }\r\n\r\n    public orderBy(key: string) {\r\n        this.reportdata = this.resource.sortBy(key);\r\n    }\r\n\r\n    public parseDate(input) {\r\n        var parts = input.match(/(\\d+)/g);\r\n        return new Date(parts[0], parts[1] - 1, parts[2]); // months are 0-based\r\n    }\r\n\r\n\r\n    public days_between(date1, date2) {\r\n\r\n        // The number of milliseconds in one day\r\n        var ONE_DAY = 1000 * 60 * 60 * 24\r\n\r\n        var d1 = this.parseDate(date1);\r\n        var d2 = this.parseDate(date2);\r\n\r\n        // Convert both dates to milliseconds\r\n        var date1_ms = d1.getTime();\r\n        var date2_ms = d2.getTime();\r\n\r\n        // Calculate the difference in milliseconds\r\n        var difference_ms = Math.abs(date1_ms - date2_ms);\r\n\r\n        // Convert back to days and return\r\n        return Math.round(difference_ms / ONE_DAY);\r\n    }\r\n\r\n}\r\n"]}