{"version":3,"file":"create-merch-group.component.js","sourceRoot":"","sources":["create-merch-group.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit,Input, ViewEncapsulation,ElementRef} from '@angular/core';\nimport { DispserviceService } from '../../services/dispservice.service';\nimport {AutoCompleteComponent, AutoCompleteDirective} from 'ng2-auto-complete';\nimport {FilterPipe} from '../../pipes/filter.pipe';\nimport {MaskDirective} from '../../directives/mask.directive';\nimport {MerchGroup, MerchGroupInput, MerchGroupDetail,\n    MerchGroupRoute, MerchGroupDetailInput, MerchGroupsInput, MerchGroupCheckInput,\n    MerchGroupCheckOutput, User} from '../../services/planning';\n\nimport {CORE_DIRECTIVES, Control, ControlGroup, FormBuilder, Validators} from '@angular/common';\nimport {FORM_DIRECTIVES, REACTIVE_FORM_DIRECTIVES, FormGroup, FormControl} from '@angular/forms';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/Rx';\nimport {MerchConstant} from '../../../app/MerchAppConstant';\nimport {Subscription} from 'rxjs/Subscription';\nimport { HeadernavService } from '../../services/headernav.service';\nimport { AsyncValidatorService } from '../../services/async-validator.service';\n\n\n\n@Component({\n    moduleId: module.id,\n    selector: 'app-create-merch-group',\n    templateUrl: 'create-merch-group.component.html',\n    styleUrls: ['create-merch-group.component.css'],  \n    directives: [MaskDirective, CORE_DIRECTIVES, FORM_DIRECTIVES,\n     REACTIVE_FORM_DIRECTIVES, AutoCompleteComponent, AutoCompleteDirective],      \n    providers: [DispserviceService,HeadernavService,AsyncValidatorService],\n    pipes: [FilterPipe],\n    \n\n})\n\n\n\n\n\n\n\nexport class CreateMerchGroupComponent implements OnInit {\n\n    //Initalize \n    private _webapi: string = MerchConstant.WebAPI_ENDPOINT;//'http://localhost:8888/';\n   \n    public merchGroupData: MerchGroup[];\n    public merchGroupInput: MerchGroupInput;   \n    public merchGroupDetail: MerchGroupDetail;\n    public dbGroupDetail: any;\n    private dbGroupDetailRoutes: Array<any>;\n    private dbtempRoutes: Array<any>=[];\n    public selectedIdx: number= 0;\n    \n   \n\n\n    private groupAreaDisplay: boolean = false;\n    private routeAreaDisplay: boolean = false;\n    public disabled: boolean = false;\n   \n    private routeName: any;\n    private IsEditRoute: boolean = false;\n    private active: boolean = true;\n    private submitted: boolean = false;   \n    form: ControlGroup;\n \n\n    private modifiedRoutes: MerchGroupRoute[];\n    private IsGroupNameExists: boolean = false;\n    private IsRouteNameExists: boolean = false;  \n    public model4;\n    private spanGroupName :boolean = true;\n    private IsOwnerValid: boolean = true; \n    private ShowSaveMsg : boolean = false; \n      item: MerchGroup = new MerchGroup();\n      subscription:Subscription;\n\n  public el: HTMLElement;\n  public inputGrpEl: HTMLInputElement;\n  public inputRouteEl: HTMLInputElement;\n  private inputURL : string; \n   public isLoading: boolean = false;\n\n   \n\n    public GetADUsers: string = this._webapi + 'api/Merc/GetUserDetails/:keyword';\n  \n   \n \n  onspanEditGroupName(){\n     if(this.spanGroupName)\n     this.spanGroupName = false;\n     else\n       this.spanGroupName = true;\n  }\n  \n\n    public onAddGroupSelect() {\n        this.initalize();\n        this.groupAreaDisplay = true;\n        this.spanGroupName = false;\n        this.routeAreaDisplay = false;\n        if(this.merchGroupData!=null)\n        {\n           var count = this.merchGroupData.length;\n           this.selectedIdx = count;\n        } \n          \n\n\n    }\n    public onAddRouteSelect() {\n        if(this.routeAreaDisplay)\n        this.routeAreaDisplay = false;\n        else\n        this.routeAreaDisplay = true;\n    }\n    public onGroupSelect(groupID: number, idx: number) {\n        this.selectedIdx = idx;\n        this.initalize();\n        var detailInput = new MerchGroupDetailInput(this.item.SAPBranchID, groupID);\n        this.getMerchGroupDetail(detailInput);\n        this.groupAreaDisplay = true;\n        this.routeAreaDisplay = false;\n    }\n\n    public onAddRouteSave() {\n        var route = new MerchGroupRoute();\n        route.RouteName = this.routeName;\n        route.CanUserDelete = true;\n        this.merchGroupDetail.Routes.push(route);\n        //this.route_data.push(route);  \n        this.routeAreaDisplay = false;\n        this.routeName = '';         \n    }\n    public onEditRoute(route: MerchGroupRoute,index:Number) {\n        for(var n = 0; n< this.merchGroupDetail.Routes.length;n++) {\n\n            if(index == n)\n            {\n                this.merchGroupDetail.Routes[n].IsEditRoute = true;\n            }\n            else\n               this.merchGroupDetail.Routes[n].IsEditRoute = false;          \n                   \n        }\n\n\n    }\n\n   \n\n    \n\n    onRouteDelete(route: MerchGroupRoute,index:Number) {\n        for (var n = 0; n< this.merchGroupDetail.Routes.length;n++) {\n\n            if(n==index)\n            {\n            \n            if (this.merchGroupDetail.Routes[n].RouteID == route.RouteID && route.RouteID != null && route.CanUserDelete) {\n                this.merchGroupDetail.Routes[n].IsRouteDeleted = true;\n                break;\n            }\n\n            else if (this.merchGroupDetail.Routes[n].RouteName == route.RouteName && route.RouteID == null) {\n\n                this.merchGroupDetail.Routes[n].IsRouteDeleted = true;\n                break;\n            }\n            else {\n                alert('The route cannot be deleted ');\n                break;\n\n            }\n          }\n\n        }\n\n        this.merchGroupDetail.Routes = this.merchGroupDetail.Routes.filter((route: any) => {\n            if (route.IsRouteDeleted != true)\n            { return route; }\n        });\n\n    }\n\n    onMerchGroupDelete(group: MerchGroup) {\n        if (group.CanUserDelete) {\n            var input = new MerchGroupInput(this.item.SAPBranchID, group.MerchGroupID, '', '', '', '', []);\n            this.deleteMerchGroupByID(input);\n        }\n        else {\n            alert('The group cannot be deleted ');\n        }\n    }\n\n    public onMerchGroupSave() {\n\n        this.submitted = true;\n        this.ShowSaveMsg = false;\n        if (this.ValidationsCheck()) {\n            var userdetail = this.model4;\n           \n           if(this.model4.sAMAccountName!=undefined && this.model4.DisplayName!=undefined)\n           {\n             this.merchGroupDetail.DefaultOwnerGSN = this.model4.sAMAccountName;            \n             this.merchGroupDetail.DefaultOwnerName = this.model4.DisplayName;\n           }\n             \n           \n            \n               this.merchGroupInput = new MerchGroupInput(this.item.SAPBranchID,\n                this.merchGroupDetail.MerchGroupID,\n                this.merchGroupDetail.GroupName,\n                this.merchGroupDetail.DefaultOwnerGSN,\n                this.merchGroupDetail.DefaultOwnerName,\n                this.item.LoggedInUser, this.merchGroupDetail.Routes\n            );\n            this.insertMerchGroupData(this.merchGroupInput);\n        }       \n    }\n\n\n\n\n\n\n  validateAsyncGroupName(): void {\n    if (this.merchGroupDetail.GroupName != this.dbGroupDetail.GroupName)\n    {\n          this.inputGrpEl.focus();   \n            this.validateAsyncExistingGroupName();\n    }           \n        else\n            this.IsGroupNameExists = false; \n   \n  }\n\n    validateAsyncGroupInDelay(): void {\n    let delayMs =  500;\n    //executing after user stopped typing\n    this.delay(() => this.validateAsyncExistingGroupName(), delayMs);\n  }\n\n  validateAsyncExistingGroupName(): void {\n       \n     \n       var URL = this._webapi + 'api/Merc/ValidateExistingMerchGroupDetails/'+this.item.SAPBranchID+'/Group/'+this.merchGroupDetail.GroupName;   \n    \n      if (this.merchGroupDetail.GroupName.length != 0 && this.merchGroupDetail.GroupName != this.dbGroupDetail.GroupName) {       \n       this.isLoading = true;       \n         this.lookupService.sourceUrl = URL;\n         this.lookupService.getRemoteData()\n          .subscribe(\n            resp => {\n              \n              this.IsGroupNameExists = (<any>resp).IsGroupNameExists;\n            },\n            error => null,\n            () => this.isLoading = false //complete\n          );\n      }\n      else\n      {\n          this.IsGroupNameExists = false;\n      }\n    }\n\n\n    checkExistingRouteList():boolean\n    {\n        var result: boolean = false;\n        if(this.routeName.length!=0)\n         {        \n        this.merchGroupDetail.Routes.find((route: any) => {\n            if (route.RouteName == this.routeName)\n            { return result = true; }\n        });     \n        }\n\n        return result;\n    }\n\n\n    validateAsyncRouteName(): void {\n    if (this.routeName.length != 0 && this.checkExistingRouteList())\n    {\n         \n          this.IsRouteNameExists = true;  \n            \n    }\n    else if(this.routeName.length == 0)\n    {\n        this.IsRouteNameExists = false;\n    }           \n        else\n        {\n           // this.inputRouteEl.focus();\n            this.validateAsyncExistingRouteName();\n        }\n            \n   \n  }\n\n    validateAsyncRouteInDelay(): void {\n    let delayMs =  500;\n    //executing after user stopped typing\n    this.delay(() => this.validateAsyncRouteName(), delayMs);\n  }\n\n  validateAsyncExistingRouteName(): void {\n     \n       var URL = this._webapi + 'api/Merc/ValidateExistingMerchGroupDetails/'+this.item.SAPBranchID+'/Route/'+this.routeName;   \n    \n      if (this.routeName.length != 0) {       \n       this.isLoading = true;       \n         this.lookupService.sourceUrl = URL;\n         this.lookupService.getRemoteData()\n          .subscribe(\n            resp => {\n              \n              this.IsRouteNameExists = (<any>resp).IsRouteNameExists;\n            },\n            error => null,\n            () => this.isLoading = false //complete\n          );\n      }\n     \n    }\n\n    addRouteToList():void\n    {\n        if(!this.IsRouteNameExists && this.routeName.length!=0)\n         this.onAddRouteSave();\n    }\n\n\n//  Edit RouteName from the route List\n  \n\n    validateAsyncEditRouteName(route: MerchGroupRoute, i: Number): void {\n    var result: boolean = false;\n    \n\n        if(route.RouteName.length!=0)\n        {\n            route.IsRequired = false;\n\n        for(var n = 0; n< this.merchGroupDetail.Routes.length;n++)\n        {\n             if (n != i)\n            {\n                if(this.merchGroupDetail.Routes[n].RouteName == route.RouteName)\n                {\n                 route.IsRouteNameExists = true;\n                break;\n                }             \n            }\n            else\n            {\n                  route.IsRouteNameExists = false;\n             \n            }\n        }       \n\n        var flag: MerchGroupRoute[];\n        var rName = '';\n        flag = this.merchGroupDetail.Routes.filter((r: any) => {\n            if (r.IsRouteNameExists)\n            { return r; }\n        });\n\n        var rList = this.dbGroupDetailRoutes.filter((d:any) =>\n        {\n             if(route.RouteID == d.RouteID)\n             return d;\n        });\n\n        if(route.RouteID!=null)\n        {\n            if(rList.length>0)            \n               rName = rList[0].RouteName;                       \n        }\n       \n\n        if (flag.length == 0 &&  rName !=route.RouteName && route.RouteID!=null)\n        {\n          \n            this.validateAsyncExistingEditRouteName(route);\n        }\n             \n        else if(flag.length == 0 && route.RouteID==null)\n        {\n          \n            this.validateAsyncExistingEditRouteName(route);\n        }               \n\n      }\n      else\n      {\n          route.IsRouteNameExists = false;\n          route.IsRequired = true;\n      }\n      \n\n            \n   \n  }\n\n    validateAsyncEditRouteInDelay(route:MerchGroupRoute,i:number): void {\n    let delayMs =  500;\n    //executing after user stopped typing\n    this.delay(() => this.validateAsyncEditRouteName(route,i), delayMs);\n  }\n\n  validateAsyncExistingEditRouteName(route : MerchGroupRoute): void {\n     \n       var URL = this._webapi + 'api/Merc/ValidateExistingMerchGroupDetails/'+this.item.SAPBranchID+'/Route/'+route.RouteName;   \n    \n      if (route.RouteName.length != 0) {       \n       this.isLoading = true;       \n         this.lookupService.sourceUrl = URL;\n         this.lookupService.getRemoteData()\n          .subscribe(\n            resp => {\n              \n             var d = (<any>resp);\n\n              if (d.IsRouteNameExists) {\n                    route.IsRouteNameExists = true;\n                }\n                else {\n                    route.IsRouteNameExists = false;                     \n                }                \n            },\n            error => null,\n            () => this.isLoading = false //complete\n          );\n      }\n      else\n      {\n         route.IsRouteNameExists = false;\n      }\n    }\n\n  private delay = (function(){\n    var timer = 0;\n    return function(callback: any, ms: number){\n      clearTimeout(timer);\n      timer = setTimeout(callback, ms);\n    };\n  })();\n\n\n   \n    onMerchGroupCancel() {\n\n        if(this.merchGroupData.length>0)\n        {\n            var detailInput = new MerchGroupDetailInput(this.item.SAPBranchID, this.merchGroupData[0].MerchGroupID);\n         this.getMerchGroupDetail(detailInput);\n         this.ShowSaveMsg = false;\n         if(this.merchGroupData!=null)\n         {\n            this.selectedIdx = 0;\n            this.spanGroupName = true;\n         }\n        }\n        else\n        {\n            this.groupAreaDisplay = false;\n        }\n      \n        \n        \n    }\n\n    ValidationsCheck(): Boolean {\n        var flag: MerchGroupRoute[];\n        var reqList : MerchGroupRoute[];\n        flag = this.merchGroupDetail.Routes.filter((r: any) => {\n            if (r.IsRouteNameExists)\n            { return r; }\n        });\n\n        reqList = this.merchGroupDetail.Routes.filter((r: any) => {\n            if (r.IsRequired)\n            { return r; }\n        });\n\n        \n\n        if (this.IsGroupNameExists || this.IsRouteNameExists || flag.length > 0 || reqList.length >0 || !this.form.valid ) {\n            return false;\n        }\n        else\n            return true;\n    }\n\n   \n    constructor(private dispService: DispserviceService, formbuilder: FormBuilder,public navService: HeadernavService,\n                 elementRef: ElementRef,private lookupService: AsyncValidatorService) {\n\n\n\n        this.form = formbuilder.group({\n            groupName: ['', Validators.compose([Validators.required, Validators.maxLength(50)])],\n            route_name: [],\n            owner : ['',Validators.required]         \n\n        });\n         this.el = elementRef.nativeElement;\n           this.initalize();     \n        \n    }\n\n     initalize() {\n        this.dbGroupDetail = new MerchGroupDetail();\n        this.merchGroupDetail = new MerchGroupDetail();\n        this.merchGroupDetail.MerchGroupID = 0;\n        this.dbGroupDetail.Routes = [];\n        this.merchGroupDetail.Routes = [];\n        //this.route_data = [];\n        this.routeName = '';\n        this.active = false;\n        setTimeout(() => this.active = true, 0);\n        this.IsGroupNameExists = false;\n        this.IsRouteNameExists = false;      \n        this.model4 ='';\n        this.submitted = false;\n        this.IsOwnerValid = true;\n        this.spanGroupName = true;\n        this.dbtempRoutes = [];\n        this.ShowSaveMsg = false;\n        this.routeAreaDisplay = false;\n\n\n    }\n\n    setAddedGroupIndexInList(merchGroupID)\n    {\n        for (var i = 0; i < this.merchGroupData.length; i++) { \n            if (this.merchGroupData[i][\"MerchGroupID\"] == merchGroupID) {                      \n                    this.selectedIdx = i;                 \n                        break;\n                    }\n            }     \n    }\n\n   \n\n    insertMerchGroupData(input: MerchGroupInput) {\n        this.dispService.set(this._webapi + 'api/Merc/InsertUpdateMerchGroupDetails/');\n        this.dispService.post(JSON.stringify(input))\n            .subscribe(res => {\n                var data: any = res;\n             //   this.groupAreaDisplay = false;\n             if(data.ReturnStatus == 1)\n             {\n              this.ShowSaveMsg = true;\n              this.getMerchGroups();\n              if(this.merchGroupDetail.MerchGroupID==0) {\n                  this.merchGroupDetail.MerchGroupID = data.NewGroupID;                   \n                   var merchItem = new MerchGroup();\n                    merchItem.MerchGroupID = data.NewGroupID;\n                    merchItem.GroupName = input.GroupName;\n                    merchItem.SAPBranchID = input.SAPBranchID; \n                    if(this.item.LoggedInUser == this.merchGroupDetail.DefaultOwnerGSN)    \n                    merchItem.IsDefault = true;\n                    else\n                    merchItem.IsDefault = false;         \n                    this.navService.changeToaddMerchGroup(merchItem);    \n              }            \n                 // Refresh inserted data\n                 var detailInput = new MerchGroupDetailInput(this.item.SAPBranchID, this.merchGroupDetail.MerchGroupID);  \n                 this.getMerchGroupDetail(detailInput);\n                \n             }\n             \n             else\n             this.ShowSaveMsg = false;\n                \n                \n\n\n            },\n            error => {\n\n                if (error.status == 401 || error.status == 404) {\n                    //this.notificationService.printErrorMessage('Authentication required');\n                    //this.utilityService.navigateToSignIn();\n                }\n            });\n    }\n\n    getmerchgroupContainer()\n    {\n        var merchgroupsInput: MerchGroupsInput = new MerchGroupsInput(this.item.SAPBranchID);\n        this.dispService.set(this._webapi + 'api/Merc/GetMerchGroupDetailsByBranchID/');\n\n        this.dispService.post(JSON.stringify(merchgroupsInput), true)\n            .subscribe(res => {\n                var d: any = res;\n                this.merchGroupData = d.MerchGroupList;\n\n                this.groupAreaDisplay = true;\n                 if(this.merchGroupData.length>0)\n                 {\n                 var detailInput = new MerchGroupDetailInput(this.item.SAPBranchID, this.merchGroupData[0].MerchGroupID);\n                 this.getMerchGroupDetail(detailInput);\n                  this.selectedIdx = 0;\n                 }\n                 else\n                 {\n                    this.groupAreaDisplay = false;\n                 }\n                 \n               \n\n            },\n\n            error => {\n\n                if (error.status == 401 || error.status == 404) {\n                    //this.notificationService.printErrorMessage('Authentication required');\n                    //this.utilityService.navigateToSignIn();\n                }\n            });\n    }\n\n    getMerchGroups() {\n        var merchgroupsInput: MerchGroupsInput = new MerchGroupsInput(this.item.SAPBranchID);\n        this.dispService.set(this._webapi + 'api/Merc/GetMerchGroupDetailsByBranchID/');\n\n        this.dispService.post(JSON.stringify(merchgroupsInput), true)\n            .subscribe(res => {\n                var d: any = res;\n                this.merchGroupData = d.MerchGroupList;\n                 this.setAddedGroupIndexInList(this.merchGroupDetail.MerchGroupID);\n            },\n\n            error => {\n\n                if (error.status == 401 || error.status == 404) {\n                    \n                }\n            });\n    }\n\n   \n\n\n    getMerchGroupDetail(detailInput: MerchGroupDetailInput) {\n\n\n        this.dispService.set(this._webapi + 'api/Merc/GetMerchGroupDetailsByGroupID/');\n        this.dispService.post(JSON.stringify(detailInput), true)\n            .subscribe(res => {\n                var d: any = res;\n                this.dbGroupDetail = Object.assign({},d);\n                this.merchGroupDetail = d;\n                 this.dbGroupDetailRoutes = [];\n\n               for(var i= 0;i<d.Routes.length;i++)\n               {\n                 var item :any ={};\n                 item.RouteID = this.merchGroupDetail.Routes[i].RouteID;\n                 item.RouteName = this.merchGroupDetail.Routes[i].RouteName;\n\n                   this.dbGroupDetailRoutes.push(item);\n               }\n                var userdetail:User;\n                userdetail = new User();\n                userdetail.DisplayName = this.merchGroupDetail.DefaultOwnerName;\n                userdetail.sAMAccountName = this.merchGroupDetail.DefaultOwnerGSN;\n                this.model4 = this.merchGroupDetail.DefaultOwnerName;\n                \n\n            },\n\n            error => {\n\n                if (error.status == 401 || error.status == 404) {\n                    //this.notificationService.printErrorMessage('Authentication required');\n                    //this.utilityService.navigateToSignIn();\n                }\n            });\n    }\n\n    deleteMerchGroupByID(input: MerchGroupInput) {\n        this.dispService.set(this._webapi + 'api/Merc/DeleteMerchGroup/');\n\n        this.dispService.post(JSON.stringify(input), true)\n            .subscribe(res => {\n                var d: any = res;               \n                 this.getMerchGroups();\n                 var detailInput = new MerchGroupDetailInput(this.item.SAPBranchID, this.merchGroupData[0].MerchGroupID);\n                 this.getMerchGroupDetail(detailInput);\n                 this.ShowSaveMsg = false;\n                 this.selectedIdx = 1;\n            },\n\n            error => {\n\n                if (error.status == 401 || error.status == 404) {\n                    //this.notificationService.printErrorMessage('Authentication required');\n                    //this.utilityService.navigateToSignIn();\n                }\n            });\n    }\n\n   \n\n\n   \n\n\n\n    ngOnInit() {\n                 //Subscribe\n           this.subscription =  this.navService.navItem$.subscribe(item => {this.item = item; this.loadmerchGroupData(item); });\n\n    }\n    ngOnDestroy() {\n    // prevent memory leak when component is destroyed\n    this.subscription.unsubscribe();\n  }\n\n    loadmerchGroupData(item)\n    {\n     this.item = item;\n      this.initalize();\n     if(this.item!=null || this.item!=undefined)\n     this.getmerchgroupContainer();\n\n    }\n\n}\n"]}