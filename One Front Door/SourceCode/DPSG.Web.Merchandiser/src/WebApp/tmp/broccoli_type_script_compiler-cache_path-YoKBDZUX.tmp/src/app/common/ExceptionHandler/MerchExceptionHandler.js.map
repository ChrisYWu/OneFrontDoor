{"version":3,"file":"MerchExceptionHandler.js","sourceRoot":"","sources":["MerchExceptionHandler.ts"],"names":[],"mappings":"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","sourcesContent":["import {Injectable}  from '@angular/core';\r\nimport { MerchException } from './MerchException';\r\nimport { Http,Headers, Response } from '@angular/http';\r\nimport {MerchConstant} from '../../../app/MerchAppConstant';\r\n\r\n@Injectable()\r\nexport class MerchExceptionHandler {\r\n  private _webapi: string = MerchConstant.WebAPI_ENDPOINT;\r\n  public merchExcept: MerchException;  \r\n  constructor(public http: Http) { }\r\n\r\n   call(exception: any, stackTrace?: any, reason?: string): void {\r\n    this.merchExcept = new MerchException(1, 1, '', '', exception.message, stackTrace, '');\r\n    this.insertException(this.merchExcept);   \r\n  }\r\n\r\n  insertException(inputdata: MerchException) {\r\n    this.WebAPIPostCall(inputdata).subscribe(res => {\r\n                var d: any = res;\r\n            },\r\n            error => {\r\n                if (error.status == 401 || error.status == 404) {\r\n                }\r\n            });  \r\n    }\r\n\r\n    WebAPIPostCall(inputdata: MerchException)\r\n      {\r\n        var headers = new Headers();\r\n        var test = MerchConstant.WebAPI_ENDPOINT;\r\n            headers.append('Content-Type', 'application/json');\r\n            return this.http.post(this._webapi + 'api/Merc/InsertException/', JSON.stringify(inputdata), { headers: headers })\r\n                      .map(response => <any>(<Response>response).json());\r\n      }\r\n}\r\n\r\n\r\n@Injectable()\r\nexport class MerchLogger {\r\n\r\n  private _webapi: string = MerchConstant.WebAPI_ENDPOINT; \r\n  public merchExcept: MerchException;\r\n  constructor(public http: Http) { }\r\n\r\n  public log(logMsg: string) {\r\n    console.log(logMsg);\r\n  }\r\n\r\n  public logError(appliationID: number, severityID: number, source: string, userName: string, detail: string, stackTrace: string){\r\n      this.merchExcept = new MerchException(appliationID, severityID, source, userName, detail, stackTrace, '');\r\n      this.insertErrorLog(this.merchExcept);\r\n  }\r\n\r\n  insertErrorLog(inputdata: MerchException) {\r\n      this.WebAPIPostCall(inputdata).subscribe(res => {\r\n                var d: any = res;\r\n            },\r\n            error => {\r\n                if (error.status == 401 || error.status == 404) {\r\n                }\r\n            });  \r\n    }\r\n  \r\n   WebAPIPostCall(inputdata: MerchException)\r\n      {\r\n        var headers = new Headers();\r\n            headers.append('Content-Type', 'application/json');\r\n            return this.http.post(this._webapi + 'api/Merc/InsertException/', JSON.stringify(inputdata), { headers: headers })\r\n                      .map(response => <any>(<Response>response).json());\r\n      }\r\n}\r\n"]}