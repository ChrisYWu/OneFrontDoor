{"version":3,"file":"storelist.component.js","sourceRoot":"","sources":["storelist.component.ts"],"names":[],"mappings":"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","sourcesContent":["\r\nimport { Component, OnInit, Input, Output,EventEmitter } from '@angular/core';\r\nimport {CORE_DIRECTIVES} from '@angular/common';\r\nimport {FilterPipe} from '../../pipes/filter.pipe';\r\nimport {Account, AccountInput, Dispatches, StorePreDispatch, DispatchOutput,Store} from '../../services/dispatch';\r\nimport {DispserviceService } from '../../services/dispservice.service';\r\nimport {MerchConstant} from '../../../app/MerchAppConstant';\r\n\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'app-storelist',\r\n  templateUrl: 'storelist.component.html',\r\n  styleUrls: ['storelist.component.css'],\r\n  pipes: [FilterPipe],\r\n  directives: [CORE_DIRECTIVES]\r\n\r\n})\r\nexport class StorelistComponent implements OnInit {\r\n    \r\n    private _webapi: string = MerchConstant.WebAPI_ENDPOINT;\r\n    public localTabAccts: Array<Account> = [];\r\n    @Input() currentTabAccts: Array<Account>;\r\n\r\n    @Input() routeDataInput: Dispatches;\r\n    @Input() lastModifiedByInput: string;\r\n    @Input() unassignedDelete:string;\r\n    @Output() accountSelected = new EventEmitter();\r\n\r\n\r\n\r\n\r\n  public constructor(public dispService: DispserviceService) {\r\n    \r\n  }\r\n\r\n  pullInfoUpdate() {\r\n\r\n\r\n        let tempStores: Array<Store> = this.routeDataInput.Stores.slice();\r\n\r\n        for (var j = 0; j < tempStores.length; j++) {\r\n            let pullcount = 0;\r\n            for (var k = 0; k < this.routeDataInput.Stores.length; k++) {\r\n                if (tempStores[j].AccountID == this.routeDataInput.Stores[k].AccountID) {\r\n                    pullcount++;\r\n                    if (pullcount == 1) {\r\n                        this.routeDataInput.Stores[k].PullNumber = \"\";\r\n                    }\r\n                    else if (pullcount == 2) {\r\n                        this.routeDataInput.Stores[k].PullNumber = pullcount + \"nd Pull\";\r\n                    }\r\n                    else if (pullcount == 3) {\r\n                        this.routeDataInput.Stores[k].PullNumber = pullcount + \"rd Pull\";\r\n                    }\r\n                    else {\r\n                        this.routeDataInput.Stores[k].PullNumber = pullcount + \"th Pull\";\r\n                    }\r\n                    \r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n  \r\n\r\n   \r\n\r\n    addStore(accountID: number, accountName: string, address: string) {\r\n        this.dispService.set(this._webapi + 'api/Merc/InsertStorePredisp/');\r\n        let storepredispatch: StorePreDispatch = new StorePreDispatch(this.routeDataInput.DispatchDate,\r\n            this.routeDataInput.MerchGroupID,\r\n            this.routeDataInput.RouteID,\r\n            this.routeDataInput.GSN, accountID, this.lastModifiedByInput);\r\n\r\n        this.dispService.post(JSON.stringify(storepredispatch))\r\n            .subscribe(res => {\r\n                var data: any = res;\r\n                let resultInsert: DispatchOutput;\r\n                resultInsert = data;\r\n                if (resultInsert.Message == null) {\r\n                    this.routeDataInput.Stores.push(new Store(accountID, accountName, this.routeDataInput.Stores.length + 1, null));\r\n                    this.pullInfoUpdate();\r\n                    this.accountSelected.emit(\r\n                       { close: 'true'}\r\n                     )\r\n                }\r\n            },\r\n            error => {\r\n\r\n                if (error.status == 401 || error.status == 404) {\r\n                    //this.notificationService.printErrorMessage('Authentication required');\r\n                    //this.utilityService.navigateToSignIn();\r\n                }\r\n            });\r\n  }\r\n\r\n    ngOnInit() {\r\n\r\n        // this.localTabAccts.push(new Account(0, '', ''));\r\n        // if (this.currentTabAccts && this.currentTabAccts.length > 0) {\r\n        //     this.localTabAccts = this.currentTabAccts;\r\n        // }\r\n\r\n    }\r\n\r\n\r\n}\r\n"]}