{"version":3,"file":"storeservice.component.js","sourceRoot":"","sources":["storeservice.component.ts"],"names":[],"mappings":"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","sourcesContent":["\r\nimport {Component, OnInit, Input, ViewEncapsulation, ViewChild} from '@angular/core';\r\nimport {CORE_DIRECTIVES, FORM_DIRECTIVES} from '@angular/common';\r\nimport {MODAL_DIRECTIVES, BS_VIEW_PROVIDERS, ModalDirective} from 'ng2-bootstrap/ng2-bootstrap';\r\nimport {bootstrap}     from '@angular/platform-browser-dynamic';\r\nimport { DispserviceService } from '../../services/dispservice.service';\r\nimport {StoreServiceInput, StoreService, UserMerchGroupInput, UserMerchGroup, ImageInput, ImageDetail, ImageURLInput, Dictionary, ExtendReadSASInput} from './MerchReport';\r\nimport {SearchPipe} from \"ng2-easy-table/app/pipes/header-pipe\";\r\nimport {PaginationPipe} from \"ng2-easy-table/app/pipes/pagination-pipe\";\r\nimport {GlobalSearchPipe} from \"ng2-easy-table/app/pipes/global-search-pipe\";\r\nimport {FiltersService} from \"ng2-easy-table/app/services/filters-service\";\r\nimport {ConfigService} from \"ng2-easy-table/app/services/config-service\";\r\nimport {ResourceService} from \"ng2-easy-table/app/services/resource-service\";\r\nimport {GlobalSearch} from \"ng2-easy-table/app/components/global-search/global-search.component\";\r\nimport {CsvExport} from \"ng2-easy-table/app/components/dropdown/csv-export.component\";\r\nimport {Header} from \"ng2-easy-table/app/components/header/header.component\";\r\nimport {Pagination} from \"ng2-easy-table/app/components/pagination/pagination.component\";\r\nimport {DatePicker} from 'ng2-datepicker/ng2-datepicker';\r\nimport {ChangeNamePipe} from './NamePipe';\r\nimport {MerchConstant} from '../../../app/MerchAppConstant';\r\nimport {MultiselectDropdown, IMultiSelectOption, IMultiSelectSettings, IMultiSelectTexts} from './multiselect-dropdown';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport { HeadernavService } from '../../services/headernav.service';\r\nimport {MerchGroup} from '../../services/planning';\r\nimport { SpinnerComponent } from '../../common/spinner';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'app-storeservice',\r\n    templateUrl: 'storeservice.component.html',\r\n    styleUrls: ['storeservice.component.css'],\r\n    directives: [Header, Pagination, GlobalSearch, CsvExport, DatePicker, FORM_DIRECTIVES, MultiselectDropdown, MODAL_DIRECTIVES, CORE_DIRECTIVES, SpinnerComponent],\r\n    providers: [FiltersService, ResourceService, ConfigService, DispserviceService, HeadernavService],\r\n    viewProviders: [BS_VIEW_PROVIDERS],\r\n    pipes: [SearchPipe, PaginationPipe, GlobalSearchPipe, ChangeNamePipe]\r\n\r\n})\r\n\r\n\r\nexport class StoreserviceComponent implements OnInit {\r\n\r\n    private _webapi: string = MerchConstant.WebAPI_ENDPOINT;\r\n    private mydayWebAPI: string = MerchConstant.MYDAY_WebAPI_ENDPOINT;\r\n\r\n    public isRequesting: boolean;\r\n\r\n    @ViewChild('lgModal') lgModal: ModalDirective;\r\n    item: MerchGroup = new MerchGroup();\r\n    subscription: Subscription;\r\n\r\n    public storeInput: StoreServiceInput;\r\n    public usrGeo: UserMerchGroupInput;\r\n    public usrAllGeo: UserMerchGroup;\r\n    public imgInput: ImageInput;\r\n    public imgDetail: Array<ImageDetail>;\r\n    public imgURLInput: ImageURLInput;\r\n    public reportdata: Array<StoreService>;\r\n    public keys: Array<any>;\r\n    public numberOfItems: number;\r\n    public FromDate: string;\r\n    public ToDate: string;\r\n    public selectedGeo: Array<any> = [];\r\n    public showNoDataMessage: Boolean = false;\r\n    public imgURLList: Array<string> = [];\r\n    public readSASDictionary : Dictionary = {};\r\n\r\n    private mySettings: IMultiSelectSettings = {\r\n        pullRight: false,\r\n        enableSearch: false,\r\n        checkedStyle: 'checkboxes',\r\n        buttonClasses: 'btn btn-default',\r\n        selectionLimit: 50,\r\n        closeOnSelect: false,\r\n        showCheckAll: false,\r\n        showUncheckAll: false,\r\n        dynamicTitleMaxItems: 0,\r\n        maxHeight: '300px',\r\n    };\r\n\r\n    private myTexts: IMultiSelectTexts = {\r\n        checkAll: 'Check all',\r\n        uncheckAll: 'Uncheck all',\r\n        checked: 'checked',\r\n        checkedPlural: 'checked',\r\n        searchPlaceholder: 'Search...',\r\n        defaultTitle: 'Select Groups',\r\n    };\r\n\r\n\r\n    constructor(public filtersService: FiltersService,\r\n        public config: ConfigService,\r\n        public resource: ResourceService,\r\n        public dispService: DispserviceService,\r\n        public navService: HeadernavService) {\r\n        this.numberOfItems = 1;\r\n        this.config.rows = 25;\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        // Set previous week from and to date\r\n        var curr = new Date; // get current date\r\n        var firstday = new Date(curr.setDate(curr.getDate() - curr.getDay() - 7));\r\n        var lastday = new Date(curr.setDate(curr.getDate() - curr.getDay() + 6));\r\n\r\n        this.FromDate = firstday.toISOString().split('T')[0];\r\n        this.ToDate = lastday.toISOString().split('T')[0];\r\n\r\n        this.subscription = this.navService.navItem$\r\n            .subscribe(item => {\r\n                this.item = item;\r\n                if (this.item.MerchGroupID) {\r\n                    this.getMerchGroups(this.item);\r\n                    this.selectedGeo = [];\r\n                    this.selectedGeo[0] = this.item.MerchGroupID;\r\n                    this.loadData();\r\n                }\r\n            }\r\n            );\r\n\r\n    }\r\n\r\n    getImageDetails(imageBlobID: any) {\r\n       this.imgURLList = [];\r\n        if (imageBlobID) {\r\n            //  //Call WebAPI to get the details\r\n            this.dispService.set(this._webapi + 'api/Merc/GetImageDetailByBlobID/');\r\n            this.imgInput = new ImageInput(imageBlobID);\r\n            this.getImageDetailByBlobID(this.imgInput);\r\n        }\r\n        else {\r\n            alert(\"There is no image.\");\r\n        }\r\n    }\r\n\r\n    getEachImageURL() {\r\n        // // Call WebAPI to get list of image URLs\r\n        for (var i = 0; i < this.imgDetail.length; i++) {\r\n            // Call web service to get the URL              \r\n            this.imgURLInput = new ImageURLInput(\r\n                this.imgDetail[i].AbsoluteURL,\r\n                this.imgDetail[i].ContainerID,\r\n                this.imgDetail[i].ReadSAS,\r\n                this.imgDetail[i].IsReadSASValid\r\n            );\r\n            this.getImageURL(this.imgURLInput);\r\n        }\r\n        this.lgModal.show();                                \r\n    }\r\n\r\n    getImageURL(inputdata: ImageURLInput) {\r\n        var imageURL : string;\r\n\r\n        if (inputdata.IsReadSASValid == true)\r\n        {\r\n            imageURL = inputdata.AbsoluteURL + inputdata.ReadSAS;\r\n            this.imgURLList.push(imageURL);\r\n        }\r\n        else \r\n        {\r\n            if (!this.readSASDictionary[inputdata.ContainerID])\r\n            {\r\n                this.dispService.set(this.mydayWebAPI + 'api/Imaging/ExtendContainerReadSAS');\r\n                var extendingReadSASInput = new ExtendReadSASInput();\r\n                extendingReadSASInput.ContainerID = inputdata.ContainerID;\r\n                this.dispService.post(JSON.stringify(extendingReadSASInput), true)\r\n                    .subscribe(res => {\r\n                        var d: any = res;\r\n                        // Add image ReadSAS to Dictionary\r\n                        this.readSASDictionary[inputdata.ContainerID] = d.Response;\r\n                        imageURL = inputdata.AbsoluteURL + this.readSASDictionary[inputdata.ContainerID];            \r\n                        this.imgURLList.push(imageURL);\r\n                    },\r\n                    error => {\r\n                        if (error.status == 401 || error.status == 404) {\r\n                        }\r\n                    });\r\n            }\r\n            else {\r\n                imageURL = inputdata.AbsoluteURL + this.readSASDictionary[inputdata.ContainerID];            \r\n                this.imgURLList.push(imageURL);\r\n            }\r\n        }\r\n    }\r\n  \r\n    getImageDetailByBlobID(inputdata: ImageInput) {\r\n        this.isRequesting = true;\r\n        this.dispService.post(JSON.stringify(inputdata), true)\r\n            .subscribe(res => {\r\n                var d: any = res;\r\n                this.imgDetail = d.Images;\r\n                this.getEachImageURL();\r\n            },\r\n             () => this.stopRefreshing(),\r\n             () => this.stopRefreshing()\r\n            // error => {\r\n            //     if (error.status == 401 || error.status == 404) {\r\n            //     }\r\n            // }            \r\n            );\r\n    }\r\n\r\n      private stopRefreshing() {\r\n        this.isRequesting = false;\r\n    }\r\n\r\n\r\n    optionsUpdated($event) {\r\n        this.selectedGeo = $event;\r\n    }\r\n\r\n    getMerchGroups(itemMerchGroup: MerchGroup): void {\r\n        this.dispService.set(this._webapi + 'api/Merc/GetUserMerchGroups/');\r\n        this.usrGeo = new UserMerchGroupInput(itemMerchGroup.LoggedInUser);\r\n        this.getUserMerchGroups(this.usrGeo);\r\n    }\r\n\r\n    getUserMerchGroups(inputdata: UserMerchGroupInput) {\r\n        this.dispService.post(JSON.stringify(inputdata), true)\r\n            .subscribe(res => {\r\n                var d: any = res;\r\n                this.usrAllGeo = d.UserMerchGroups;\r\n            },\r\n            error => {\r\n                if (error.status == 401 || error.status == 404) {\r\n                }\r\n            });\r\n    }\r\n\r\n    loadData(): void {\r\n        this.storeInput = new StoreServiceInput(this.selectedGeo.join(','), new Date(this.FromDate), new Date(this.ToDate));\r\n        this.getAllStoreReport(this.storeInput);\r\n    }\r\n\r\n    getAllStoreReport(inputdata: StoreServiceInput) {\r\n        this.dispService.set(this._webapi + 'api/Merc/GetStoreServicedReport/');\r\n        this.dispService.post(JSON.stringify(inputdata), true)\r\n            .subscribe(res => {\r\n                var d: any = res;\r\n                this.reportdata = d.StoreServices;\r\n                this.numberOfItems = d.StoreServices.length;\r\n                if (d.StoreServices.length > 0) {\r\n                    this.showNoDataMessage = false;\r\n                    this.keys = Object.keys(d.StoreServices[0]);\r\n                    this.resource.keys = this.keys;\r\n                }\r\n                else {\r\n                    this.showNoDataMessage = true;\r\n                }\r\n\r\n            },\r\n            error => {\r\n                if (error.status == 401 || error.status == 404) {\r\n                }\r\n            });\r\n    }\r\n\r\n    FilterReportData() {\r\n\r\n        if (this.ToDate < this.FromDate) {\r\n            alert(\"To Date cannot be less than From Date.\");\r\n            return;\r\n        }\r\n        else if (this.selectedGeo.length <= 0) {\r\n            alert(\"Please select Geo.\");\r\n            return;\r\n        }\r\n        else if (this.days_between(this.ToDate, this.FromDate) > 31) {\r\n            alert(\"Date range cannot exceed 31 days.\")\r\n            return;\r\n        }\r\n\r\n        this.storeInput = new StoreServiceInput(this.selectedGeo.join(','), new Date(this.FromDate), new Date(this.ToDate));\r\n        this.getAllStoreReport(this.storeInput);\r\n    }\r\n\r\n    public orderBy(key: string) {\r\n        this.reportdata = this.resource.sortBy(key);\r\n    }\r\n\r\n    public parseDate(input) {\r\n        var parts = input.match(/(\\d+)/g);\r\n        return new Date(parts[0], parts[1] - 1, parts[2]); // months are 0-based\r\n    }\r\n\r\n\r\n    public days_between(date1, date2) {\r\n\r\n        // The number of milliseconds in one day\r\n        var ONE_DAY = 1000 * 60 * 60 * 24\r\n\r\n        var d1 = this.parseDate(date1);\r\n        var d2 = this.parseDate(date2);\r\n\r\n        // Convert both dates to milliseconds\r\n        var date1_ms = d1.getTime();\r\n        var date2_ms = d2.getTime();\r\n\r\n        // Calculate the difference in milliseconds\r\n        var difference_ms = Math.abs(date1_ms - date2_ms);\r\n\r\n        // Convert back to days and return\r\n        return Math.round(difference_ms / ONE_DAY);\r\n    }\r\n\r\n}\r\n"]}